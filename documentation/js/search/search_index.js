var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AngularCsv.html",[0,0.288,1,1.795]],["body/classes/AngularCsv.html",[0,0.291,1,1.812,2,1.687,3,0.128,4,0.184,5,0.099,6,3.809,7,1.343,8,0.238,9,0.316,10,1.495,11,3.139,12,3.312,13,1.715,14,2.503,15,4.201,16,3.139,17,0.754,18,3.717,19,3.517,20,3.517,21,3.517,22,3.517,23,3.517,24,3.517,25,3.917,26,3.717,27,0.467,28,2.583,29,0.543,30,1.778,31,1.117,32,3.717,33,0.964,34,0.02,35,0.549,36,0.333,37,0.415,38,3.139,39,1.857,40,2.428,41,0.545,42,0.334,43,2.428,44,2.428,45,2.204,46,2.428,47,2.583,48,2.428,49,2.583,50,2.204,51,1.252,52,2.428,53,2.376,54,2.056,55,2.428,56,3.948,57,2.799,58,1.414,59,2.428,60,2.583,61,2.056,62,3.998,63,2.428,64,2.428,65,1.288,66,2.428,67,2.37,68,2.583,69,2.428,70,2.376,71,2.376,72,1.195,73,0.266,74,0.291,75,1.927,76,1.927,77,1.927,78,1.927,79,1.095,80,1.927,81,1.927,82,1.927,83,2.376,84,1.927,85,2.376,86,2.376,87,2.376,88,1.439,89,1.687,90,1.687,91,1.687,92,1.687,93,1.687,94,1.687,95,1.687,96,1.687,97,1.561,98,1.687,99,1.687,100,1.687,101,1.687,102,1.687,103,1.687,104,0.715,105,1.687,106,1.687,107,1.687,108,1.687,109,1.687,110,1.687,111,1.609,112,2.204,113,1.552,114,1.552,115,1.552,116,1.552,117,1.552,118,1.552,119,1.552,120,1.552,121,1.552,122,1.552,123,1.552,124,1.552,125,1.552,126,1.552,127,1.687,128,1.687,129,1.439,130,1.687,131,2.583,132,1.687,133,1.124,134,1.055,135,2.076,136,1.687,137,2.583,138,1.439,139,2.583,140,1.687,141,2.019,142,1.456,143,1.687,144,1.687,145,3.502,146,1.687,147,4.4,148,1.687,149,1.687,150,1.687,151,1.687,152,1.687,153,2.583,154,1.904,155,1.687,156,1.687,157,1.687,158,1.687,159,1.687,160,1.687,161,0.964,162,1.687,163,1.687,164,1.687,165,2.583,166,2.583,167,2.583,168,1.687,169,1.687,170,1.687,171,1.552,172,1.687,173,1.687,174,1.687,175,1.687,176,1.687,177,1.687,178,1.687,179,1.687,180,1.687,181,1.687,182,1.687,183,1.687,184,1.687,185,1.687,186,4.361,187,1.687,188,1.687,189,3.791,190,3.517,191,3.517,192,2.583,193,1.687,194,1.927,195,1.927,196,1.927,197,2.056,198,1.687,199,1.687,200,2.583,201,1.687,202,1.687,203,3.139,204,1.687,205,2.583,206,1.687,207,1.687,208,1.687,209,3.139,210,1.687,211,1.687,212,1.687,213,1.687,214,1.439,215,1.552,216,1.439,217,1.552,218,1.552,219,1.687,220,1.812,221,1.552,222,2.056,223,1.449,224,1.812,225,1.687,226,1.687,227,1.552,228,1.687,229,1.687,230,1.552,231,1.439,232,1.552,233,1.687,234,1.687,235,2.583,236,0.009,237,0.009]],["title/injectables/AuthenticationService.html",[238,0.96,239,2.815]],["body/injectables/AuthenticationService.html",[0,0.215,3,0.145,4,0.112,5,0.112,8,0.145,9,0.347,10,1.618,13,1.425,14,0.969,17,0.829,27,0.787,29,0.566,31,1.168,33,1.288,34,0.02,35,0.76,36,0.351,37,0.555,41,1.094,42,0.793,51,1.372,58,1.598,65,1.36,73,0.145,79,1.134,97,1.71,104,1.235,111,2.085,142,1.462,154,1.55,223,1.074,236,0.01,237,0.01,238,1.066,239,3.126,240,1.266,241,2.364,242,4.874,243,4.183,244,4.874,245,4.183,246,5.393,247,4.183,248,5.393,249,5.393,250,4.183,251,3.508,252,6.036,253,5.393,254,5.393,255,4.088,256,3.508,257,4.874,258,2.754,259,6.036,260,4.343,261,4.874,262,3.748,263,4.088,264,2.754,265,4.088,266,4.088,267,5.761,268,3.508,269,4.088,270,4.088,271,4.088,272,4.088,273,4.088,274,4.088,275,4.088,276,4.088,277,3.508,278,2.754,279,3.448,280,2.754,281,4.088,282,4.088,283,4.088,284,4.088,285,4.088,286,4.088,287,2.754,288,4.088,289,5.393,290,5.393,291,2.754,292,2.754,293,4.183,294,4.088,295,2.754,296,2.754,297,2.754,298,2.754,299,4.088,300,2.754,301,2.754,302,4.088,303,2.89,304,2.754,305,1.914,306,2.754,307,2.754,308,2.754,309,2.754,310,2.754,311,0.782,312,0.357,313,2.364,314,2.754,315,1.524,316,4.874,317,1.914,318,2.754,319,2.754,320,1.197,321,1.197,322,2.106,323,1.197,324,2.754,325,2.754,326,5.393,327,4.088,328,5.393,329,2.754,330,4.088,331,4.088,332,2.754,333,4.874,334,4.874,335,4.183,336,2.364,337,2.754,338,2.754,339,2.754,340,2.754,341,2.754,342,2.754,343,4.088,344,2.754,345,2.754,346,4.874,347,4.874,348,4.088,349,2.754,350,2.754,351,4.088,352,3.508,353,2.754,354,2.754,355,2.754,356,2.754,357,2.754,358,2.754,359,2.754,360,4.874,361,2.754,362,2.754,363,5.761,364,2.754,365,2.754,366,2.754,367,3.508,368,2.754,369,4.088,370,4.088,371,4.088,372,2.754,373,2.754,374,2.754,375,2.754,376,5.393,377,4.874,378,2.754,379,4.088,380,2.754,381,2.754,382,3.126,383,2.754,384,2.754,385,2.754,386,2.754,387,2.754,388,2.754,389,2.754,390,2.754,391,2.754,392,2.754,393,3.116,394,2.754,395,2.754,396,2.754,397,2.754,398,4.088,399,1.914,400,2.754,401,2.754,402,2.754,403,2.754,404,2.754]],["title/classes/AutoSearch.html",[0,0.288,405,2.353]],["body/classes/AutoSearch.html",[0,0.437,2,3.882,3,0.294,4,0.227,5,0.227,8,0.294,9,0.557,29,0.572,31,1.073,34,0.019,35,0.872,36,0.345,37,0.602,73,0.345,74,0.437,236,0.017,237,0.017,405,4.586,406,4.272,407,3.968,408,5.586,409,5.586,410,4.554]],["title/components/BaseFieldComponent.html",[411,0.538,412,1.114]],["body/components/BaseFieldComponent.html",[0,0.17,3,0.18,4,0.089,5,0.139,8,0.115,9,0.29,10,0.995,13,1.533,17,0.692,27,0.657,29,0.527,31,1.217,33,0.9,34,0.02,35,0.745,36,0.384,37,0.387,41,1.458,42,0.936,51,1.296,58,1.224,65,0.514,72,1.685,73,0.115,79,0.729,97,1.352,104,0.657,111,1.086,133,0.659,141,2.438,142,1.228,161,1.019,222,1.204,223,2.146,236,0.009,237,0.009,311,0.745,312,0.282,323,1.484,411,0.616,412,1.665,413,1.201,414,0.806,415,0.766,416,1.868,417,1.086,418,1.993,419,1.409,420,0.766,421,2.293,422,2.163,423,1.56,424,2.022,425,1.264,426,2.327,427,2.528,428,2.055,429,1.938,430,2.055,431,2.022,432,2.327,433,2.327,434,1.665,435,2.327,436,2.327,437,2.327,438,2.327,439,1.596,440,1.665,441,2.327,442,1.57,443,1.644,444,1.409,445,2.055,446,1.482,447,1.409,448,1.831,449,1.644,450,1.862,451,1.644,452,1.644,453,1.644,454,2.055,455,2.384,456,2.384,457,2.384,458,2.384,459,1.644,460,2.384,461,1.644,462,1.644,463,1.061,464,1.92,465,2.384,466,1.824,467,3.416,468,2.177,469,1.948,470,2.177,471,1.644,472,2.177,473,1.34,474,2.177,475,2.177,476,1.938,477,2.177,478,2.177,479,2.177,480,1.482,481,2.177,482,1.409,483,2.177,484,2.177,485,2.177,486,1.407,487,2.177,488,2.177,489,2.177,490,2.177,491,1.57,492,2.177,493,2.177,494,2.177,495,2.177,496,1.596,497,2.177,498,2.177,499,2.177,500,2.177,501,2.177,502,1.665,503,2.177,504,2.177,505,2.177,506,2.177,507,2.177,508,2.177,509,1.665,510,2.177,511,2.177,512,2.177,513,2.177,514,2.177,515,1.665,516,2.327,517,2.327,518,1.665,519,1.665,520,1.665,521,1.665,522,1.57,523,1.665,524,1.665,525,1.665,526,1.665,527,1.665,528,2.177,529,2.177,530,1.513,531,2.177,532,1.204,533,2.177,534,0.627,535,1.061,536,1.001,537,4.215,538,1.033,539,2.177,540,2.177,541,2.177,542,2.177,543,2.177,544,2.177,545,2.177,546,2.177,547,2.177,548,2.177,549,2.177,550,4.774,551,3.416,552,2.177,553,2.177,554,2.177,555,2.177,556,1.868,557,2.177,558,1.868,559,2.177,560,2.177,561,3.416,562,2.177,563,4.215,564,2.177,565,2.177,566,4.215,567,2.177,568,2.177,569,4.215,570,4.215,571,5.186,572,4.215,573,5.503,574,5.503,575,3.416,576,2.177,577,2.177,578,5.186,579,2.177,580,5.186,581,2.177,582,5.186,583,2.177,584,5.186,585,2.177,586,2.177,587,3.416,588,3.416,589,4.215,590,3.416,591,2.177,592,3.416,593,2.177,594,2.177,595,2.177,596,2.177,597,2.177,598,1.665,599,3.416,600,2.177,601,2.177,602,2.177,603,2.177,604,2.177,605,3.416,606,2.177,607,3.416,608,2.177,609,2.177,610,2.177,611,2.177,612,2.177,613,0.806,614,1.201,615,1.264,616,0.806,617,1.767,618,0.806,619,0.692,620,0.806,621,0.806,622,0.659,623,0.806,624,0.627,625,0.766,626,0.806,627,0.659,628,0.806,629,1.264,630,0.627,631,0.891,632,1.264,633,0.659,634,0.659,635,0.806,636,0.806,637,0.627,638,0.659,639,0.806,640,0.659,641,0.806,642,0.659,643,0.806,644,0.659,645,0.806,646,0.597,647,0.806,648,0.659,649,0.806,650,0.806]],["title/components/CheckboxComponent.html",[411,0.538,622,1.114]],["body/components/CheckboxComponent.html",[0,0.21,3,0.212,4,0.11,5,0.164,8,0.142,9,0.341,10,0.949,13,1.566,17,0.815,27,0.518,29,0.539,31,1.238,33,1.026,34,0.02,35,0.754,36,0.393,37,0.442,41,1.548,42,0.966,51,1.365,58,1.259,65,0.635,72,1.135,73,0.142,79,0.695,97,0.702,104,0.518,133,0.814,141,2.296,161,0.858,236,0.01,237,0.01,311,0.739,312,0.349,323,1.169,411,0.702,412,2.296,413,1.413,414,0.996,415,0.946,417,1.278,418,1.695,419,1.607,420,0.946,421,2.377,422,2.246,423,0.996,424,1.567,425,0.996,426,2.6,427,2.918,428,1.959,429,1.847,430,1.959,431,2.334,432,2.344,433,2.344,434,1.959,435,3.024,436,2.344,437,2.344,438,2.344,439,1.782,440,1.959,441,2.344,442,1.847,443,1.567,444,1.343,445,1.959,446,1.413,447,1.343,448,1.746,449,1.567,450,1.567,451,1.567,452,1.567,453,1.567,454,1.959,455,2.211,456,2.211,457,2.211,458,2.211,459,1.567,460,2.211,461,1.567,462,1.567,463,1.312,464,2.112,465,2.623,466,2.006,469,1.695,471,1.05,473,0.856,476,1.237,480,0.946,482,1.343,486,1.259,491,1.237,496,0.9,502,1.312,509,1.312,515,1.312,516,1.959,517,1.959,518,1.312,519,1.312,520,1.312,521,1.312,522,1.237,523,1.312,524,1.312,525,1.312,526,1.312,527,1.312,534,0.775,535,1.312,536,1.237,538,0.814,598,4.078,613,0.996,614,1.413,615,1.487,616,0.996,617,1.974,618,0.996,619,0.856,620,0.996,621,0.996,622,1.613,623,0.996,624,0.775,625,0.946,626,0.996,627,0.814,628,0.996,629,1.487,630,0.775,631,1.048,632,1.487,633,0.814,634,0.814,635,0.996,636,0.996,637,0.775,638,0.814,639,0.996,640,0.814,641,0.996,642,0.814,643,0.996,644,0.814,645,0.996,646,0.737,647,0.996,648,0.814,649,0.996,650,0.996,651,1.05,652,1.455,653,2.31,654,2.083,655,4.018,656,1.487,657,4.808,658,1.487,659,4.018,660,4.808,661,4.018,662,4.018,663,3.913,664,1.395,665,1.395,666,1.395,667,1.395,668,1.395,669,1.395,670,1.395,671,1.395,672,1.395,673,1.395,674,1.395,675,1.395,676,1.395,677,1.395,678,1.395,679,1.395,680,1.395,681,1.395,682,1.395,683,1.395,684,1.395,685,1.395,686,1.721,687,1.395,688,1.395,689,1.395,690,1.395,691,1.395,692,1.395,693,1.395,694,1.395,695,1.395,696,1.395,697,2.31,698,1.596,699,1.489,700,1.395,701,1.395,702,1.395,703,1.312,704,1.395,705,1.395,706,1.395,707,2.452,708,4.018]],["title/injectables/ConfigService.html",[238,0.96,709,2.558]],["body/injectables/ConfigService.html",[0,0.261,3,0.175,4,0.136,5,0.221,8,0.175,9,0.399,14,2.328,17,0.951,27,0.641,29,0.425,31,1.173,33,1.375,34,0.02,35,0.847,36,0.371,37,0.592,41,1.053,42,0.969,51,1.342,58,0.787,61,1.843,65,1.467,73,0.175,111,2.307,133,1.419,135,1.532,142,1.375,161,1.159,223,1.299,236,0.012,237,0.012,238,1.223,240,1.532,256,4.026,305,3.26,311,0.875,312,0.431,315,1.843,317,2.316,320,1.448,321,1.448,405,4.232,407,1.843,415,2.072,418,2.049,424,2.513,448,2.699,486,1.282,491,2.157,530,2.316,709,3.26,710,2.86,711,5.43,712,5.43,713,5.43,714,5.43,715,4.691,716,4.691,717,4.691,718,4.691,719,5.43,720,4.691,721,5.43,722,2.316,723,3.768,724,3.332,725,2.999,726,4.691,727,5.894,728,3.332,729,4.026,730,3.26,731,5.894,732,4.691,733,3.26,734,4.691,735,3.332,736,3.332,737,3.332,738,4.691,739,3.332,740,3.332,741,3.332,742,4.691,743,3.332,744,3.332,745,3.332,746,4.66,747,3.332,748,3.332,749,3.332,750,3.332,751,3.332,752,1.976,753,2.86,754,3.332,755,1.976,756,3.332,757,2.86,758,2.316,759,1.843,760,5.43,761,3.332,762,3.332,763,3.332,764,5.894,765,4.691,766,3.332,767,4.691,768,4.691,769,3.332,770,3.142,771,3.332,772,3.332,773,3.332,774,3.332,775,3.26,776,3.332,777,3.332,778,3.332,779,3.332,780,3.332,781,3.332,782,3.332,783,2.86,784,3.332,785,5.894,786,4.691,787,4.691,788,4.691,789,4.691,790,4.691,791,3.332,792,4.691,793,4.691,794,4.691,795,4.691,796,3.332,797,3.332]],["title/components/ConfirmDialogComponent.html",[411,0.538,624,1.06]],["body/components/ConfirmDialogComponent.html",[0,0.29,3,0.266,4,0.151,5,0.206,8,0.195,9,0.429,10,0.875,13,1.709,14,2.169,17,1.024,27,0.972,29,0.505,31,1.09,33,0.791,34,0.02,35,0.698,36,0.34,37,0.341,41,1.134,42,0.695,51,0.751,58,0.875,72,0.875,73,0.195,104,0.713,134,1.61,142,0.791,154,1.605,236,0.013,237,0.013,311,0.654,312,0.48,411,0.839,412,1.121,413,1.775,414,1.371,415,1.303,417,1.605,419,1.92,420,1.303,421,2.482,422,2.352,423,1.371,425,1.371,439,2.062,482,1.238,538,1.121,613,1.371,614,1.775,615,1.869,616,1.371,617,2.283,618,1.371,619,1.178,620,1.371,621,1.371,622,1.121,623,1.371,624,1.776,625,2.525,626,1.371,627,1.121,628,1.371,629,1.869,630,1.067,631,1.683,632,1.869,633,1.121,634,1.121,635,1.371,636,1.371,637,1.067,638,1.121,639,1.371,640,1.121,641,1.371,642,1.121,643,1.371,644,1.121,645,1.371,646,1.015,647,1.371,648,1.121,649,1.371,650,1.371,651,1.445,652,2.062,656,1.869,658,1.869,707,2.321,798,4.737,799,4.737,800,3.18,801,5.744,802,5.049,803,4.393,804,3.684,805,4.486,806,2.833,807,3.992,808,4.287,809,5.049,810,3.705,811,2.575,812,3.861,813,3.705,814,3.705,815,5.049,816,3.705,817,2.833,818,2.833,819,1.921,820,2.833,821,3.861,822,2.833,823,5.049,824,5.049,825,4.929,826,5.744,827,5.744,828,3.705,829,5.049,830,5.049,831,3.861,832,2.575,833,3.509,834,2.833,835,2.368,836,2.575,837,2.833,838,2.833,839,2.833,840,4.393,841,2.833,842,4.717,843,2.833,844,3.509,845,2.833,846,2.833,847,2.833,848,2.833,849,2.994,850,3.705,851,2.833,852,2.575,853,3.509,854,3.509,855,2.833]],["title/classes/CsvConfigConsts.html",[0,0.288,88,2.183]],["body/classes/CsvConfigConsts.html",[0,0.288,1,1.168,2,1.665,3,0.126,4,0.182,5,0.097,6,3.859,7,1.325,8,0.236,9,0.313,10,1.057,11,1.665,12,2.779,13,1.668,14,2.435,15,3.809,16,1.665,19,1.665,20,1.665,21,1.665,22,1.665,23,1.665,24,1.665,25,4.186,28,1.665,29,0.546,30,1.561,31,1.134,34,0.02,36,0.339,38,2.556,41,1.555,42,0.953,45,1.42,47,1.665,49,1.665,53,1.531,54,1.325,56,3.212,57,2.035,58,1.057,60,1.665,61,1.325,62,3.492,65,1.28,67,2.183,68,1.665,70,1.531,71,1.531,72,1.057,73,0.265,74,0.288,75,1.907,76,1.907,77,1.907,78,1.907,79,1.091,80,1.907,81,1.907,82,1.907,83,2.351,84,1.907,85,2.351,86,2.351,87,2.351,88,2.181,89,3.112,90,2.556,91,3.112,92,2.556,93,3.112,94,3.112,95,3.112,96,3.112,97,1.755,98,3.112,99,2.556,100,3.112,101,2.556,102,3.112,103,3.112,104,0.862,105,3.112,106,3.112,107,3.112,108,3.112,109,3.112,110,3.112,111,1.597,112,2.181,113,1.531,114,1.531,115,1.531,116,1.531,117,1.531,118,1.531,119,1.531,120,1.531,121,1.531,122,1.531,123,1.531,124,1.531,125,1.531,126,1.531,127,1.665,128,1.665,129,1.42,130,1.665,131,2.556,132,1.665,133,1.113,134,1.041,135,2.059,136,1.665,137,2.556,138,1.42,139,2.556,140,1.665,141,2.007,142,1.452,143,1.665,144,1.665,145,3.489,146,1.665,147,4.383,148,1.665,149,1.665,150,1.665,151,1.665,152,1.665,153,2.556,154,1.894,155,1.665,156,1.665,157,1.665,158,1.665,159,1.665,160,1.665,161,0.956,162,1.665,163,1.665,164,1.665,165,2.556,166,2.556,167,2.556,168,1.665,169,1.665,170,1.665,171,1.531,172,1.665,173,1.665,174,1.665,175,1.665,176,1.665,177,1.665,178,1.665,179,1.665,180,1.665,181,1.665,182,1.665,183,1.665,184,1.665,185,1.665,186,4.349,187,1.665,188,1.665,189,3.768,190,3.492,191,3.492,192,2.556,193,1.665,194,1.907,195,1.907,196,1.907,197,2.035,198,1.665,199,1.665,200,2.556,201,1.665,202,1.665,203,3.112,204,1.665,205,2.556,206,1.665,207,1.665,208,1.665,209,3.112,210,1.665,211,1.665,212,1.665,213,1.665,214,1.42,215,1.531,216,1.42,217,1.531,218,1.531,219,1.665,220,1.793,221,1.531,222,2.035,223,1.434,224,1.793,225,1.665,226,1.665,227,1.531,228,1.665,229,1.665,230,1.531,231,1.42,232,1.531,233,1.665,234,1.665,235,2.556,236,0.009,237,0.009,856,2.395,857,2.395,858,2.395,859,2.395,860,2.395,861,2.395,862,2.395,863,2.395,864,2.395,865,2.395,866,2.395,867,2.395,868,2.395,869,2.395,870,2.395,871,2.395]],["title/injectables/DataConnectorService.html",[238,0.96,872,2.558]],["body/injectables/DataConnectorService.html",[0,0.272,3,0.183,4,0.141,5,0.141,8,0.183,9,0.411,17,0.98,27,0.669,29,0.597,30,1.391,31,1.15,33,1.458,34,0.02,35,0.83,36,0.377,37,0.628,41,1.085,42,0.826,51,1.385,56,3.089,57,3.073,67,2.741,72,0.821,73,0.254,74,0.272,104,0.669,142,1.539,154,1.909,161,0.742,236,0.012,237,0.012,238,1.26,240,1.598,279,3.838,311,0.777,312,0.45,315,1.923,317,2.416,320,1.51,321,1.51,322,5.553,382,3.695,424,1.884,482,1.162,538,1.051,722,2.416,723,3.838,725,3.089,755,2.061,759,1.923,835,3.838,872,3.358,873,4.209,874,2.658,875,3.551,876,4.832,877,4.832,878,5.152,879,4.832,880,4.832,881,4.832,882,4.147,883,6.231,884,3.476,885,5.749,886,4.147,887,3.476,888,4.147,889,3.476,890,4.147,891,5.415,892,5.415,893,3.476,894,4.147,895,3.476,896,3.476,897,4.147,898,3.476,899,4.147,900,3.476,901,4.591,902,4.248,903,2.983,904,4.147,905,3.358,906,2.983,907,2.983,908,2.673,909,4.591,910,2.983,911,2.983,912,4.147,913,2.983,914,2.983,915,2.983,916,2.983,917,4.767,918,2.983,919,2.983,920,2.983,921,2.983,922,2.983,923,2.983,924,2.658,925,2.983,926,2.658,927,2.983]],["title/injectables/DataFlattnerService.html",[238,0.96,752,2.183]],["body/injectables/DataFlattnerService.html",[0,0.289,3,0.195,4,0.151,5,0.151,8,0.195,13,1.355,17,1.023,25,3.971,27,1.105,29,0.395,31,1.056,33,1.316,34,0.02,35,0.749,36,0.384,37,0.567,39,3.859,42,0.509,45,2.991,51,1.25,61,3.176,65,1.679,73,0.266,74,0.289,79,0.64,97,0.965,104,0.712,111,2.301,135,2.835,142,1.421,145,2.047,154,1.177,220,2.46,223,2.239,224,2.46,231,2.991,236,0.013,237,0.013,238,1.316,240,1.702,305,4.285,311,0.479,312,0.479,320,1.608,321,1.608,486,1.191,752,2.991,770,2.799,873,3.947,928,2.83,929,5.291,930,5.714,931,5.046,932,5.291,933,3.701,934,4.33,935,5.951,936,3.701,937,4.33,938,3.701,939,4.33,940,4.33,941,3.701,942,3.99,943,3.701,944,3.701,945,3.176,946,3.176,947,3.176,948,4.927,949,4.33,950,3.176,951,3.176,952,4.33,953,2.194,954,3.176,955,4.927,956,5.291,957,3.176,958,3.176,959,4.33,960,3.176,961,3.176,962,3.176,963,3.176,964,5.537,965,3.176,966,3.176,967,3.176,968,3.176,969,3.176,970,3.176,971,3.176,972,4.33,973,4.33,974,4.715,975,4.33,976,4.33,977,2.991,978,3.176,979,4.927,980,5.537,981,3.176,982,3.176,983,3.176]],["title/injectables/DataStoreService.html",[238,0.96,262,2.558]],["body/injectables/DataStoreService.html",[0,0.339,3,0.228,4,0.176,5,0.176,8,0.228,9,0.476,10,1.713,13,1.788,17,1.135,27,1.194,31,1.198,33,1.325,34,0.02,35,0.754,36,0.366,37,0.57,41,1.393,42,0.935,51,1.411,58,1.604,65,1.465,73,0.228,79,1.073,142,1.325,161,1.486,236,0.014,237,0.014,238,1.46,240,1.991,243,5.326,245,5.326,262,3.892,311,0.725,312,0.561,315,2.395,320,1.881,321,1.881,335,3.716,352,3.716,746,5.832,873,4.369,984,3.716,985,6.207,986,6.562,987,6.562,988,6.562,989,5.6,990,5.6,991,5.6,992,5.6,993,4.33,994,6.226,995,4.33,996,4.33,997,5.6,998,4.33,999,5.6,1000,4.33,1001,5.6,1002,4.33,1003,4.33,1004,5.632,1005,4.33,1006,5.6,1007,4.33,1008,4.33,1009,4.33,1010,4.33,1011,4.33]],["title/components/DateInputComponent.html",[411,0.538,627,1.114]],["body/components/DateInputComponent.html",[0,0.203,3,0.206,4,0.106,5,0.159,8,0.137,9,0.332,10,1.11,13,1.552,17,0.792,27,0.499,29,0.529,31,1.238,33,1.117,34,0.02,35,0.766,36,0.392,37,0.481,41,1.519,42,0.951,51,1.401,58,1.446,65,0.612,72,1.11,73,0.137,79,0.676,97,0.676,104,0.752,133,0.784,141,2.267,161,0.834,236,0.01,237,0.01,311,0.793,312,0.336,323,1.127,411,0.687,412,2.29,413,1.374,414,0.96,415,0.912,417,1.242,418,1.664,419,1.572,420,0.912,421,2.363,422,2.232,423,0.96,424,1.524,425,0.96,426,2.552,427,2.877,428,1.905,429,1.796,430,1.905,431,2.302,432,2.738,433,2.292,434,1.905,435,2.292,436,2.292,437,2.292,438,2.292,439,1.75,440,1.905,441,2.292,442,1.796,443,1.524,444,1.306,445,1.905,446,1.374,447,1.306,448,1.698,449,2.041,450,1.524,451,1.524,452,1.524,453,1.524,454,1.905,455,2.162,456,2.162,457,2.162,458,2.162,459,1.524,460,2.162,461,1.524,462,1.524,463,1.264,464,2.078,465,2.582,466,1.974,469,1.664,471,2.19,473,0.824,476,1.192,480,0.912,482,1.306,486,1.236,491,1.192,496,0.867,502,1.264,509,1.264,515,1.264,516,1.905,517,1.905,518,1.264,519,1.264,520,1.264,521,1.264,522,1.192,523,1.264,524,1.264,525,1.264,526,1.264,527,1.264,534,0.747,535,1.264,536,1.192,538,0.784,613,0.96,614,1.374,615,1.446,616,0.96,617,1.937,618,0.96,619,0.824,620,0.96,621,0.96,622,0.784,623,0.96,624,0.747,625,0.912,626,0.96,627,1.583,628,2.388,629,1.446,630,0.747,631,1.019,632,1.446,633,0.784,634,0.784,635,0.96,636,0.96,637,0.747,638,0.784,639,0.96,640,0.784,641,0.96,642,0.784,643,0.96,644,0.784,645,0.96,646,0.711,647,0.96,648,0.784,649,0.96,650,0.96,651,1.011,652,1.699,654,2.026,656,1.446,658,1.446,663,3.902,664,1.344,665,1.344,666,1.344,667,1.344,668,1.344,669,1.344,670,1.344,671,1.344,672,1.344,673,1.344,674,1.344,675,1.344,676,1.344,677,1.344,678,1.344,679,1.344,680,1.344,681,1.344,682,1.344,683,1.344,684,1.344,685,2.026,687,1.344,688,1.344,689,1.344,690,1.344,691,1.344,692,1.344,693,1.344,694,1.344,695,1.344,696,1.344,699,1.434,700,1.344,701,1.344,702,1.344,703,1.264,704,1.344,705,1.344,706,1.344,1012,4.294,1013,4.294,1014,1.802,1015,3.596,1016,2.988,1017,3.908,1018,5.234,1019,5.234,1020,5.257,1021,2.593,1022,3.908,1023,2.593,1024,2.593,1025,2.593,1026,1.658,1027,2.225,1028,2.225,1029,2.317,1030,2.593,1031,2.593,1032,2.593,1033,2.593,1034,2.593,1035,1.802,1036,1.537,1037,3.908,1038,2.593,1039,3.908,1040,2.593]],["title/injectables/DialogService.html",[238,0.96,1041,2.558]],["body/injectables/DialogService.html",[0,0.274,3,0.184,4,0.143,5,0.143,8,0.184,13,1.748,14,2.118,17,0.985,27,0.674,29,0.512,31,1.099,33,1.433,34,0.02,35,0.816,36,0.353,37,0.617,39,4.839,51,1.327,58,1.546,73,0.184,104,0.674,111,2.237,141,2.065,142,1.19,220,3.702,236,0.012,237,0.012,238,1.267,240,1.611,311,0.819,312,0.454,320,1.522,321,1.522,614,1.708,624,1.009,625,1.708,630,1.009,631,1.707,637,1.009,759,1.938,798,2.435,799,2.435,803,4.266,805,2.435,807,4.83,808,4.666,819,1.816,977,3.307,1041,3.377,1042,3.007,1043,4.859,1044,4.859,1045,4.859,1046,4.859,1047,4.859,1048,3.007,1049,4.187,1050,3.503,1051,4.859,1052,6.714,1053,7.345,1054,3.503,1055,6.327,1056,4.859,1057,4.859,1058,3.503,1059,4.859,1060,7.109,1061,3.503,1062,4.859,1063,4.859,1064,3.503,1065,4.859,1066,3.503,1067,4.787,1068,4.859,1069,3.503,1070,3.086,1071,3.007,1072,2.435,1073,2.435,1074,4.17,1075,2.435,1076,2.435,1077,6.845,1078,3.503,1079,5.578,1080,6.547,1081,5.578,1082,3.503,1083,3.503,1084,3.503,1085,3.503,1086,4.859,1087,2.435,1088,3.503]],["title/components/ErrorDialogSimpleComponent.html",[411,0.538,630,1.06]],["body/components/ErrorDialogSimpleComponent.html",[0,0.284,3,0.262,4,0.148,5,0.203,8,0.191,9,0.424,10,0.859,13,1.654,14,2.152,17,1.011,27,0.959,29,0.445,31,1.05,33,0.776,34,0.02,35,0.691,36,0.322,37,0.334,41,1.119,42,0.686,51,0.737,58,0.859,72,0.859,73,0.191,104,0.7,134,1.58,142,0.776,154,1.585,236,0.013,237,0.013,311,0.645,312,0.471,411,0.831,412,1.1,413,1.753,414,1.346,415,1.279,417,1.585,419,1.901,420,1.279,421,2.477,422,2.346,423,1.346,425,1.346,439,2.046,482,1.216,538,2.183,613,1.346,614,1.753,615,1.845,616,1.346,617,2.265,618,1.346,619,1.156,620,1.346,621,1.346,622,1.1,623,1.346,624,1.047,625,1.279,626,1.346,627,1.1,628,1.346,629,1.845,630,1.762,631,1.961,632,1.845,633,1.1,634,1.1,635,1.346,636,1.346,637,1.047,638,1.1,639,1.346,640,1.1,641,1.346,642,1.1,643,1.346,644,1.1,645,1.346,646,0.996,647,1.346,648,1.1,649,1.346,650,1.346,651,1.418,652,2.003,656,1.845,658,1.845,707,2.292,733,2.527,803,4.904,804,3.663,806,2.781,807,3.953,808,4.253,811,2.527,812,3.813,817,2.781,818,2.781,819,1.885,820,2.781,821,3.813,822,2.781,825,4.278,831,3.813,832,2.527,833,3.465,834,2.781,835,2.325,836,2.527,837,2.781,838,2.781,839,2.781,840,4.35,841,2.781,842,4.68,843,2.781,844,3.465,845,2.781,846,2.781,847,2.781,848,2.781,849,3.373,851,2.781,852,2.527,853,3.465,854,3.465,855,2.781,1072,4.603,1073,4.603,1089,2.781,1090,4.278,1091,4.882,1092,4.278,1093,4.278,1094,3.121,1095,3.121,1096,3.121,1097,4.985,1098,3.637,1099,4.985,1100,3.637,1101,4.985,1102,4.985,1103,4.985,1104,6.12,1105,6.12,1106,4.985,1107,4.278,1108,3.637,1109,3.121,1110,4.278,1111,3.637]],["title/components/FileInputComponent.html",[411,0.538,633,1.114]],["body/components/FileInputComponent.html",[0,0.206,3,0.208,4,0.107,5,0.273,8,0.139,9,0.336,10,0.933,13,1.558,17,0.801,27,0.507,29,0.531,31,1.238,33,1.013,34,0.02,35,0.748,36,0.393,37,0.436,41,1.524,42,0.954,51,1.376,58,1.335,65,0.622,72,1.335,73,0.139,79,0.684,97,0.687,104,0.507,111,1.257,133,0.797,135,1.818,141,2.279,161,1.013,224,1.927,236,0.01,237,0.01,311,0.732,312,0.341,323,1.144,411,0.693,412,2.292,413,1.39,414,0.975,415,0.926,417,1.257,418,1.677,419,1.586,420,0.926,421,2.369,422,2.238,423,0.975,424,1.542,425,0.975,426,2.572,427,2.894,428,1.927,429,1.818,430,1.927,431,2.315,432,2.314,433,2.314,434,1.927,435,2.314,436,2.314,437,2.314,438,2.314,439,1.763,440,1.927,441,2.314,442,1.818,443,1.542,444,1.321,445,1.927,446,1.39,447,1.321,448,1.718,449,1.542,450,1.542,451,1.542,452,1.542,453,1.542,454,1.927,455,2.182,456,2.182,457,2.182,458,2.182,459,1.542,460,2.182,461,1.542,462,1.542,463,1.284,464,2.092,465,2.599,466,1.988,469,1.677,471,1.027,473,0.837,476,1.211,480,0.926,482,1.321,486,1.245,491,1.211,496,0.88,502,1.284,509,1.284,515,1.284,516,1.927,517,1.927,518,1.284,519,1.284,520,1.284,521,1.284,522,1.211,523,1.284,524,1.284,525,1.284,526,1.284,527,1.284,534,0.758,535,1.284,536,1.211,538,0.797,556,2.26,558,2.26,613,0.975,614,1.39,615,1.463,616,0.975,617,1.952,618,0.975,619,0.837,620,0.975,621,0.975,622,0.797,623,0.975,624,0.758,625,0.926,626,0.975,627,0.797,628,0.975,629,1.463,630,0.758,631,1.031,632,1.463,633,1.596,634,0.797,635,0.975,636,0.975,637,0.758,638,0.797,639,0.975,640,0.797,641,0.975,642,0.797,643,0.975,644,0.797,645,0.975,646,0.722,647,0.975,648,0.797,649,0.975,650,0.975,651,1.027,652,1.596,654,2.049,656,1.463,658,1.463,663,3.907,664,1.365,665,1.365,666,1.365,667,1.365,668,1.365,669,1.365,670,1.365,671,1.365,672,1.365,673,1.365,674,1.365,675,1.365,676,1.365,677,1.365,678,1.365,679,1.365,680,1.365,681,1.365,682,1.365,683,1.365,684,1.365,685,1.365,687,1.365,688,1.365,689,1.365,690,1.365,691,1.365,692,1.365,693,1.365,694,1.365,695,1.365,696,1.365,697,2.26,698,1.561,699,1.457,700,1.365,701,1.365,702,1.365,703,1.284,704,1.365,705,1.365,706,1.365,1014,1.83,1015,3.63,1016,3.023,1112,4.034,1113,4.034,1114,5.275,1115,4.746,1116,3.393,1117,2.26,1118,2.634,1119,1.83,1120,2.634,1121,2.634,1122,3.953,1123,2.634,1124,2.634,1125,2.634,1126,2.634,1127,2.634,1128,2.634,1129,2.634,1130,2.634,1131,2.634,1132,3.953]],["title/components/FormbuilderComponent.html",[411,0.538,634,1.114]],["body/components/FormbuilderComponent.html",[0,0.371,3,0.312,4,0.193,5,0.241,8,0.25,17,1.203,27,1.246,31,0.971,34,0.019,35,0.721,51,0.961,58,1.401,72,1.119,73,0.25,236,0.015,237,0.015,311,0.614,312,0.614,411,0.946,412,1.434,413,2.086,414,1.755,415,1.667,417,1.886,419,2.164,420,1.667,421,2.548,422,2.404,423,1.755,425,2.196,439,2.268,464,2.586,482,1.585,538,1.434,613,1.755,614,2.086,615,2.196,616,1.755,617,2.512,618,1.755,619,1.507,620,1.755,621,1.755,622,1.434,623,1.755,624,1.365,625,1.667,626,1.755,627,1.434,628,1.755,629,2.196,630,1.365,631,1.547,632,2.196,633,1.434,634,2.053,635,2.397,636,1.755,637,1.365,638,1.434,639,1.755,640,1.434,641,1.755,642,1.434,643,1.755,644,1.434,645,1.755,646,1.299,647,1.755,648,1.434,649,1.755,650,1.755,651,1.849,1133,4.069,1134,6.475,1135,4.741,1136,4.741]],["title/modules/FormbuilderModule.html",[1137,3.159,1138,2.558]],["body/modules/FormbuilderModule.html",[0,0.224,3,0.151,4,0.117,5,0.117,17,0.581,25,2.328,31,0.469,34,0.02,51,0.581,73,0.151,135,1.318,142,0.612,236,0.011,237,0.011,311,0.992,312,0.371,412,1.852,424,1.118,466,1.48,534,0.825,536,1.318,619,2.196,622,2.09,624,1.763,627,2.09,630,1.763,631,1.434,633,2.09,634,2.159,637,1.763,638,2.09,640,2.09,642,2.09,644,2.09,646,1.893,648,2.09,703,1.397,709,2.925,733,1.992,752,2.496,753,2.459,755,1.699,798,1.992,799,1.992,819,1.486,1012,2.192,1013,2.192,1020,3.612,1028,2.459,1029,1.699,1036,2.496,1070,3.859,1071,2.459,1072,1.992,1073,1.992,1074,3.612,1075,1.992,1076,1.992,1112,2.192,1113,2.192,1138,5.323,1139,2.192,1140,2.925,1141,2.459,1142,2.866,1143,2.459,1144,2.459,1145,3.648,1146,3.612,1147,1.992,1148,2.459,1149,2.866,1150,4.209,1151,4.209,1152,4.209,1153,4.989,1154,2.866,1155,5.498,1156,4.989,1157,2.866,1158,4.209,1159,3.612,1160,2.192,1161,4.209,1162,2.866,1163,4.209,1164,2.866,1165,4.209,1166,2.866,1167,4.209,1168,2.866,1169,4.209,1170,2.866,1171,4.209,1172,2.866,1173,4.209,1174,2.866,1175,4.209,1176,2.866,1177,4.209,1178,2.866,1179,4.209,1180,2.866,1181,4.209,1182,2.866,1183,4.209,1184,2.866,1185,4.209,1186,2.866,1187,4.209,1188,2.866,1189,4.209,1190,2.866,1191,4.209,1192,2.866,1193,4.209,1194,2.866,1195,4.989,1196,4.209,1197,4.209,1198,2.866,1199,4.209,1200,4.209,1201,2.866,1202,2.192,1203,2.192,1204,4.989,1205,2.866,1206,2.866,1207,2.866,1208,2.866,1209,4.209,1210,4.209,1211,4.209,1212,2.459,1213,2.459,1214,2.866,1215,4.209,1216,2.459,1217,2.866,1218,2.866,1219,1.992,1220,2.866,1221,2.866,1222,4.209,1223,1.832,1224,4.209,1225,1.992,1226,4.209,1227,1.992,1228,4.209,1229,1.992,1230,4.209,1231,2.866,1232,4.209,1233,2.866,1234,2.866,1235,2.866,1236,2.866,1237,2.866,1238,4.989,1239,4.209,1240,2.866,1241,2.866]],["title/injectables/FormbuilderService.html",[238,0.96,1242,2.815]],["body/injectables/FormbuilderService.html",[0,0.451,3,0.304,4,0.235,5,0.235,27,1.356,31,0.944,34,0.019,73,0.304,236,0.017,237,0.017,238,1.741,240,2.652,311,0.747,312,0.747,320,2.506,321,2.506,1242,5.106,1243,4.95,1244,5.768]],["title/interfaces/IAutoCompleteOptions.html",[74,0.288,1245,2.036]],["body/interfaces/IAutoCompleteOptions.html",[3,0.277,4,0.214,5,0.214,8,0.277,9,0.537,29,0.411,34,0.019,36,0.392,37,0.699,73,0.277,74,0.411,79,1.172,223,2.049,236,0.016,237,0.016,279,4.332,305,4.392,486,1.771,1245,3.495,1246,1.59,1247,4.509,1248,7.031,1249,7.031,1250,7.031,1251,7.031,1252,7.031,1253,7.031,1254,5.255]],["title/interfaces/ICodeEntry.html",[74,0.288,1255,1.908]],["body/interfaces/ICodeEntry.html",[3,0.25,4,0.193,5,0.193,8,0.25,9,0.504,29,0.597,30,1.365,34,0.02,35,0.787,36,0.341,37,0.545,42,0.962,50,4.023,73,0.357,74,0.531,79,1.026,133,1.434,236,0.015,237,0.015,311,0.936,312,0.614,407,2.623,418,1.886,443,1.849,444,1.983,446,1.667,447,1.983,449,1.849,450,1.849,451,1.849,452,1.849,453,1.849,459,1.849,461,1.849,462,1.849,469,2.059,473,1.886,480,2.086,486,1.401,496,2.164,532,2.623,534,1.365,770,3.308,804,2.623,1070,2.623,1223,3.031,1245,3.282,1246,1.434,1255,3.357,1256,3.031,1257,3.295,1258,4.5,1259,4.5,1260,3.157,1261,2.892,1262,3.295,1263,3.295,1264,3.031,1265,3.295,1266,3.295,1267,3.295,1268,3.295,1269,2.811,1270,3.295,1271,3.282]],["title/interfaces/ICustomValidation.html",[74,0.288,473,1.17]],["body/interfaces/ICustomValidation.html",[0,0.461,3,0.247,4,0.191,5,0.191,8,0.247,9,0.501,13,1.75,29,0.592,34,0.02,35,0.716,36,0.374,37,0.671,42,0.646,65,1.107,73,0.247,74,0.367,79,1.114,223,2.298,236,0.015,237,0.015,399,5.07,444,1.568,446,1.649,473,1.874,532,3.26,631,1.68,805,3.26,1147,4.698,1246,1.419,1269,2.781,1272,3.588,1273,3.588,1274,5.801,1275,6.444,1276,6.444,1277,5.977,1278,4.096,1279,4.026,1280,4.026,1281,4.026,1282,4.026,1283,4.026,1284,4.026,1285,4.026,1286,4.026,1287,4.026,1288,5.53,1289,4.026,1290,4.026,1291,4.026,1292,4.026,1293,4.026,1294,4.026,1295,4.026]],["title/interfaces/IDialogConfig.html",[74,0.288,1278,2.558]],["body/interfaces/IDialogConfig.html",[0,0.457,3,0.244,4,0.189,5,0.189,8,0.244,9,0.497,13,1.747,29,0.582,34,0.02,35,0.711,36,0.379,37,0.68,42,0.638,65,1.094,73,0.244,74,0.362,79,1.108,220,3.549,223,2.281,236,0.015,237,0.015,399,5.059,444,1.55,446,1.63,473,1.474,532,3.236,631,1.671,805,3.222,1147,4.678,1246,1.402,1269,2.749,1272,3.545,1273,3.545,1274,3.978,1277,5.02,1278,3.222,1279,3.978,1280,5.776,1281,5.776,1282,5.776,1283,3.978,1284,3.978,1285,3.978,1286,3.978,1287,3.978,1288,5.5,1289,3.978,1290,3.978,1291,3.978,1292,3.978,1293,3.978,1294,3.978,1295,3.978,1296,6.409,1297,6.409]],["title/interfaces/IField.html",[74,0.288,418,1.17]],["body/interfaces/IField.html",[3,0.201,4,0.156,5,0.156,8,0.201,9,0.438,29,0.598,30,1.798,34,0.02,35,0.817,36,0.397,37,0.709,42,0.898,50,2.265,73,0.329,74,0.488,79,1.08,133,1.89,236,0.013,237,0.013,311,0.89,312,0.495,407,2.114,418,1.855,443,1.49,444,2.296,446,2.197,447,2.18,449,2.436,450,2.436,451,2.436,452,2.436,453,2.436,459,2.436,461,2.436,462,2.436,469,2.184,473,1.986,480,2.197,486,1.475,496,2.18,532,2.114,534,1.1,770,1.863,804,3.456,1070,2.114,1223,2.443,1245,3.456,1246,1.156,1255,3.239,1256,2.443,1257,2.655,1258,4.855,1259,4.855,1260,3.18,1261,3.046,1262,2.655,1263,2.655,1264,2.443,1265,4.342,1266,4.342,1267,2.655,1268,4.342,1269,3.46,1270,4.055,1271,2.852]],["title/interfaces/IFlatObject.html",[74,0.288,942,2.558]],["body/interfaces/IFlatObject.html",[0,0.318,3,0.214,4,0.165,5,0.165,13,1.42,25,3.328,27,0.782,29,0.47,31,0.665,34,0.02,36,0.36,42,0.559,45,3.184,61,2.971,65,1.692,73,0.283,74,0.318,79,0.702,97,1.059,104,0.782,111,2.334,135,2.943,142,1.46,145,2.247,154,1.291,220,2.618,223,2.346,224,2.618,236,0.014,237,0.014,238,1.401,311,0.526,312,0.526,320,1.765,321,1.765,486,1.268,752,2.408,770,3.121,873,3.184,928,3.106,929,3.486,930,5.164,932,3.486,934,3.486,935,5.494,937,3.486,939,3.486,940,3.486,942,4.182,945,3.486,946,3.486,947,3.486,948,5.164,949,4.609,950,3.486,951,3.486,952,4.609,953,2.408,954,3.486,955,5.164,956,5.494,957,3.486,958,3.486,959,4.609,960,3.486,961,3.486,962,3.486,963,3.486,964,5.714,965,3.486,966,3.486,967,3.486,968,3.486,969,3.486,970,3.486,971,3.486,972,4.609,973,4.609,974,4.896,975,4.609,976,4.609,977,3.184,978,3.486,979,5.164,980,5.714,981,3.486,982,3.486,983,3.486,1246,1.229,1298,4.062,1299,4.062]],["title/interfaces/IForm.html",[74,0.288,1300,2.815]],["body/interfaces/IForm.html",[3,0.286,4,0.221,5,0.221,8,0.286,9,0.548,17,1.307,29,0.576,31,0.889,33,1.159,34,0.019,35,0.895,36,0.362,37,0.499,51,1.101,73,0.286,74,0.425,236,0.016,237,0.016,311,0.835,418,2.049,448,3.089,471,2.118,476,3.384,534,1.564,1246,1.643,1271,3.005,1300,4.929,1301,4.662,1302,6.445,1303,6.445,1304,5.432]],["title/interfaces/IFormObj.html",[74,0.288,1271,2.036]],["body/interfaces/IFormObj.html",[3,0.251,4,0.194,5,0.194,8,0.251,9,0.505,29,0.595,30,1.37,34,0.02,35,0.867,36,0.313,42,0.819,50,2.822,73,0.358,74,0.531,79,1.029,133,1.44,236,0.015,237,0.015,311,0.937,312,0.616,407,3.759,418,2.16,443,1.856,444,1.988,446,1.674,447,1.988,449,1.856,450,1.856,451,1.856,452,1.856,453,1.856,459,1.856,461,1.856,462,1.856,469,2.062,473,1.891,480,2.091,486,1.404,496,2.168,532,2.633,534,1.37,770,2.321,804,2.633,1070,2.633,1223,3.043,1245,3.29,1246,1.44,1255,3.083,1256,3.043,1257,3.308,1258,4.508,1259,4.508,1260,3.163,1261,2.9,1262,3.308,1263,3.308,1264,3.043,1265,3.308,1266,3.308,1267,3.308,1268,3.308,1269,2.822,1270,3.308,1271,3.869]],["title/interfaces/IHTMLAttributes.html",[74,0.288,480,1.294]],["body/interfaces/IHTMLAttributes.html",[3,0.242,4,0.187,5,0.187,8,0.242,9,0.494,29,0.598,30,1.322,34,0.02,35,0.859,36,0.364,37,0.679,42,0.801,50,2.724,73,0.353,74,0.525,79,1.16,133,1.39,236,0.015,237,0.015,311,0.93,312,0.595,407,2.541,418,1.849,443,2.616,444,1.944,446,1.615,447,2.313,449,1.791,450,1.791,451,1.791,452,1.791,453,1.791,459,1.791,461,1.791,462,1.791,469,2.029,473,1.849,480,2.244,486,1.584,496,2.133,532,2.541,534,1.322,770,2.24,804,2.541,1070,2.541,1223,2.937,1245,3.217,1246,1.39,1255,3.015,1256,2.937,1257,3.193,1258,4.435,1259,4.435,1260,3.111,1261,2.835,1262,3.193,1263,4.662,1264,4.288,1265,3.193,1266,3.193,1267,3.193,1268,3.193,1269,2.724,1270,3.193,1271,3.217]],["title/interfaces/ISliderConfig.html",[74,0.288,1260,1.795]],["body/interfaces/ISliderConfig.html",[3,0.285,4,0.22,5,0.22,8,0.285,9,0.546,34,0.019,36,0.387,73,0.285,74,0.423,79,1.319,236,0.016,237,0.016,486,1.736,1246,1.636,1260,3.134,1264,4.538,1305,4.64,1306,7.098,1307,7.098,1308,7.098,1309,7.098,1310,7.098]],["title/interfaces/ITableHeader.html",[74,0.288,1311,2.353]],["body/interfaces/ITableHeader.html",[0,0.238,1,1.486,3,0.16,4,0.124,5,0.244,8,0.16,9,0.374,10,1.039,12,1.686,14,1.817,27,0.587,29,0.552,30,1.268,34,0.02,36,0.298,37,0.52,41,0.684,54,1.686,67,1.324,72,1.336,73,0.298,74,0.344,75,1.58,76,1.58,77,1.58,78,1.58,79,1.082,80,1.58,81,1.58,82,1.58,84,1.58,97,1.476,104,1.089,111,2.139,134,2.246,142,1.377,154,1.8,161,1.409,194,1.58,195,1.58,196,1.58,197,1.686,236,0.011,237,0.011,303,2.61,311,0.885,312,0.395,393,3.304,411,0.643,417,0.969,419,1.472,421,1.019,422,0.969,431,1.189,439,1.019,447,1.019,464,1.63,469,2.139,471,1.717,486,1.477,534,0.878,631,0.795,646,0.835,652,0.922,656,1.128,658,1.128,730,2.119,758,3.592,775,2.119,819,1.58,875,1.949,908,1.686,953,3.709,977,1.807,1029,2.61,1035,2.119,1036,1.807,1049,3.06,1145,2.283,1219,2.119,1225,2.119,1227,2.119,1229,2.119,1246,0.922,1261,2.147,1311,3.304,1312,1.949,1313,4.329,1314,4.329,1315,4.329,1316,2.331,1317,2.331,1318,3.367,1319,3.367,1320,3.367,1321,2.331,1322,3.367,1323,3.367,1324,3.367,1325,2.331,1326,2.331,1327,3.06,1328,3.06,1329,2.331,1330,2.331,1331,2.331,1332,2.331,1333,2.331,1334,2.331,1335,2.331,1336,3.953,1337,2.331,1338,2.331,1339,3.06,1340,2.331,1341,2.331,1342,2.331,1343,2.331,1344,2.331,1345,2.331,1346,2.331,1347,2.331,1348,2.331,1349,2.331,1350,2.331,1351,3.367,1352,2.331,1353,2.331,1354,2.331,1355,2.331,1356,2.331,1357,2.331,1358,2.331,1359,2.331,1360,2.331,1361,2.331,1362,2.331,1363,2.331,1364,2.331,1365,2.331,1366,2.331,1367,3.367,1368,2.331,1369,2.331,1370,4.591,1371,2.331,1372,3.367,1373,2.331,1374,2.331,1375,2.331,1376,3.06,1377,2.331,1378,3.367,1379,2.331,1380,3.367,1381,2.331,1382,2.331,1383,2.331,1384,2.331,1385,2.331,1386,2.331,1387,2.331,1388,2.331,1389,3.367,1390,3.367,1391,2.331,1392,2.331,1393,3.592,1394,2.331,1395,2.331,1396,2.331,1397,2.331,1398,3.367,1399,3.367,1400,2.331,1401,3.367,1402,2.331,1403,2.331,1404,2.331,1405,2.331,1406,2.331,1407,3.367,1408,2.331,1409,2.331,1410,3.367,1411,2.331,1412,3.367,1413,2.331,1414,2.331,1415,2.331,1416,2.331,1417,2.331,1418,2.331,1419,2.331,1420,2.331,1421,2.331,1422,2.331,1423,2.331,1424,2.331,1425,2.331,1426,2.331,1427,2.331,1428,2.331,1429,2.331,1430,2.331,1431,2.331,1432,2.331,1433,2.331,1434,2.331,1435,2.331,1436,2.331,1437,2.331,1438,2.331,1439,2.331,1440,2.331,1441,2.331,1442,2.331,1443,2.331,1444,2.331,1445,3.367,1446,2.331,1447,3.953,1448,3.367,1449,2.331,1450,3.953,1451,3.367,1452,2.331,1453,2.331,1454,2.331,1455,2.331,1456,2.331]],["title/interfaces/ITableViewOptions.html",[74,0.288,1261,1.795]],["body/interfaces/ITableViewOptions.html",[0,0.231,1,1.443,3,0.156,4,0.12,5,0.241,8,0.156,9,0.366,10,1.017,12,1.637,14,1.787,27,0.569,29,0.538,30,1.241,34,0.02,36,0.366,37,0.513,41,0.664,54,1.637,67,1.286,72,1.318,73,0.294,74,0.337,75,1.534,76,1.534,77,1.534,78,1.534,79,1.254,80,1.534,81,1.534,82,1.534,84,1.534,97,1.456,104,1.074,111,2.123,134,2.208,142,1.364,154,1.775,161,1.398,194,1.534,195,1.534,196,1.534,197,1.637,236,0.011,237,0.011,303,2.555,311,0.879,312,0.383,393,3.249,411,0.629,417,0.941,419,1.44,421,0.989,422,0.941,431,1.154,439,0.989,447,0.989,464,1.595,469,2.123,471,1.68,486,1.318,534,0.852,631,0.772,646,0.811,652,0.895,656,1.095,658,1.095,730,2.057,758,3.532,775,2.057,819,1.534,875,1.892,908,1.637,953,3.671,977,1.754,1029,2.555,1035,2.057,1036,1.754,1049,2.995,1145,2.234,1219,2.057,1225,2.057,1227,2.057,1229,2.057,1246,0.895,1261,2.478,1311,2.755,1312,1.892,1313,2.263,1314,2.263,1315,2.263,1316,2.263,1317,2.263,1318,3.295,1319,3.295,1320,3.295,1321,2.263,1322,3.295,1323,3.295,1324,3.295,1325,2.263,1326,2.263,1327,3.88,1328,2.995,1329,4.269,1330,4.269,1331,4.269,1332,4.269,1333,4.269,1334,4.269,1335,4.269,1336,3.886,1337,2.263,1338,2.263,1339,2.995,1340,2.263,1341,2.263,1342,2.263,1343,2.263,1344,2.263,1345,2.263,1346,2.263,1347,2.263,1348,2.263,1349,2.263,1350,2.263,1351,3.295,1352,2.263,1353,2.263,1354,2.263,1355,2.263,1356,2.263,1357,2.263,1358,2.263,1359,2.263,1360,2.263,1361,2.263,1362,2.263,1363,2.263,1364,2.263,1365,2.263,1366,2.263,1367,3.295,1368,2.263,1369,2.263,1370,4.537,1371,2.263,1372,3.295,1373,2.263,1374,2.263,1375,2.263,1376,2.995,1377,2.263,1378,3.295,1379,2.263,1380,3.295,1381,2.263,1382,2.263,1383,2.263,1384,2.263,1385,2.263,1386,2.263,1387,2.263,1388,2.263,1389,3.295,1390,3.295,1391,2.263,1392,2.263,1393,3.532,1394,2.263,1395,2.263,1396,2.263,1397,2.263,1398,3.295,1399,3.295,1400,2.263,1401,3.295,1402,2.263,1403,2.263,1404,2.263,1405,2.263,1406,2.263,1407,3.295,1408,2.263,1409,2.263,1410,3.295,1411,2.263,1412,3.295,1413,2.263,1414,2.263,1415,2.263,1416,2.263,1417,2.263,1418,2.263,1419,2.263,1420,2.263,1421,2.263,1422,2.263,1423,2.263,1424,2.263,1425,2.263,1426,2.263,1427,2.263,1428,2.263,1429,2.263,1430,2.263,1431,2.263,1432,2.263,1433,2.263,1434,2.263,1435,2.263,1436,2.263,1437,2.263,1438,2.263,1439,2.263,1440,2.263,1441,2.263,1442,2.263,1443,2.263,1444,2.263,1445,3.295,1446,2.263,1447,3.886,1448,3.295,1449,2.263,1450,3.886,1451,3.295,1452,2.263,1453,2.263,1454,2.263,1455,2.263,1456,2.263]],["title/interfaces/IValidator.html",[74,0.288,496,1.23]],["body/interfaces/IValidator.html",[3,0.275,4,0.213,5,0.213,8,0.275,9,0.535,29,0.529,34,0.019,36,0.388,37,0.702,73,0.275,74,0.408,79,1.262,236,0.016,237,0.016,323,3.049,455,3.226,456,3.226,457,3.226,458,3.226,460,3.226,486,1.793,496,2.105,522,3.226,1246,1.58,1457,4.483]],["title/components/InfoDialogSimpleComponent.html",[411,0.538,637,1.06]],["body/components/InfoDialogSimpleComponent.html",[0,0.288,3,0.383,4,0.15,5,0.205,8,0.194,9,0.427,10,0.87,13,1.659,14,2.164,17,1.02,27,0.968,29,0.448,31,1.055,33,0.787,34,0.02,35,0.696,36,0.324,37,0.339,41,1.13,42,0.693,51,0.747,58,0.87,72,0.87,73,0.194,104,0.709,134,1.601,142,0.787,154,1.821,236,0.013,237,0.013,311,0.651,312,0.477,411,0.837,412,1.115,413,1.769,414,1.364,415,1.296,417,1.6,419,1.915,420,1.296,421,2.481,422,2.35,423,1.364,425,1.364,439,2.057,482,1.232,538,1.115,613,1.364,614,1.769,615,1.862,616,1.364,617,2.278,618,1.364,619,1.172,620,1.364,621,1.364,622,1.115,623,1.364,624,1.061,625,1.296,626,1.364,627,1.115,628,1.364,629,1.862,630,1.061,631,1.964,632,1.862,633,1.115,634,1.115,635,1.364,636,1.364,637,1.772,638,1.115,639,1.364,640,1.115,641,1.364,642,1.115,643,1.364,644,1.115,645,1.364,646,1.01,647,1.364,648,1.115,649,1.364,650,1.364,651,1.437,652,2.012,656,1.862,658,1.862,707,2.313,733,2.562,804,3.678,806,2.819,807,3.981,808,4.277,811,2.562,812,3.848,817,2.819,818,2.819,819,1.911,820,2.819,821,3.848,822,2.819,831,3.848,832,2.562,833,3.497,834,2.819,835,2.356,836,2.562,837,2.819,838,2.819,839,2.819,840,4.707,841,2.819,842,3.848,843,2.819,844,3.497,845,2.819,846,2.819,847,2.819,848,2.819,849,3.396,851,2.819,852,2.562,853,3.497,854,3.497,855,3.848,1067,5.529,1075,4.621,1076,4.621,1089,2.819,1090,4.318,1091,4.916,1092,4.318,1093,4.318,1094,3.163,1095,3.163,1096,3.163,1107,4.318,1109,3.163,1110,4.318,1458,5.031,1459,3.686,1460,5.031,1461,3.686,1462,5.031,1463,3.686,1464,3.686,1465,3.686,1466,4.318]],["title/interfaces/MenuNode.html",[74,0.288,410,2.558]],["body/interfaces/MenuNode.html",[0,0.438,3,0.295,4,0.228,5,0.228,8,0.295,9,0.558,29,0.572,34,0.019,35,0.889,36,0.346,37,0.603,73,0.346,74,0.438,236,0.017,237,0.017,405,4.197,406,4.286,407,4.048,410,5.086,1246,1.695]],["title/interfaces/Navigator.html",[74,0.288,129,2.183]],["body/interfaces/Navigator.html",[0,0.32,1,1.343,3,0.145,4,0.198,5,0.112,6,1.524,7,1.524,8,0.257,9,0.347,10,1.151,11,1.914,12,2.983,13,1.703,14,2.494,15,3.995,16,1.914,19,1.914,20,1.914,21,1.914,22,1.914,23,1.914,24,1.914,25,3.948,28,1.914,29,0.522,30,1.659,34,0.02,36,0.215,37,0.376,38,2.841,45,1.633,47,1.914,49,1.914,53,1.761,54,1.524,56,3.448,57,2.261,58,1.151,60,1.914,61,1.524,62,3.748,65,1.273,67,2.343,68,1.914,70,1.761,71,1.761,72,1.151,73,0.284,74,0.32,75,2.119,76,2.119,77,2.119,78,2.119,79,1.134,80,2.119,81,2.119,82,2.119,83,2.613,84,2.119,85,2.613,86,2.613,87,2.613,88,1.633,89,1.914,90,1.914,91,1.914,92,1.914,93,1.914,94,1.914,95,1.914,96,1.914,97,1.629,98,1.914,99,1.914,100,1.914,101,1.914,102,1.914,103,1.914,104,0.787,105,1.914,106,1.914,107,1.914,108,1.914,109,1.914,110,1.914,111,1.715,112,2.424,113,1.761,114,1.761,115,1.761,116,1.761,117,1.761,118,1.761,119,1.761,120,1.761,121,1.761,122,1.761,123,1.761,124,1.761,125,1.761,126,1.761,127,1.914,128,1.914,129,2.424,130,3.748,131,2.841,132,1.914,133,1.237,134,1.197,135,2.241,136,1.914,137,2.841,138,1.633,139,2.841,140,1.914,141,2.133,142,1.491,143,1.914,144,1.914,145,3.627,146,1.914,147,4.557,148,1.914,149,1.914,150,1.914,151,1.914,152,1.914,153,2.841,154,1.987,155,1.914,156,1.914,157,1.914,158,1.914,159,1.914,160,1.914,161,1.04,162,1.914,163,1.914,164,1.914,165,2.841,166,2.841,167,2.841,168,1.914,169,1.914,170,1.914,171,1.761,172,1.914,173,1.914,174,1.914,175,1.914,176,1.914,177,1.914,178,1.914,179,1.914,180,1.914,181,1.914,182,1.914,183,1.914,184,1.914,185,1.914,186,4.467,187,1.914,188,1.914,189,4.004,190,3.748,191,3.748,192,2.841,193,1.914,194,2.119,195,2.119,196,2.119,197,2.261,198,1.914,199,1.914,200,2.841,201,1.914,202,1.914,203,3.388,204,1.914,205,2.841,206,1.914,207,1.914,208,1.914,209,3.388,210,1.914,211,1.914,212,1.914,213,1.914,214,1.633,215,1.761,216,1.633,217,1.761,218,1.761,219,1.914,220,2.629,221,1.761,222,2.261,223,1.594,224,1.993,225,1.914,226,1.914,227,1.761,228,1.914,229,1.914,230,1.761,231,1.633,232,1.761,233,1.914,234,1.914,235,2.841,236,0.01,237,0.01,1246,0.833]],["title/interfaces/Options.html",[30,1.06,74,0.288]],["body/interfaces/Options.html",[0,0.304,1,1.258,3,0.136,4,0.191,5,0.105,6,1.427,7,1.427,8,0.247,9,0.331,10,1.107,11,1.793,12,2.888,13,1.687,14,2.467,15,4.196,16,1.793,19,1.793,20,1.793,21,1.793,22,1.793,23,1.793,24,1.793,25,3.907,28,1.793,29,0.566,30,1.696,34,0.02,36,0.367,38,2.705,45,1.53,47,1.793,49,1.793,53,1.649,54,1.427,56,3.337,57,2.153,58,1.107,60,1.793,61,1.427,62,3.628,65,1.232,67,2.657,68,1.793,70,1.649,71,1.649,72,1.107,73,0.275,74,0.304,75,2.905,76,2.905,77,2.905,78,2.905,79,1.257,80,2.905,81,2.905,82,2.905,83,3.582,84,2.905,85,3.582,86,3.582,87,3.582,88,1.53,89,1.793,90,1.793,91,1.793,92,1.793,93,1.793,94,1.793,95,1.793,96,1.793,97,1.595,98,1.793,99,1.793,100,1.793,101,1.793,102,1.793,103,1.793,104,0.749,105,1.793,106,1.793,107,1.793,108,1.793,109,1.793,110,1.793,111,1.66,112,2.308,113,1.649,114,1.649,115,1.649,116,1.649,117,1.649,118,1.649,119,1.649,120,1.649,121,1.649,122,1.649,123,1.649,124,1.649,125,1.649,126,1.649,127,1.793,128,1.793,129,1.53,130,1.793,131,2.705,132,1.793,133,1.177,134,1.121,135,2.155,136,1.793,137,2.705,138,1.53,139,2.705,140,1.793,141,2.074,142,1.473,143,1.793,144,1.793,145,3.563,146,1.793,147,4.477,148,1.793,149,1.793,150,1.793,151,1.793,152,1.793,153,2.705,154,1.944,155,1.793,156,1.793,157,1.793,158,1.793,159,1.793,160,1.793,161,1,162,1.793,163,1.793,164,1.793,165,2.705,166,2.705,167,2.705,168,1.793,169,1.793,170,1.793,171,1.649,172,1.793,173,1.793,174,1.793,175,1.793,176,1.793,177,1.793,178,1.793,179,1.793,180,1.793,181,1.793,182,1.793,183,1.793,184,1.793,185,1.793,186,4.413,187,1.793,188,1.793,189,3.894,190,3.628,191,3.628,192,2.705,193,1.793,194,2.018,195,2.018,196,2.018,197,2.153,198,1.793,199,1.793,200,2.705,201,1.793,202,1.793,203,3.258,204,1.793,205,2.705,206,1.793,207,1.793,208,1.793,209,3.258,210,1.793,211,1.793,212,1.793,213,1.793,214,1.53,215,1.649,216,1.53,217,1.649,218,1.649,219,1.793,220,1.898,221,1.649,222,2.153,223,1.518,224,1.898,225,1.793,226,1.793,227,1.649,228,1.793,229,1.793,230,1.649,231,1.53,232,1.649,233,1.793,234,1.793,235,2.705,236,0.01,237,0.01,1246,0.78]],["title/components/RadiobuttonComponent.html",[411,0.538,638,1.114]],["body/components/RadiobuttonComponent.html",[0,0.212,3,0.213,4,0.11,5,0.165,8,0.143,9,0.344,10,0.955,13,1.569,17,0.82,27,0.522,29,0.534,30,1.391,31,1.239,33,1.031,34,0.02,35,0.756,36,0.394,37,0.444,41,1.534,42,0.959,51,1.368,58,1.264,65,0.641,72,1.141,73,0.143,79,0.699,97,0.708,104,0.522,133,0.821,141,2.302,161,0.863,236,0.01,237,0.01,311,0.777,312,0.351,323,1.179,411,0.706,412,2.297,413,1.422,414,1.005,415,0.954,417,1.286,418,1.702,419,1.615,420,0.954,421,2.38,422,2.249,423,1.005,424,1.577,425,1.005,426,2.611,427,2.927,428,1.971,429,1.859,430,1.971,431,2.341,432,2.792,433,2.356,434,1.971,435,2.356,436,2.356,437,2.356,438,2.356,439,1.79,440,1.971,441,2.356,442,1.859,443,1.577,444,1.352,445,1.971,446,1.422,447,1.352,448,1.757,449,2.088,450,1.577,451,1.577,452,1.577,453,1.577,454,1.971,455,2.222,456,2.222,457,2.222,458,2.222,459,1.577,460,2.222,461,1.577,462,1.577,463,1.323,464,2.119,465,2.633,466,2.013,469,1.702,471,1.059,473,0.863,476,1.248,480,0.954,482,1.352,486,1.264,491,1.248,496,0.907,502,1.323,509,1.323,515,1.323,516,1.971,517,1.971,518,1.323,519,1.323,520,1.323,521,1.323,522,1.248,523,1.323,524,1.323,525,1.323,526,1.323,527,1.323,530,1.886,534,0.781,535,1.323,536,1.248,538,0.821,613,1.005,614,1.422,615,1.497,616,1.005,617,1.982,618,1.005,619,0.863,620,1.005,621,1.005,622,0.821,623,1.005,624,0.781,625,0.954,626,1.005,627,0.821,628,1.005,629,1.497,630,0.781,631,1.054,632,1.497,633,0.821,634,0.821,635,1.005,636,1.005,637,0.781,638,1.62,639,1.005,640,0.821,641,1.005,642,0.821,643,1.005,644,0.821,645,1.005,646,0.744,647,1.005,648,0.821,649,1.005,650,1.005,651,1.059,652,1.462,654,2.096,656,1.497,658,1.497,663,3.915,664,1.407,665,1.407,666,1.407,667,1.407,668,1.407,669,1.407,670,1.407,671,1.407,672,1.407,673,1.407,674,1.407,675,1.407,676,1.407,677,1.407,678,1.407,679,1.407,680,1.407,681,1.407,682,1.407,683,1.407,684,1.407,685,1.407,686,1.735,687,1.407,688,1.407,689,1.407,690,1.407,691,1.407,692,1.407,693,1.407,694,1.407,695,1.407,696,1.407,698,1.609,699,1.501,700,1.407,701,1.407,702,1.407,703,1.323,704,1.407,705,1.407,706,1.407,707,1.859,1026,1.735,1119,1.886,1255,2.505,1467,2.329,1468,4.044,1469,4.832,1470,4.044,1471,4.044,1472,2.076,1473,2.714,1474,3.47,1475,2.714]],["title/components/SelectComponent.html",[411,0.538,640,1.114]],["body/components/SelectComponent.html",[0,0.212,3,0.212,4,0.11,5,0.164,8,0.142,9,0.343,10,0.952,13,1.568,17,0.818,27,0.521,29,0.534,30,1.389,31,1.239,33,1.029,34,0.02,35,0.755,36,0.393,37,0.443,41,1.533,42,0.959,51,1.367,58,1.262,65,0.639,72,1.139,73,0.142,79,0.698,97,0.706,104,0.521,133,0.819,141,2.3,161,0.861,236,0.01,237,0.01,311,0.776,312,0.35,323,1.176,411,0.705,412,2.296,413,1.419,414,1.002,415,0.951,417,1.283,418,1.7,419,1.612,420,0.951,421,2.379,422,2.248,423,1.002,424,1.573,425,1.002,426,2.607,427,2.924,428,1.967,429,1.855,430,1.967,431,2.339,432,2.788,433,2.352,434,1.967,435,2.352,436,2.352,437,2.352,438,2.352,439,1.787,440,1.967,441,2.352,442,1.855,443,1.573,444,1.349,445,1.967,446,1.419,447,1.349,448,1.753,449,2.085,450,1.573,451,1.573,452,1.573,453,1.573,454,1.967,455,2.218,456,2.218,457,2.218,458,2.218,459,1.573,460,2.218,461,1.573,462,1.573,463,1.319,464,2.117,465,2.629,466,2.011,469,1.7,471,1.055,473,0.86,476,1.244,480,0.951,482,1.349,486,1.262,491,1.244,496,0.905,502,1.319,509,1.319,515,1.319,516,1.967,517,1.967,518,1.319,519,1.319,520,1.319,521,1.319,522,1.244,523,1.319,524,1.319,525,1.319,526,1.319,527,1.319,530,1.881,534,0.779,535,1.319,536,1.244,538,0.819,613,1.002,614,1.419,615,1.493,616,1.002,617,1.979,618,1.002,619,0.86,620,1.002,621,1.002,622,0.819,623,1.002,624,0.779,625,0.951,626,1.002,627,0.819,628,1.002,629,1.493,630,0.779,631,1.052,632,1.493,633,0.819,634,0.819,635,1.002,636,1.002,637,0.779,638,0.819,639,1.002,640,1.617,641,1.002,642,0.819,643,1.002,644,0.819,645,1.002,646,0.741,647,1.002,648,0.819,649,1.002,650,1.002,651,1.055,652,1.459,654,2.091,656,1.493,658,1.493,663,3.914,664,1.403,665,1.403,666,1.403,667,1.403,668,1.403,669,1.403,670,1.403,671,1.403,672,1.403,673,1.403,674,1.403,675,1.403,676,1.403,677,1.403,678,1.403,679,1.403,680,2.091,681,1.403,682,1.403,683,1.403,684,1.403,685,1.403,687,1.403,688,1.403,689,1.403,690,1.403,691,1.403,692,1.403,693,1.403,694,1.403,695,1.403,696,1.403,700,1.403,701,1.403,702,1.403,703,1.319,704,1.403,705,1.403,706,1.403,707,1.855,1027,2.322,1117,2.322,1119,1.881,1255,2.501,1393,2.804,1472,2.069,1474,3.462,1476,2.322,1477,4.824,1478,4.034,1479,4.034,1480,2.706,1481,3.462,1482,4.034,1483,4.034,1484,4.034]],["title/components/SlideToggleComponent.html",[411,0.538,644,1.114]],["body/components/SlideToggleComponent.html",[0,0.212,3,0.213,4,0.11,5,0.164,8,0.143,9,0.343,10,0.954,13,1.569,17,0.819,27,0.522,29,0.545,31,1.239,33,1.03,34,0.02,35,0.756,36,0.394,37,0.444,41,1.533,42,0.959,51,1.367,58,1.263,65,0.64,72,1.14,73,0.143,79,0.699,97,0.707,104,0.522,133,0.82,141,2.301,161,0.862,236,0.01,237,0.01,311,0.777,312,0.351,323,1.178,411,0.705,412,2.297,413,1.42,414,1.003,415,0.953,417,1.284,418,1.701,419,1.614,420,0.953,421,2.379,422,2.249,423,1.003,424,1.575,425,1.003,426,2.609,427,2.925,428,1.969,429,1.857,430,1.969,431,2.34,432,2.79,433,2.354,434,1.969,435,2.79,436,2.354,437,2.354,438,2.354,439,1.789,440,1.969,441,2.354,442,1.857,443,1.575,444,1.35,445,1.969,446,1.42,447,1.35,448,1.755,449,2.087,450,1.575,451,1.575,452,1.575,453,1.575,454,1.969,455,2.22,456,2.22,457,2.22,458,2.22,459,1.575,460,2.22,461,1.575,462,1.575,463,1.321,464,2.118,465,2.631,466,2.012,469,1.701,471,1.057,473,0.862,476,1.246,480,0.953,482,1.35,486,1.263,491,1.246,496,0.906,502,1.321,509,1.321,515,1.321,516,1.969,517,1.969,518,1.321,519,1.321,520,1.321,521,1.321,522,1.246,523,1.321,524,1.321,525,1.321,526,1.321,527,1.321,534,0.78,535,1.321,536,1.246,538,0.82,598,3.089,613,1.003,614,1.42,615,1.495,616,1.003,617,1.98,618,1.003,619,0.862,620,1.003,621,1.003,622,0.82,623,1.003,624,0.78,625,0.953,626,1.003,627,0.82,628,1.003,629,1.495,630,0.78,631,1.053,632,1.495,633,0.82,634,0.82,635,1.003,636,1.003,637,0.78,638,0.82,639,1.003,640,0.82,641,1.003,642,0.82,643,1.003,644,1.619,645,1.003,646,0.743,647,1.003,648,0.82,649,1.003,650,1.003,651,1.057,652,1.46,654,2.094,656,1.495,658,1.495,663,3.915,664,1.405,665,1.405,666,1.405,667,1.405,668,1.405,669,1.405,670,1.405,671,1.405,672,1.405,673,1.405,674,1.405,675,1.405,676,1.405,677,1.405,678,1.405,679,1.405,680,1.405,681,1.405,682,1.405,683,1.405,684,1.405,685,1.405,686,1.733,687,1.405,688,1.405,689,1.405,690,1.405,691,1.405,692,1.405,693,1.405,694,1.405,695,1.405,696,1.405,698,1.607,699,1.499,700,1.405,701,1.405,702,1.405,703,1.321,704,1.405,705,1.405,706,1.405,707,1.857,1026,1.733,1119,1.884,1260,1.321,1472,2.073,1485,2.326,1486,4.039,1487,4.828,1488,4.039,1489,4.828,1490,4.039,1491,2.326]],["title/components/SliderComponent.html",[411,0.538,642,1.114]],["body/components/SliderComponent.html",[0,0.208,3,0.21,4,0.108,5,0.162,8,0.14,9,0.339,10,0.941,13,1.562,17,0.808,27,0.513,29,0.532,31,1.239,33,1.02,34,0.02,35,0.751,36,0.393,37,0.439,41,1.528,42,0.956,51,1.379,58,1.252,65,0.629,72,1.128,73,0.14,79,0.689,97,0.695,104,0.513,133,1.605,141,2.287,142,0.851,154,1.267,161,0.851,236,0.01,237,0.01,311,0.772,312,0.345,323,1.157,411,0.698,412,2.294,413,1.402,414,0.986,415,0.936,417,1.267,418,1.686,419,1.597,420,0.936,421,2.373,422,2.242,423,0.986,424,1.555,425,0.986,426,2.586,427,2.906,428,1.944,429,1.833,430,1.944,431,2.325,432,2.329,433,2.329,434,1.944,435,2.329,436,2.329,437,2.329,438,2.329,439,1.773,440,1.944,441,2.329,442,1.833,443,1.555,444,1.333,445,1.944,446,1.402,447,1.333,448,1.732,449,1.555,450,1.555,451,1.555,452,1.555,453,1.555,454,1.944,455,2.439,456,2.197,457,2.197,458,2.197,459,1.555,460,2.197,461,1.555,462,1.555,463,1.298,464,2.102,465,2.611,466,1.997,469,1.686,471,1.039,473,0.847,476,1.224,480,0.936,482,1.333,486,1.252,491,1.224,496,0.89,502,1.298,509,1.298,515,1.298,516,1.944,517,1.944,518,1.298,519,1.298,520,1.298,521,1.298,522,1.224,523,1.298,524,1.298,525,1.298,526,1.298,527,1.298,534,0.767,535,1.298,536,1.224,538,0.806,613,0.986,614,1.402,615,1.476,616,0.986,617,1.963,618,0.986,619,0.847,620,0.986,621,0.986,622,0.806,623,0.986,624,0.767,625,0.936,626,0.986,627,0.806,628,0.986,629,1.476,630,0.767,631,1.04,632,1.476,633,0.806,634,0.806,635,0.986,636,0.986,637,0.767,638,0.806,639,0.986,640,0.806,641,0.986,642,1.605,643,0.986,644,0.806,645,0.986,646,0.73,647,0.986,648,0.806,649,0.986,650,0.986,651,1.039,652,1.605,654,2.067,656,1.476,658,1.476,663,3.91,664,1.381,665,1.381,666,1.381,667,1.381,668,1.381,669,1.381,670,1.381,671,1.381,672,1.381,673,1.381,674,1.381,675,1.381,676,1.381,677,1.381,678,1.381,679,1.381,680,1.381,681,1.381,682,1.381,683,1.381,684,1.381,685,1.381,686,1.703,687,1.381,688,1.381,689,1.381,690,1.381,691,1.381,692,1.381,693,1.381,694,1.381,695,1.381,696,1.381,698,1.579,699,1.473,700,1.381,701,1.381,702,1.381,703,1.298,704,1.381,705,1.381,706,1.381,707,1.833,849,1.579,1026,1.703,1087,2.771,1260,2.586,1491,2.286,1492,2.286,1493,4.778,1494,4.778,1495,3.987,1496,5.305,1497,3.987,1498,2.663,1499,2.663,1500,3.987,1501,2.663,1502,2.663,1503,2.663,1504,3.987,1505,3.421,1506,2.663,1507,1.851,1508,2.663]],["title/components/TableComponent.html",[411,0.538,646,1.009]],["body/components/TableComponent.html",[0,0.16,1,1,3,0.172,4,0.083,5,0.238,8,0.108,9,0.277,10,0.769,12,1.135,14,1.886,17,0.661,27,0.627,29,0.52,30,0.938,31,1.187,33,1.283,34,0.02,35,0.764,36,0.367,37,0.552,41,1.31,42,0.774,51,1.349,54,2.243,58,1.484,67,0.891,71,2.592,72,1.19,73,0.265,74,0.255,75,1.063,76,1.063,77,1.063,78,1.063,79,1.009,80,1.063,81,1.063,82,1.063,84,1.063,97,1.204,104,0.889,111,1.911,134,1.762,142,1.2,154,1.602,161,1.315,186,3.221,194,1.063,195,1.063,196,1.063,197,1.135,236,0.008,237,0.008,303,1.932,311,0.798,312,0.266,393,2.952,411,0.592,412,0.62,413,1.146,414,0.759,415,0.721,417,1.036,419,1.355,420,0.721,421,2.267,422,2.137,423,0.759,425,0.759,431,1.581,439,1.544,442,1.498,447,0.686,464,1.206,469,2.065,471,1.581,482,0.686,486,1.328,534,0.59,538,0.62,613,0.759,614,1.146,615,1.206,616,0.759,617,1.709,618,0.759,619,0.652,620,0.759,621,0.759,622,0.62,623,0.759,624,0.59,625,0.721,626,0.759,627,0.62,628,0.759,629,1.206,630,0.59,631,1.204,632,1.206,633,0.62,634,0.62,635,0.759,636,0.759,637,0.59,638,0.62,639,0.759,640,0.62,641,0.759,642,0.62,643,0.759,644,0.62,645,0.759,646,1.265,647,0.759,648,0.62,649,0.759,650,0.759,651,0.8,652,2.2,656,1.206,658,1.206,707,1.498,730,1.426,758,3.908,775,1.426,811,2.265,819,1.063,832,1.426,833,2.265,844,2.265,849,1.932,852,2.265,853,3.502,854,1.426,875,2.592,908,1.135,953,3.18,977,1.216,1029,1.932,1035,1.426,1036,1.216,1048,1.76,1049,3.21,1087,3.502,1145,2.394,1219,1.426,1225,1.426,1227,1.426,1229,1.426,1261,1.977,1311,2.592,1312,1.311,1313,1.569,1314,1.569,1315,1.569,1316,1.569,1317,1.569,1318,3.101,1319,3.101,1320,3.532,1321,1.569,1322,3.101,1323,3.101,1324,3.101,1325,1.569,1326,1.569,1327,2.265,1328,2.265,1329,1.569,1330,1.569,1331,1.569,1332,1.569,1333,1.569,1334,1.569,1335,1.569,1336,3.101,1337,1.569,1338,1.569,1339,3.502,1340,1.569,1341,1.569,1342,1.569,1343,1.569,1344,1.569,1345,1.569,1346,1.569,1347,1.569,1348,1.569,1349,2.492,1350,3.101,1351,3.853,1352,2.492,1353,3.101,1354,3.101,1355,3.101,1356,3.101,1357,3.101,1358,3.101,1359,3.101,1360,2.492,1361,3.101,1362,2.492,1363,3.101,1364,3.853,1365,3.101,1366,2.492,1367,2.492,1368,1.569,1369,1.569,1370,3.853,1371,2.492,1372,3.532,1373,2.492,1374,2.492,1375,2.492,1376,3.21,1377,3.532,1378,2.492,1379,1.569,1380,2.492,1381,1.569,1382,2.492,1383,2.492,1384,2.492,1385,3.532,1386,1.569,1387,1.569,1388,1.569,1389,2.492,1390,2.492,1391,1.569,1392,1.569,1393,3.21,1394,1.569,1395,1.569,1396,1.569,1397,1.569,1398,2.492,1399,2.492,1400,1.569,1401,2.492,1402,1.569,1403,1.569,1404,1.569,1405,3.532,1406,1.569,1407,2.492,1408,1.569,1409,1.569,1410,2.492,1411,1.569,1412,2.492,1413,1.569,1414,1.569,1415,1.569,1416,1.569,1417,1.569,1418,2.492,1419,1.569,1420,1.569,1421,1.569,1422,1.569,1423,1.569,1424,1.569,1425,2.492,1426,1.569,1427,2.492,1428,1.569,1429,2.492,1430,1.569,1431,3.532,1432,1.569,1433,1.569,1434,1.569,1435,1.569,1436,2.492,1437,1.569,1438,1.569,1439,1.569,1440,1.569,1441,1.569,1442,2.492,1443,1.569,1444,1.569,1445,2.492,1446,1.569,1447,3.101,1448,2.492,1449,1.569,1450,3.101,1451,2.492,1452,1.569,1453,1.569,1454,1.569,1455,1.569,1456,1.569,1466,1.76,1507,1.426,1509,3.259,1510,4.054,1511,3.259,1512,3.259,1513,3.259,1514,3.259,1515,3.259,1516,3.259,1517,3.259,1518,4.054,1519,3.259,1520,3.259,1521,2.051,1522,2.051,1523,2.051,1524,2.051,1525,2.051,1526,2.051,1527,2.051,1528,2.051,1529,1.76,1530,2.051,1531,2.051,1532,2.051,1533,3.259,1534,2.051,1535,2.051,1536,2.051,1537,2.051,1538,2.051,1539,2.051,1540,2.051,1541,2.051,1542,2.051,1543,2.051,1544,2.051,1545,2.051,1546,2.051,1547,2.051,1548,2.051,1549,2.051,1550,2.051,1551,2.051,1552,2.051,1553,2.051,1554,3.259,1555,4.618,1556,3.259,1557,3.259,1558,3.259,1559,3.259,1560,3.259,1561,3.259,1562,2.051,1563,2.051,1564,2.051,1565,2.051,1566,2.051,1567,3.259,1568,2.051,1569,2.051,1570,2.051,1571,2.051,1572,2.051,1573,3.259,1574,2.051,1575,2.051,1576,2.051,1577,2.051]],["title/components/TextInputComponent.html",[411,0.538,648,1.114]],["body/components/TextInputComponent.html",[0,0.204,3,0.207,4,0.106,5,0.16,8,0.138,9,0.334,10,0.928,13,1.555,17,0.797,27,0.503,29,0.536,31,1.237,33,1.008,34,0.02,35,0.746,36,0.393,37,0.434,41,1.553,42,0.968,51,1.356,58,1.24,65,0.617,72,1.397,73,0.138,79,0.68,97,0.681,104,0.503,133,0.79,141,2.273,161,0.839,236,0.01,237,0.01,311,0.729,312,0.338,323,1.135,411,0.69,412,2.291,413,1.382,414,0.967,415,0.919,417,1.249,418,1.67,419,1.579,420,0.919,421,2.366,422,2.235,423,0.967,424,1.842,425,0.967,426,2.561,427,2.885,428,1.916,429,1.806,430,1.916,431,2.308,432,2.994,433,2.303,434,1.916,435,2.303,436,2.303,437,2.303,438,2.303,439,1.756,440,1.916,441,2.303,442,1.806,443,1.532,444,1.313,445,1.916,446,1.382,447,1.313,448,2.052,449,2.308,450,1.532,451,1.532,452,1.532,453,1.532,454,2.885,455,2.415,456,2.171,457,2.171,458,2.171,459,1.532,460,2.171,461,1.532,462,1.532,463,1.274,464,2.085,465,2.59,466,1.981,469,1.67,471,1.019,473,0.83,476,1.201,480,0.919,482,2.235,486,1.33,491,1.201,496,0.873,502,1.274,509,1.274,515,1.274,516,1.916,517,1.916,518,1.274,519,1.274,520,1.274,521,1.274,522,1.201,523,1.274,524,1.274,525,1.274,526,1.274,527,1.274,534,0.752,535,1.274,536,1.201,538,0.79,613,0.967,614,1.382,615,1.454,616,0.967,617,1.944,618,0.967,619,0.83,620,0.967,621,0.967,622,0.79,623,0.967,624,0.752,625,0.919,626,0.967,627,0.79,628,0.967,629,1.454,630,0.752,631,1.025,632,1.454,633,0.79,634,0.79,635,0.967,636,0.967,637,0.752,638,0.79,639,0.967,640,0.79,641,0.967,642,0.79,643,0.967,644,0.79,645,0.967,646,0.716,647,0.967,648,1.589,649,0.967,650,0.967,651,1.019,652,1.589,654,2.037,656,1.454,658,1.454,663,3.904,664,1.354,665,1.354,666,1.354,667,1.354,668,1.354,669,1.354,670,1.354,671,1.354,672,1.354,673,1.354,674,1.354,675,1.354,676,1.354,677,1.354,678,1.354,679,1.354,680,1.354,681,1.354,682,1.354,683,1.354,684,1.354,685,1.354,686,1.67,687,1.354,688,1.354,689,1.354,690,1.354,691,1.354,692,1.354,693,1.354,694,1.354,695,1.354,696,1.354,698,1.549,699,1.445,700,1.354,701,1.354,702,1.354,703,1.274,704,1.354,705,1.354,706,1.354,849,1.549,1014,1.815,1015,3.612,1016,3.005,1026,1.67,1087,2.731,1116,3.372,1202,4.018,1203,4.018,1376,3.282,1505,2.242,1507,1.815,1578,4.723,1579,3.372,1580,2.612]],["title/pipes/TranslatePipe.html",[1145,1.908,1581,2.353]],["body/pipes/TranslatePipe.html",[0,0.423,3,0.285,4,0.22,5,0.22,17,1.098,31,0.886,33,1.156,34,0.02,35,0.834,36,0.285,37,0.498,51,1.098,73,0.285,97,1.412,142,1.156,224,2.64,236,0.016,237,0.016,311,0.833,312,0.701,417,1.722,420,1.904,466,2.262,707,3.156,759,2.996,770,2.64,1145,3.335,1581,4.113,1582,5.415,1583,4.647,1584,5.415,1585,6.434,1586,5.415,1587,6.434,1588,5.415,1589,5.415,1590,4.647,1591,4.647,1592,5.415,1593,5.415]],["title/injectables/TranslationService.html",[238,0.96,466,1.294]],["body/injectables/TranslationService.html",[0,0.269,3,0.181,4,0.14,5,0.14,8,0.181,9,0.408,10,1.305,14,2.29,17,0.974,27,0.663,29,0.567,31,1.179,33,1.426,34,0.02,35,0.812,36,0.373,37,0.614,41,1.343,42,0.938,51,1.382,58,1.412,65,0.813,72,0.813,73,0.181,97,0.899,104,0.663,111,1.527,134,2.733,142,1.276,161,1.276,194,2.49,195,2.49,196,2.49,222,1.906,227,2.203,236,0.012,237,0.012,238,1.252,240,1.584,311,0.622,312,0.446,320,1.497,321,1.497,466,1.689,469,1.999,538,1.453,722,2.395,723,3.823,725,3.07,755,2.043,759,1.906,770,3.175,953,3.729,974,3.673,1036,2.848,1590,4.122,1591,2.957,1594,2.957,1595,5.529,1596,6.683,1597,5.529,1598,4.803,1599,4.803,1600,5.981,1601,5.981,1602,4.803,1603,4.803,1604,4.803,1605,4.122,1606,4.803,1607,4.803,1608,3.446,1609,5.529,1610,4.803,1611,3.446,1612,3.446,1613,3.446,1614,4.803,1615,3.446,1616,4.803,1617,3.446,1618,4.803,1619,3.446,1620,4.803,1621,3.446,1622,4.803,1623,3.446,1624,3.446,1625,3.446,1626,4.803,1627,3.446,1628,3.446,1629,3.446,1630,5.529,1631,3.446,1632,4.803,1633,4.803,1634,4.803,1635,3.446,1636,4.803,1637,4.803,1638,4.803,1639,5.529,1640,4.803,1641,3.446,1642,5.529,1643,5.981,1644,5.981,1645,4.803,1646,3.446,1647,3.446,1648,4.803,1649,4.803,1650,3.446,1651,3.446,1652,3.446,1653,3.446,1654,4.803,1655,3.446,1656,4.803,1657,3.446,1658,3.446,1659,3.446,1660,3.446,1661,3.446]],["title/injectables/UserService.html",[238,0.96,260,2.558]],["body/injectables/UserService.html",[0,0.234,3,0.157,4,0.122,5,0.122,8,0.157,9,0.369,10,1.514,17,0.881,27,0.576,29,0.594,30,1.958,31,1.176,33,1.501,34,0.02,35,0.855,36,0.382,37,0.646,41,0.975,42,0.598,51,1.412,65,1.025,67,3.154,70,1.912,73,0.157,104,1.08,111,2.163,142,1.513,161,1.197,171,3.269,223,1.167,236,0.011,237,0.011,238,1.133,240,1.375,247,3.727,250,3.727,251,3.727,260,3.019,277,3.727,279,4.532,293,6.305,303,4.371,311,0.727,312,0.387,315,1.655,320,1.3,321,1.3,336,2.567,367,3.727,393,2.777,429,2.351,486,1.207,538,0.905,722,2.079,723,3.587,725,2.777,755,1.774,759,1.655,901,2.288,902,4.291,909,3.911,924,3.322,926,2.288,994,4.388,1004,2.567,1041,4.457,1481,5.838,1581,1.912,1662,2.567,1663,5.114,1664,4.343,1665,4.343,1666,4.343,1667,4.343,1668,4.343,1669,4.343,1670,4.343,1671,4.343,1672,4.343,1673,4.343,1674,4.343,1675,2.992,1676,4.343,1677,2.992,1678,4.343,1679,2.992,1680,4.343,1681,2.992,1682,4.343,1683,2.992,1684,4.343,1685,5.114,1686,2.992,1687,2.992,1688,4.343,1689,5.611,1690,5.611,1691,4.343,1692,2.992,1693,4.343,1694,4.343,1695,2.992,1696,4.343,1697,2.992,1698,2.992,1699,4.343,1700,2.992,1701,4.343,1702,2.992,1703,5.114,1704,5.114,1705,5.114,1706,2.992,1707,5.114,1708,2.992,1709,2.992,1710,2.992,1711,2.992,1712,2.992,1713,2.992,1714,2.992,1715,2.992,1716,2.992,1717,2.992,1718,2.992,1719,5.114,1720,4.343,1721,2.992,1722,5.114,1723,2.992,1724,2.992,1725,2.992,1726,4.343,1727,2.992,1728,2.992,1729,2.992,1730,4.343,1731,2.992,1732,2.992,1733,2.992,1734,2.992,1735,4.343,1736,2.992,1737,2.992,1738,2.992,1739,4.343,1740,2.992,1741,2.992,1742,2.992,1743,2.992,1744,2.992]],["title/coverage.html",[1745,4.314]],["body/coverage.html",[0,0.446,1,1.782,5,0.149,6,3.88,7,3.88,30,1.052,34,0.02,36,0.192,74,0.58,88,2.167,112,2.167,129,2.167,138,2.167,154,2.456,161,0.78,214,2.167,216,2.167,220,2.99,236,0.013,237,0.013,238,1.85,239,2.795,241,3.137,260,2.54,262,2.54,405,2.337,406,3.826,410,2.54,411,1.074,412,1.106,416,3.137,418,1.162,465,1.681,466,1.285,473,1.162,480,1.285,496,1.222,619,1.162,622,1.106,624,1.052,627,1.106,630,1.052,631,1.599,633,1.106,634,1.106,637,1.052,638,1.106,640,1.106,642,1.106,644,1.106,646,1.002,648,1.106,652,2.243,653,3.137,709,2.54,710,3.137,752,2.167,798,2.54,799,2.54,800,3.137,872,2.54,873,3.809,874,3.826,905,2.54,928,3.826,942,2.54,984,3.137,1012,2.795,1013,2.795,1014,3.964,1041,2.54,1042,3.137,1072,2.54,1073,2.54,1075,2.54,1076,2.54,1089,3.826,1112,2.795,1113,2.795,1133,3.137,1145,1.895,1202,2.795,1203,2.795,1242,2.795,1243,3.137,1245,2.022,1247,3.137,1255,1.895,1256,3.921,1260,1.782,1261,1.782,1271,2.022,1272,3.826,1273,3.826,1278,2.54,1300,2.795,1301,3.137,1305,3.137,1311,2.337,1312,3.646,1339,2.54,1457,3.137,1467,3.137,1476,3.137,1485,3.137,1492,3.137,1507,3.477,1581,2.337,1583,3.137,1594,3.137,1662,3.137,1745,3.137,1746,3.655,1747,3.655,1748,3.655,1749,3.655,1750,3.655,1751,3.655,1752,5.003,1753,3.655,1754,5.003,1755,3.137,1756,6.133,1757,6.915,1758,3.655,1759,6.133,1760,6.133,1761,5.003,1762,6.133,1763,3.655,1764,5.704,1765,4.293,1766,3.655,1767,3.655,1768,3.655,1769,5.003,1770,3.655,1771,3.655,1772,3.655,1773,4.293,1774,3.655,1775,3.137,1776,3.655,1777,3.137,1778,3.655,1779,4.362,1780,3.655,1781,3.137,1782,3.137,1783,6.133,1784,3.655,1785,5.704,1786,3.655,1787,3.655,1788,3.655,1789,3.655]],["title/dependencies.html",[1140,3.078,1790,2.637]],["body/dependencies.html",[34,0.02,57,2.968,236,0.016,237,0.016,312,0.695,313,4.605,315,2.968,534,1.545,757,4.605,1029,3.794,1140,3.729,1159,5.491,1160,4.894,1212,5.491,1213,4.605,1216,4.605,1791,5.366,1792,7.621,1793,5.366,1794,5.366,1795,5.366,1796,5.366,1797,5.366,1798,5.366,1799,5.366,1800,5.366,1801,4.605,1802,5.366,1803,5.366,1804,5.366,1805,5.366,1806,5.366,1807,5.366,1808,5.366,1809,5.366,1810,5.366,1811,5.366,1812,5.366,1813,5.366]],["title/miscellaneous/enumerations.html",[1814,1.822,1815,3.8]],["body/miscellaneous/enumerations.html",[5,0.274,8,0.307,34,0.019,42,0.974,236,0.017,237,0.017,303,3.985,652,1.765,1312,3.73,1327,4.671,1328,4.671,1814,3.459,1815,5.007,1816,5.834]],["title/miscellaneous/functions.html",[1814,1.822,1817,3.8]],["body/miscellaneous/functions.html",[4,0.26,6,2.959,7,3.777,8,0.282,14,1.881,29,0.553,33,1.509,34,0.019,35,0.86,36,0.372,37,0.65,42,0.879,50,3.787,65,1.508,138,3.787,161,1.142,218,3.42,221,3.42,222,2.959,224,2.608,230,3.42,231,3.172,232,3.42,236,0.016,237,0.016,431,2.086,466,2.246,652,1.618,908,3.533,1755,5.482,1773,4.591,1775,5.482,1779,4.091,1781,5.482,1814,3.172,1817,4.591,1818,4.591,1819,5.35,1820,5.482,1821,4.591,1822,5.35,1823,6.387,1824,5.35]],["title/index.html",[8,0.162,1825,3.073,1826,3.073]],["body/index.html",[4,0.204,34,0.017,35,0.608,37,0.46,53,4.24,161,1.068,236,0.016,237,0.016,268,4.293,399,3.477,411,0.969,422,1.59,444,1.672,464,2.559,729,6.197,783,5.263,836,5.019,1070,3.393,1605,5.263,1765,5.263,1801,4.293,1827,5.002,1828,6.633,1829,5.002,1830,6.633,1831,6.133,1832,5.692,1833,5.002,1834,5.002,1835,5.002,1836,5.002,1837,6.133,1838,7.385,1839,6.914,1840,5.002,1841,6.133,1842,5.002,1843,5.002,1844,5.002,1845,5.002,1846,5.002,1847,6.914,1848,6.133,1849,5.002,1850,5.002,1851,5.002,1852,7.095,1853,5.002,1854,6.633,1855,6.133,1856,5.002,1857,5.002,1858,5.002,1859,5.002,1860,5.002,1861,5.002,1862,5.002,1863,5.002,1864,5.002,1865,5.002,1866,5.002,1867,5.002,1868,5.002,1869,5.002,1870,5.002,1871,5.002,1872,5.002,1873,5.002,1874,5.002,1875,5.002,1876,5.002,1877,5.002]],["title/modules.html",[1139,3.844]],["body/modules.html",[34,0.017,236,0.017,237,0.017,1138,4.151,1139,4.567,1160,4.567,1878,5.972,1879,5.972,1880,5.972]],["title/overview.html",[1881,4.314]],["body/overview.html",[2,3.144,34,0.02,145,3.186,236,0.015,237,0.015,240,2.08,412,1.917,413,1.591,619,2.275,622,2.165,624,1.824,627,2.165,630,1.824,633,2.165,634,2.212,637,1.824,638,2.165,640,2.165,642,2.165,644,2.165,646,1.961,648,2.165,1137,3.882,1138,5.42,1140,4.003,1141,3.882,1143,3.882,1144,3.882,1145,3.71,1146,4.942,1147,3.144,1148,3.882,1246,1.368,1579,3.882,1581,2.892,1777,3.882,1881,3.882,1882,4.523,1883,4.523]],["title/properties.html",[9,0.376,1790,2.637]],["body/properties.html",[9,0.509,34,0.018,236,0.017,237,0.017,1832,5.143,1884,5.992]],["title/interfaces/searchObj.html",[74,0.288,905,2.558]],["body/interfaces/searchObj.html",[0,0.317,3,0.213,4,0.165,5,0.165,8,0.213,9,0.455,29,0.59,30,1.543,34,0.02,36,0.367,37,0.628,42,0.738,57,2.239,67,2.89,72,0.956,73,0.282,74,0.317,104,0.779,142,1.575,154,1.91,161,0.864,236,0.014,237,0.014,238,1.397,279,2.588,311,0.828,312,0.524,315,2.239,317,2.813,320,1.759,321,1.759,322,5.612,382,4.098,424,1.579,482,2.137,538,1.224,723,3.426,725,2.588,755,2.4,759,2.239,835,4.087,872,2.813,873,2.4,874,3.096,875,2.588,878,3.474,882,3.474,883,5.982,885,5.487,886,3.474,888,3.474,890,3.474,891,5.155,892,5.155,894,3.474,897,3.474,899,3.474,901,4.594,902,4.594,903,3.474,904,4.599,905,4.175,906,5.487,907,3.474,908,2.964,909,4.89,910,3.474,911,3.474,912,4.599,913,3.474,914,3.474,915,3.474,916,3.474,917,5.155,918,3.474,919,3.474,920,3.474,921,3.474,922,3.474,923,3.474,924,3.096,925,3.474,926,3.096,927,3.474,1246,1.224]],["title/miscellaneous/variables.html",[1814,1.822,1885,3.8]],["body/miscellaneous/variables.html",[6,2.811,7,3.845,8,0.268,15,3.248,29,0.522,30,1.463,34,0.02,36,0.268,41,1.561,42,0.981,67,2.208,75,2.634,76,2.634,77,2.634,78,2.634,80,2.634,81,2.634,82,2.634,83,3.248,84,2.634,85,3.248,86,3.248,87,3.248,111,1.615,112,3.671,113,3.248,114,3.248,115,3.248,116,3.248,117,3.248,118,3.248,119,3.248,120,3.248,121,3.248,122,3.248,123,3.248,124,3.248,125,3.248,126,3.248,135,2.336,142,1.425,214,3.671,215,3.248,216,3.671,217,3.248,236,0.016,237,0.016,652,1.537,908,3.425,1529,5.731,1779,3.886,1782,5.314,1814,3.013,1818,4.361,1820,5.731,1821,5.314,1885,4.361,1886,6.192,1887,5.081,1888,5.081,1889,5.081,1890,5.081,1891,5.081,1892,5.081]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":154,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["0.0.0",{"_index":1884,"title":{},"body":{"properties.html":{}}}],["0.11.5",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["0.12.4",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":145,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["1\">es",{"_index":1106,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["1.19.0",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1883,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1507,"title":{},"body":{"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["104px",{"_index":1574,"title":{},"body":{"components/TableComponent.html":{}}}],["12",{"_index":1765,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["13.3.6",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1835,"title":{},"body":{"index.html":{}}}],["14px",{"_index":848,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["15",{"_index":1882,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1777,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["18",{"_index":1287,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["2.0.8",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["2/32",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":855,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["3",{"_index":1579,"title":{},"body":{"components/TextInputComponent.html":{},"overview.html":{}}}],["3/17",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":841,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["350px",{"_index":1088,"title":{},"body":{"injectables/DialogService.html":{}}}],["4.17.1",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1466,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["520px",{"_index":1568,"title":{},"body":{"components/TableComponent.html":{}}}],["560px",{"_index":1570,"title":{},"body":{"components/TableComponent.html":{}}}],["5px",{"_index":1565,"title":{},"body":{"components/TableComponent.html":{}}}],["6",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":842,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["7",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["7/15",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":171,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["8px",{"_index":1572,"title":{},"body":{"components/TableComponent.html":{}}}],["_",{"_index":167,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["_blank",{"_index":178,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["_filter",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_isloggedin",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_options",{"_index":11,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["_path",{"_index":1595,"title":{},"body":{"injectables/TranslationService.html":{}}}],["accessors",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{}}}],["according",{"_index":60,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["action",{"_index":1341,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["actionresp",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actionresp.hasownproperty('actions",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actions",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":650,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["adapter",{"_index":1213,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["add",{"_index":1345,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["additional",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["addtxtfile",{"_index":1598,"title":{},"body":{"injectables/TranslationService.html":{}}}],["addtxtfile(path",{"_index":1607,"title":{},"body":{"injectables/TranslationService.html":{}}}],["adduser",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(url",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles(url",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserres.id",{"_index":1734,"title":{},"body":{"injectables/UserService.html":{}}}],["afterdialogcallback",{"_index":1060,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterdialogcallback(result",{"_index":1081,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterviewinit",{"_index":1318,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["age",{"_index":1286,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["align",{"_index":837,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["allactionswithduplicates",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["allowed",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedactions",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["already",{"_index":1728,"title":{},"body":{"injectables/UserService.html":{}}}],["anderen",{"_index":1291,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["angular",{"_index":1830,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1317,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/common",{"_index":1216,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":755,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["angular/common/locales/de",{"_index":1218,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/compiler",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["angular/forms",{"_index":534,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1212,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1176,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/button",{"_index":1188,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/card",{"_index":1198,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/checkbox",{"_index":1180,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/core",{"_index":1028,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["angular/material/datepicker",{"_index":1178,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/dialog",{"_index":819,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["angular/material/expansion",{"_index":1190,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/form",{"_index":1168,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/grid",{"_index":1192,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/icon",{"_index":1166,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/input",{"_index":1170,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/list",{"_index":1172,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/paginator",{"_index":1229,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/radio",{"_index":1194,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/select",{"_index":1174,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sidenav",{"_index":1164,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slide",{"_index":1233,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slider",{"_index":1231,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sort",{"_index":1227,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/stepper",{"_index":1182,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/table",{"_index":1225,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/tooltip",{"_index":1184,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/tree",{"_index":1186,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/platform",{"_index":1159,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["angularcsv",{"_index":1,"title":{"classes/AngularCsv.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["angularcsv(tmpdata",{"_index":1455,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angularcsv.isfloat(data",{"_index":205,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["angularformbuilder",{"_index":1827,"title":{},"body":{"index.html":{}}}],["api",{"_index":901,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["apibaseurl",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["apiendpoint",{"_index":1248,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["app",{"_index":422,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["appdata",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["appdata[page",{"_index":786,"title":{},"body":{"injectables/ConfigService.html":{}}}],["application",{"_index":1837,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":909,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["applyfilter",{"_index":1509,"title":{},"body":{"components/TableComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1366,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["array",{"_index":45,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["array.from(new",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["array.isarray(this.data.errormsg",{"_index":1098,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["array.isarray(this.data.infomsg",{"_index":1459,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["array.isarray(value",{"_index":961,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["artifacts",{"_index":1872,"title":{},"body":{"index.html":{}}}],["assign",{"_index":230,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["asyncvalidatorfn",{"_index":1258,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["auf",{"_index":1290,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["aufgetreten",{"_index":1105,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["authentication",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":239,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["auto",{"_index":1505,"title":{},"body":{"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete",{"_index":443,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete'},{'name",{"_index":620,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["autocompletecomponent",{"_index":619,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1860,"title":{},"body":{"index.html":{}}}],["autosearch",{"_index":405,"title":{"classes/AutoSearch.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["availableactions",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["availableactions.indexof(systemaction",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["base",{"_index":423,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent",{"_index":412,"title":{"components/BaseFieldComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basefieldcomponent:103",{"_index":695,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:14",{"_index":702,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:15",{"_index":697,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{}}}],["basefieldcomponent:158",{"_index":693,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:16",{"_index":698,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:162",{"_index":691,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:166",{"_index":696,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:17",{"_index":699,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:18",{"_index":1026,"title":{},"body":{"components/DateInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:19",{"_index":1480,"title":{},"body":{"components/SelectComponent.html":{}}}],["basefieldcomponent:192",{"_index":692,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:196",{"_index":689,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:199",{"_index":694,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:20",{"_index":1027,"title":{},"body":{"components/DateInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:21",{"_index":1117,"title":{},"body":{"components/FileInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:22",{"_index":686,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:25",{"_index":680,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:27",{"_index":685,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:28",{"_index":681,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:29",{"_index":668,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:30",{"_index":679,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:31",{"_index":677,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:32",{"_index":678,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:33",{"_index":676,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:34",{"_index":682,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:35",{"_index":669,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:36",{"_index":666,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:37",{"_index":671,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:38",{"_index":670,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:39",{"_index":683,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:40",{"_index":673,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:41",{"_index":675,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:42",{"_index":674,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:43",{"_index":684,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:44",{"_index":667,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:45",{"_index":672,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:46",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:49",{"_index":665,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:50",{"_index":701,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:51",{"_index":700,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:59",{"_index":687,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:63",{"_index":688,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:76",{"_index":690,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basic",{"_index":1713,"title":{},"body":{"injectables/UserService.html":{}}}],["basierend",{"_index":1289,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["before",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["behaviorsubject",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataStoreService.html":{}}}],["behaviorsubject(true",{"_index":1006,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["bitte",{"_index":1483,"title":{},"body":{"components/SelectComponent.html":{}}}],["bkuuser",{"_index":1727,"title":{},"body":{"injectables/UserService.html":{}}}],["bla",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["blob",{"_index":131,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["blob([this.csv",{"_index":162,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["blur",{"_index":1269,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["body",{"_index":57,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["body).pipe",{"_index":925,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["bom",{"_index":91,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["boolean(input",{"_index":144,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["bootstrap",{"_index":1152,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["bottom",{"_index":1564,"title":{},"body":{"components/TableComponent.html":{}}}],["break",{"_index":1110,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["browse",{"_index":1880,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1160,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1162,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browseranimationsmodule",{"_index":1161,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browsermodule",{"_index":1158,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["btn",{"_index":612,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["btoa(credentials",{"_index":1714,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["buildfiletree",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildfiletree(obj",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree(config",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buttons",{"_index":1342,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["c",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["calc(100",{"_index":1567,"title":{},"body":{"components/TableComponent.html":{}}}],["called",{"_index":228,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["case",{"_index":1414,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["categories",{"_index":906,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["center",{"_index":839,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["change",{"_index":444,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["changes",{"_index":1540,"title":{},"body":{"components/TableComponent.html":{}}}],["changes.data.currentvalue",{"_index":1420,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["changes['data",{"_index":1419,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["check",{"_index":70,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["checkbox",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox'},{'name",{"_index":623,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["checkbox.component.html",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":622,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkifuserisalreadyloggedin",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkkey",{"_index":1781,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkkey(ts",{"_index":1821,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["children",{"_index":407,"title":{},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/MenuNode.html":{}}}],["children.push(value.name",{"_index":774,"title":{},"body":{"injectables/ConfigService.html":{}}}],["choose",{"_index":1132,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"overview.html":{}}}],["classes/angular",{"_index":1325,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["classes/field",{"_index":703,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["clear",{"_index":1384,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["cli",{"_index":1831,"title":{},"body":{"index.html":{}}}],["cluster_formbuildermodule",{"_index":1141,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_bootstrap",{"_index":1142,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["cluster_formbuildermodule_declarations",{"_index":1143,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_exports",{"_index":1144,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["code",{"_index":1868,"title":{},"body":{"index.html":{}}}],["codetables",{"_index":1346,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumn.collumnkey",{"_index":1555,"title":{},"body":{"components/TableComponent.html":{}}}],["collumn.collumnname",{"_index":1556,"title":{},"body":{"components/TableComponent.html":{}}}],["collumnkey",{"_index":1313,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnname",{"_index":1314,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnstobedisplayed",{"_index":1353,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["color",{"_index":1489,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["column",{"_index":1573,"title":{},"body":{"components/TableComponent.html":{}}}],["column.collumnname",{"_index":1401,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnname",{"_index":1437,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames",{"_index":1448,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames.filter((el",{"_index":1449,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns",{"_index":1445,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns.filter((el",{"_index":1446,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["colums",{"_index":1533,"title":{},"body":{"components/TableComponent.html":{}}}],["command",{"_index":1853,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1215,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["component",{"_index":411,"title":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":618,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["components",{"_index":413,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"overview.html":{}}}],["components/autocomplete/autocomplete.component",{"_index":1205,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/autocomplete/autocomplete.component.ts",{"_index":1779,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component",{"_index":1206,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:13",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":1012,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/confirm",{"_index":798,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/error",{"_index":1072,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/info",{"_index":1075,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["components/file",{"_index":1112,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component",{"_index":1207,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/radiobutton/radiobutton.component.ts",{"_index":1467,"title":{},"body":{"components/RadiobuttonComponent.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component.ts:14",{"_index":1471,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["components/select/select.component",{"_index":1201,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/select/select.component.ts",{"_index":1476,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:17",{"_index":1479,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/slider/slider.component",{"_index":1208,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slider/slider.component.ts",{"_index":1492,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["components/slider/slider.component.ts:14",{"_index":1497,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slider/slider.component.ts:30",{"_index":1498,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slidetoggle/slidetoggle.component",{"_index":1235,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slidetoggle/slidetoggle.component.ts",{"_index":1485,"title":{},"body":{"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:14",{"_index":1490,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/table/table.component",{"_index":1223,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["components/table/table.component.ts",{"_index":1312,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/table/table.component.ts:116",{"_index":1538,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:132",{"_index":1539,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:146",{"_index":1545,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:151",{"_index":1544,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:155",{"_index":1542,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:160",{"_index":1543,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:166",{"_index":1531,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:179",{"_index":1532,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:195",{"_index":1535,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:211",{"_index":1546,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:215",{"_index":1530,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:58",{"_index":1552,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:59",{"_index":1547,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:60",{"_index":1549,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:61",{"_index":1524,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:62",{"_index":1551,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:63",{"_index":1548,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:64",{"_index":1522,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:65",{"_index":1523,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:66",{"_index":1521,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:67",{"_index":1550,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:68",{"_index":1553,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:69",{"_index":1527,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:70",{"_index":1526,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:71",{"_index":1525,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:72",{"_index":1520,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:79",{"_index":1528,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:85",{"_index":1536,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:92",{"_index":1537,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:98",{"_index":1541,"title":{},"body":{"components/TableComponent.html":{}}}],["components/text",{"_index":1202,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["config",{"_index":133,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["config.disabled",{"_index":575,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hint",{"_index":565,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hintlabel",{"_index":567,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute",{"_index":591,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute.autocomplete",{"_index":592,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmltype",{"_index":588,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.icon",{"_index":590,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.name",{"_index":568,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators",{"_index":574,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.max",{"_index":579,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.maxlength",{"_index":583,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.min",{"_index":581,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.minlength",{"_index":585,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.required",{"_index":576,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.value",{"_index":586,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config[page",{"_index":766,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[page][formn",{"_index":767,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configdefaults",{"_index":112,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":709,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["configurable",{"_index":1343,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["confirm",{"_index":625,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["confirm(messagestring",{"_index":1051,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmdialogcomponent",{"_index":624,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connector.service.ts",{"_index":874,"title":{},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["connector.service.ts:17",{"_index":881,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:23",{"_index":884,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:31",{"_index":900,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:42",{"_index":893,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:69",{"_index":887,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:79",{"_index":896,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:83",{"_index":898,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:87",{"_index":889,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:91",{"_index":895,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["console.log(\"newtree",{"_index":778,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log('[authenticationservice",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('csv",{"_index":1456,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log('invalid",{"_index":159,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["console.log('saveallowedactions",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('saveuserprofile",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(`${key",{"_index":772,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(columnname",{"_index":1439,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(columns",{"_index":1451,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(config",{"_index":762,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(data",{"_index":1438,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(e",{"_index":1127,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(form",{"_index":769,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(key",{"_index":1590,"title":{},"body":{"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["console.log(langpath",{"_index":1637,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(messagestring",{"_index":1084,"title":{},"body":{"injectables/DialogService.html":{}}}],["console.log(reader",{"_index":1131,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.control",{"_index":558,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/FileInputComponent.html":{}}}],["console.log(this.field",{"_index":555,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.field.config",{"_index":1501,"title":{},"body":{"components/SliderComponent.html":{}}}],["console.log(this.flatcontrolls",{"_index":761,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(this.form",{"_index":1119,"title":{},"body":{"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["console.log(this.message",{"_index":828,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["console.log(this.name",{"_index":556,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/FileInputComponent.html":{}}}],["console.log(this.options",{"_index":1472,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["console.log(this.required",{"_index":577,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.translate.data",{"_index":1592,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(tmpdata",{"_index":1453,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(translation",{"_index":1640,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(type",{"_index":545,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(value",{"_index":782,"title":{},"body":{"injectables/ConfigService.html":{}}}],["const",{"_index":111,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":806,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["constructor(datajson",{"_index":28,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["constructor(dialog",{"_index":1048,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{}}}],["constructor(fb",{"_index":463,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(http",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":759,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DialogService.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["constructor(public",{"_index":704,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(router",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["content",{"_index":835,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/searchObj.html":{}}}],["content#confirm",{"_index":850,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["content#error",{"_index":1111,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["content#info",{"_index":1465,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["control",{"_index":445,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["convet",{"_index":218,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["cookie",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["coverage",{"_index":1745,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":56,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["create(post",{"_index":882,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["credentials",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["csv",{"_index":12,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["csv.ts",{"_index":7,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["csv.ts:148",{"_index":66,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:162",{"_index":64,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:176",{"_index":59,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:19",{"_index":871,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:197",{"_index":55,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:20",{"_index":856,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:22",{"_index":858,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:224",{"_index":48,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:23",{"_index":857,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:24",{"_index":864,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:25",{"_index":866,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:26",{"_index":867,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:264",{"_index":63,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:27",{"_index":859,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:28",{"_index":865,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:29",{"_index":868,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:30",{"_index":860,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:31",{"_index":863,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:32",{"_index":870,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:33",{"_index":869,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:34",{"_index":861,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:35",{"_index":862,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:62",{"_index":44,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:63",{"_index":46,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:64",{"_index":43,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:66",{"_index":40,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:67",{"_index":32,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:87",{"_index":69,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:94",{"_index":52,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csvconfigconsts",{"_index":88,"title":{"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["csvconfigconsts.bom",{"_index":148,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["csvconfigconsts.default_decimal_separator",{"_index":116,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_field_separator",{"_index":114,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_filename",{"_index":113,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_header",{"_index":121,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_no_download",{"_index":125,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_null_to_empty_string",{"_index":126,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_obj_header",{"_index":122,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_quote",{"_index":115,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_labels",{"_index":117,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_title",{"_index":118,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_title",{"_index":119,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_bom",{"_index":120,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_header",{"_index":124,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_obj_header",{"_index":123,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.eol",{"_index":191,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["csvexport",{"_index":1510,"title":{},"body":{"components/TableComponent.html":{}}}],["current",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdepth",{"_index":956,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["currently",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuser",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["currentuserroles",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuserroles.indexof(systemrole",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentvalue",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["customfilterbasedondisplaycolumns",{"_index":1511,"title":{},"body":{"components/TableComponent.html":{}}}],["customfilterbasedondisplaycolumns(data",{"_index":1436,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["customvalidation",{"_index":446,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["d",{"_index":1039,"title":{},"body":{"components/DateInputComponent.html":{}}}],["data",{"_index":14,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["data.indexof",{"_index":210,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\n",{"_index":211,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\r",{"_index":212,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data.replace(/\"/g",{"_index":208,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data.tolocalestring",{"_index":206,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data.tostring().replace",{"_index":207,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data:attachment/csv;charset=utf",{"_index":170,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["data[columnname",{"_index":1440,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[columnname].tostring().trim().tolowercase().indexof(filter.tolowercase",{"_index":1441,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[page][form][key",{"_index":794,"title":{},"body":{"injectables/ConfigService.html":{}}}],["datachange",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataconnectorservice",{"_index":872,"title":{"injectables/DataConnectorService.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["dataflattnerservice",{"_index":752,"title":{"injectables/DataFlattnerService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["dataflattnerservice.flatten(tmpdata",{"_index":777,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataflattnerservice.isbuffer(value",{"_index":963,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataflattnerservice.unflatten(target[key",{"_index":983,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataimporterrors",{"_index":1078,"title":{},"body":{"injectables/DialogService.html":{}}}],["datajson",{"_index":38,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["datasource",{"_index":1355,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datastore",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["datastoreservice",{"_index":262,"title":{"injectables/DataStoreService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["date",{"_index":628,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["date.patchvalue(moment(date.value",{"_index":1034,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter",{"_index":1020,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["dateadapter.setlocale(lang",{"_index":1032,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(ts.lang",{"_index":1030,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateinputcomponent",{"_index":627,"title":{"components/DateInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datestringtodatefilter",{"_index":1335,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["de",{"_index":1036,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["de'}.json",{"_index":1636,"title":{},"body":{"injectables/TranslationService.html":{}}}],["debug=express",{"_index":1848,"title":{},"body":{"index.html":{}}}],["decimalseparator",{"_index":77,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1150,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["declare",{"_index":127,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["decorators",{"_index":811,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default_decimal_separator",{"_index":94,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_field_separator",{"_index":93,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_filename",{"_index":100,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_header",{"_index":105,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_no_download",{"_index":109,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_null_to_empty_string",{"_index":110,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_obj_header",{"_index":106,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_quote",{"_index":95,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_show_labels",{"_index":102,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_show_title",{"_index":96,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_title",{"_index":98,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_use_bom",{"_index":103,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_use_header",{"_index":108,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["default_use_obj_header",{"_index":107,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["defaultname",{"_index":132,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":875,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"interfaces/searchObj.html":{}}}],["delete(id",{"_index":886,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["delete_forever",{"_index":1558,"title":{},"body":{"components/TableComponent.html":{}}}],["deletebulk",{"_index":1365,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["deletefield",{"_index":876,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["deletefield(id",{"_index":888,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["deletekeys",{"_index":1599,"title":{},"body":{"injectables/TranslationService.html":{}}}],["deletekeys(data",{"_index":1610,"title":{},"body":{"injectables/TranslationService.html":{}}}],["deleteuser",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(url",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["delimiter",{"_index":948,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dependencies",{"_index":1140,"title":{"dependencies.html":{}},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":1241,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/AngularCsv.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1857,"title":{},"body":{"index.html":{}}}],["development",{"_index":1856,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":631,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["dialog'},{'name",{"_index":626,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dialog.component",{"_index":1071,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["dialog.component.html",{"_index":802,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.less",{"_index":801,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":800,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":816,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":814,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":809,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":813,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":810,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.service",{"_index":1710,"title":{},"body":{"injectables/UserService.html":{}}}],["dialog/confirm",{"_index":799,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["dialog_content",{"_index":851,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_message",{"_index":845,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_title",{"_index":831,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogdata",{"_index":1077,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":807,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogref.afterclosed().subscribe((result:any",{"_index":1080,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogservice",{"_index":1041,"title":{"injectables/DialogService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["difference",{"_index":1775,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["difference(newobj",{"_index":1822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":1562,"title":{},"body":{"components/TableComponent.html":{}}}],["directive",{"_index":616,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directives",{"_index":649,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1871,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1874,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":447,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["display",{"_index":832,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["displayedcolumns",{"_index":1358,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["dist",{"_index":1873,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(link",{"_index":182,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["document.body.removechild(link",{"_index":184,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["document.createelement('a",{"_index":174,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["document.queryselector('#file",{"_index":1121,"title":{},"body":{"components/FileInputComponent.html":{}}}],["documentation",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":414,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["done",{"_index":1730,"title":{},"body":{"injectables/UserService.html":{}}}],["done.next(updateroleresp",{"_index":1737,"title":{},"body":{"injectables/UserService.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1126,"title":{},"body":{"components/FileInputComponent.html":{}}}],["e.target.result",{"_index":1129,"title":{},"body":{"components/FileInputComponent.html":{}}}],["edit",{"_index":1364,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["edituser",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(url",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles(url",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["eg",{"_index":1344,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ein",{"_index":1103,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["el",{"_index":1450,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["el.collumnname",{"_index":1447,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["element",{"_index":615,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["element[collumn.collumnname",{"_index":1557,"title":{},"body":{"components/TableComponent.html":{}}}],["elements",{"_index":1373,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["email",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["emptyobj",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["encodeuri(this.csv",{"_index":172,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["entitytype",{"_index":1295,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entitäten",{"_index":1292,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entries",{"_index":763,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entries.push(tmpdata",{"_index":776,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entriesperpage",{"_index":1249,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["entry",{"_index":1347,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enum",{"_index":1326,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enumerations",{"_index":1815,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eol",{"_index":89,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["errobj",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error",{"_index":538,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["errordataarray",{"_index":1062,"title":{},"body":{"injectables/DialogService.html":{}}}],["errordialogsimplecomponent",{"_index":630,"title":{"components/ErrorDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormsg",{"_index":803,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["es",{"_index":1101,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["event",{"_index":1274,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["event.target",{"_index":1368,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["eventemitter",{"_index":469,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["exists",{"_index":1729,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":73,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["exports",{"_index":1151,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["express",{"_index":1801,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["false",{"_index":97,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["fb",{"_index":426,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["fbapp",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fehler",{"_index":1104,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["field",{"_index":424,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["field'},{'name",{"_index":621,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["fieldseparator",{"_index":75,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fieldtocheck",{"_index":1275,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["fieldtoupdate",{"_index":1276,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/searchObj.html":{}}}],["fileinputcomponent",{"_index":633,"title":{"components/FileInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":15,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["filereader",{"_index":1122,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":1862,"title":{},"body":{"index.html":{}}}],["filter",{"_index":758,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtercontrol",{"_index":1357,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtereddatasource",{"_index":1432,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtervalue",{"_index":1529,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fixme",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["flag",{"_index":1876,"title":{},"body":{"index.html":{}}}],["flatcontrolls",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["flatten",{"_index":929,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flatten(target",{"_index":934,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flattner.service",{"_index":753,"title":{},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{}}}],["flattner.service.ts",{"_index":928,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["flattner.service.ts:10",{"_index":933,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:15",{"_index":941,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:26",{"_index":938,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:3",{"_index":1299,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["flattner.service.ts:31",{"_index":936,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:66",{"_index":944,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flex",{"_index":833,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["float",{"_index":71,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["focus",{"_index":1279,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["font",{"_index":846,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["for(const",{"_index":1645,"title":{},"body":{"injectables/TranslationService.html":{}}}],["foreignfieldcheck",{"_index":1288,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["forkjoin",{"_index":1709,"title":{},"body":{"injectables/UserService.html":{}}}],["forkjoin(this.edituser(url",{"_index":1740,"title":{},"body":{"injectables/UserService.html":{}}}],["form",{"_index":448,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["form[key",{"_index":790,"title":{},"body":{"injectables/ConfigService.html":{}}}],["format",{"_index":49,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["formatdata",{"_index":18,"title":{},"body":{"classes/AngularCsv.html":{}}}],["formatdata(data",{"_index":47,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["formbuilder",{"_index":464,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["formbuilder'},{'name",{"_index":636,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder.component",{"_index":1157,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["formbuilderapp",{"_index":1855,"title":{},"body":{"index.html":{}}}],["formbuildercomponent",{"_index":634,"title":{"components/FormbuilderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formbuildermodule",{"_index":1138,"title":{"modules/FormbuilderModule.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["formbuilderservice",{"_index":1242,"title":{"injectables/FormbuilderService.html":{}},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["formbuilderui",{"_index":1854,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":471,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formgroup",{"_index":476,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["formn",{"_index":765,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formobj",{"_index":785,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formobj[form",{"_index":788,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formservice",{"_index":465,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["forroot",{"_index":1153,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["found",{"_index":1656,"title":{},"body":{"injectables/TranslationService.html":{}}}],["fs",{"_index":427,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["function",{"_index":220,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["functions",{"_index":1817,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":166,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["generate",{"_index":53,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"index.html":{}}}],["generatecsv",{"_index":19,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["generated",{"_index":1829,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1863,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1338,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["generic",{"_index":1328,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["get(itemtype",{"_index":890,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["get_app",{"_index":1559,"title":{},"body":{"components/TableComponent.html":{}}}],["getallowedactions",{"_index":986,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getappconfigs",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappconfigs(appdata",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getasyncvalidation",{"_index":877,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["getasyncvalidation(url",{"_index":894,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getbody",{"_index":20,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["getbodyaccordingheader",{"_index":21,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["getconfigbyname",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyname(name",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontrolls",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcsvdata",{"_index":22,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["getcurrentuser",{"_index":987,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getdata",{"_index":750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdisplaydata",{"_index":1512,"title":{},"body":{"components/TableComponent.html":{}}}],["getdisplaydata(colums",{"_index":1442,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["getdisplayrepresentation",{"_index":1348,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["geterrormeesage",{"_index":432,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfbconfig",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getfbconfig(appdata",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getfbdata",{"_index":1600,"title":{},"body":{"injectables/TranslationService.html":{}}}],["getfieldconfig",{"_index":433,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfields",{"_index":878,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getfiltereddisplaydata",{"_index":1513,"title":{},"body":{"components/TableComponent.html":{}}}],["getfiltereddisplaydata(colums",{"_index":1534,"title":{},"body":{"components/TableComponent.html":{}}}],["getflatcontrolls",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getform",{"_index":1302,"title":{},"body":{"interfaces/IForm.html":{}}}],["getform(name",{"_index":1303,"title":{},"body":{"interfaces/IForm.html":{}}}],["getheaderfromobj",{"_index":23,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["getheaders",{"_index":24,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["getisloggedin",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getkey(split.shift",{"_index":973,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getkey(split[0",{"_index":975,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getmeesage",{"_index":434,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getmeesage(type",{"_index":502,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname",{"_index":435,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname()+'#label",{"_index":1473,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getname()+\\'#label",{"_index":1475,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getnavbarstate",{"_index":988,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["gets",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["gettickintervall",{"_index":1496,"title":{},"body":{"components/SliderComponent.html":{}}}],["getting",{"_index":1825,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(url",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseractions",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserdata",{"_index":1601,"title":{},"body":{"injectables/TranslationService.html":{}}}],["getuserprofile",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserprofile(url",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserroles",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserroles(url",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers(url",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalidators",{"_index":436,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getvalue",{"_index":437,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["global",{"_index":128,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["groupby",{"_index":1250,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["h2",{"_index":843,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["hammerjs",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["handlesessiontimeout",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasavailableaction(systemresource",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasownproperty",{"_index":214,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasrole(systemrole",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["header",{"_index":62,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["header.collumnkey",{"_index":1443,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["header.collumnname",{"_index":1398,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["headerrow",{"_index":188,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["headers",{"_index":67,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["headers.reduce((headerrow",{"_index":187,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["height",{"_index":1464,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["helps",{"_index":1337,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["hidden",{"_index":180,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["hint",{"_index":449,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["hintlabel",{"_index":450,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["his.loadallowedactions",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["home_ui_new",{"_index":491,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["html",{"_index":614,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlattribute",{"_index":451,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1369,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["htmltype",{"_index":452,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["http",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["http://localhost:4200",{"_index":1859,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["httpclientmodule",{"_index":1199,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["httpheaders",{"_index":902,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["iautocompleteoption",{"_index":1262,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["iautocompleteoptions",{"_index":1245,"title":{"interfaces/IAutoCompleteOptions.html":{}},"body":{"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["icodeentry",{"_index":1255,"title":{"interfaces/ICodeEntry.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["icon",{"_index":804,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["iconact",{"_index":438,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconaction",{"_index":453,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconbtn",{"_index":454,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["icustom",{"_index":1257,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["icustomvalidation",{"_index":473,"title":{"interfaces/ICustomValidation.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["id",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["identifier",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["idialogconfig",{"_index":1278,"title":{"interfaces/IDialogConfig.html":{}},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["if(!found",{"_index":1659,"title":{},"body":{"injectables/TranslationService.html":{}}}],["if(!moment.ismoment(date.value",{"_index":1033,"title":{},"body":{"components/DateInputComponent.html":{}}}],["if(!this.config",{"_index":1499,"title":{},"body":{"components/SliderComponent.html":{}}}],["if(!this.configs[page",{"_index":797,"title":{},"body":{"injectables/ConfigService.html":{}}}],["if(!this.userdata[key",{"_index":1661,"title":{},"body":{"injectables/TranslationService.html":{}}}],["if(key",{"_index":1591,"title":{},"body":{"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["if(this.configs[page",{"_index":791,"title":{},"body":{"injectables/ConfigService.html":{}}}],["if(this.field.disabled",{"_index":594,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.init",{"_index":559,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.msgerrors[type](param",{"_index":546,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.userdata",{"_index":1647,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ifield",{"_index":418,"title":{"interfaces/IField.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["iflatobject",{"_index":942,"title":{"interfaces/IFlatObject.html":{}},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["iform",{"_index":1300,"title":{"interfaces/IForm.html":{}},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["iformobj",{"_index":1271,"title":{"interfaces/IFormObj.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["ihtmlattributes",{"_index":480,"title":{"interfaces/IHTMLAttributes.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["implements",{"_index":417,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["import",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["important",{"_index":853,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["imports",{"_index":1237,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["included",{"_index":1865,"title":{},"body":{"index.html":{}}}],["incoorect",{"_index":911,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1298,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["infodialogsimplecomponent",{"_index":637,"title":{"components/InfoDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infomsg",{"_index":1067,"title":{},"body":{"injectables/DialogService.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["information",{"_index":1462,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["informations",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inherited",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["init",{"_index":428,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["initialcolumns",{"_index":1354,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["inject",{"_index":817,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["inject(mat_dialog_data",{"_index":812,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["injectable",{"_index":238,"title":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["injectables",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":72,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"interfaces/searchObj.html":{}}}],["input'},{'name",{"_index":629,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component",{"_index":1204,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["input.component.html",{"_index":1016,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.scss",{"_index":1015,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts",{"_index":1014,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":1580,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:14",{"_index":1116,"title":{},"body":{"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:15",{"_index":1021,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input.component.ts:28",{"_index":1118,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:31",{"_index":1023,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input.component.ts:37",{"_index":1025,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input.component.ts:42",{"_index":1024,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input/date",{"_index":1013,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/file",{"_index":1113,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/text",{"_index":1203,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["inputnode",{"_index":1120,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputnode.files[0",{"_index":1123,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputs",{"_index":442,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["insert",{"_index":922,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["insertfield",{"_index":879,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["insertfield(field",{"_index":897,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["install",{"_index":1840,"title":{},"body":{"index.html":{}}}],["int",{"_index":1293,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["interface",{"_index":74,"title":{"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"interfaces/searchObj.html":{}},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["interfaces",{"_index":1246,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"overview.html":{},"interfaces/searchObj.html":{}}}],["interfaces/icustom",{"_index":531,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["interfaces/ifield",{"_index":530,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["interfaces/imenu",{"_index":754,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interfaces/isliderconfig",{"_index":1491,"title":{},"body":{"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["interfaces/ivalidator",{"_index":533,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["internaltype",{"_index":1578,"title":{},"body":{"components/TextInputComponent.html":{}}}],["inverted",{"_index":1306,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["isallselected",{"_index":1377,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["isarray",{"_index":959,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer",{"_index":930,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer(obj",{"_index":937,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfinite(input",{"_index":143,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["isflat",{"_index":931,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["isflat(object",{"_index":940,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfloat",{"_index":26,"title":{},"body":{"classes/AngularCsv.html":{}}}],["isfloat(input",{"_index":68,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["isliderconfig",{"_index":1260,"title":{"interfaces/ISliderConfig.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"coverage.html":{}}}],["isloggedin",{"_index":257,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isloggedin(value",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ismoment",{"_index":1017,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ismoment(date",{"_index":1022,"title":{},"body":{"components/DateInputComponent.html":{}}}],["isobject",{"_index":964,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["ist",{"_index":1102,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["itableheader",{"_index":1311,"title":{"interfaces/ITableHeader.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["itableviewoptions",{"_index":1261,"title":{"interfaces/ITableViewOptions.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["item",{"_index":908,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["item.error",{"_index":1108,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["item.info",{"_index":1463,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["item.key",{"_index":1474,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["item.name",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[property",{"_index":1417,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["items",{"_index":838,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["itemtype",{"_index":883,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["ivalidator",{"_index":496,"title":{"interfaces/IValidator.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["ja",{"_index":830,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["json",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(datajson",{"_index":136,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["json.parse(localstorage.getitem(this.user_allowed_actions",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.parse(res",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(actions",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(rolesobject",{"_index":1744,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":1726,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(userprofile",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":834,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["kat",{"_index":891,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["kat.length",{"_index":914,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["key",{"_index":770,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["key.split(delimiter",{"_index":971,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key1",{"_index":972,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key2",{"_index":974,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{}}}],["keya.length",{"_index":967,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keyb.length",{"_index":968,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keydown",{"_index":1018,"title":{},"body":{"components/DateInputComponent.html":{}}}],["keytosave",{"_index":1254,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["keyup",{"_index":1019,"title":{},"body":{"components/DateInputComponent.html":{}}}],["l",{"_index":1035,"title":{},"body":{"components/DateInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["label",{"_index":598,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/SlideToggleComponent.html":{}}}],["labels",{"_index":16,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["lang",{"_index":1596,"title":{},"body":{"injectables/TranslationService.html":{}}}],["langpath",{"_index":1634,"title":{},"body":{"injectables/TranslationService.html":{}}}],["left",{"_index":852,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["legend",{"_index":613,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["level",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib",{"_index":635,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["libraries",{"_index":1867,"title":{},"body":{"index.html":{}}}],["line",{"_index":196,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["link",{"_index":173,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["link.click",{"_index":183,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["link.download",{"_index":181,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["link.href",{"_index":175,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["link.setattribute('target",{"_index":177,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["link.setattribute('visibility",{"_index":179,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["list",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["literal",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IAutoCompleteOptions.html":{}}}],["loadafterpercentscrolled",{"_index":1251,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["loadallowedactions",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loaduserprofile",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locale",{"_index":204,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["localede",{"_index":1217,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["locally",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem(this.bla",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.bla",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.user_allowed_actions",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.bla",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.user_allowed_actions",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lodash",{"_index":757,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["login",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["login(credentials",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["login(loginurl",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpage",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginurl",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginurl).pipe",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["logout(navigatetologinpage",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout(url",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["long",{"_index":1566,"title":{},"body":{"components/TableComponent.html":{}}}],["löschen",{"_index":1561,"title":{},"body":{"components/TableComponent.html":{}}}],["main",{"_index":1842,"title":{},"body":{"index.html":{}}}],["make",{"_index":1340,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map",{"_index":904,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["map((column",{"_index":1402,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map(value",{"_index":926,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["margin",{"_index":844,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["mastertoggle",{"_index":1385,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mat",{"_index":849,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["mat_date_formats",{"_index":1196,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_date_locale",{"_index":1195,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_dialog_data",{"_index":818,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["mat_moment_date_formats",{"_index":1211,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matautocompletemodule",{"_index":1175,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matbuttonmodule",{"_index":1187,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcardmodule",{"_index":1197,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcheckboxmodule",{"_index":1179,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matches",{"_index":1374,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matching",{"_index":237,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1177,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdatepickerparse",{"_index":526,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["matdialog",{"_index":1049,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matdialogmodule",{"_index":1222,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdialogref",{"_index":808,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matexpansionmodule",{"_index":1189,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matformfieldmodule",{"_index":1167,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matgridlistmodule",{"_index":1191,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["maticonmodule",{"_index":1165,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matinputmodule",{"_index":1169,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matlistmodule",{"_index":1171,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matmomentdatemodule",{"_index":1209,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matpaginator",{"_index":1324,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matpaginatormodule",{"_index":1228,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matradiomodule",{"_index":1193,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matselectmodule",{"_index":1173,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsidenavmodule",{"_index":1163,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidermodule",{"_index":1230,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidetogglemodule",{"_index":1232,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsort",{"_index":1323,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matsortmodule",{"_index":1226,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsteppermodule",{"_index":1181,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattabledatasource",{"_index":1322,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mattablemodule",{"_index":1224,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattooltipmodule",{"_index":1183,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattreemodule",{"_index":1185,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["max",{"_index":455,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxdepth",{"_index":949,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["maxlength",{"_index":456,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["menunode",{"_index":410,"title":{"interfaces/MenuNode.html":{}},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["merge",{"_index":756,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merge(data",{"_index":795,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":805,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagecode",{"_index":1294,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagestring",{"_index":1055,"title":{},"body":{"injectables/DialogService.html":{}}}],["metadata",{"_index":420,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":457,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minlength",{"_index":458,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["miscellaneous",{"_index":1814,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":1137,"title":{"modules/FormbuilderModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":1139,"title":{"modules.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{}}}],["moment",{"_index":1029,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"dependencies.html":{}}}],["moment(item[property",{"_index":1415,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["momentdateadapter",{"_index":1210,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["more",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ms",{"_index":1267,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["msg",{"_index":1296,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["msgerrors",{"_index":430,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mssaveblob",{"_index":130,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["mycsv.csv",{"_index":101,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name+'#label",{"_index":1506,"title":{},"body":{"components/SliderComponent.html":{}}}],["name+\\'#label",{"_index":1508,"title":{},"body":{"components/SliderComponent.html":{}}}],["names",{"_index":1851,"title":{},"body":{"index.html":{}}}],["navbarvisibility",{"_index":985,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["navigate",{"_index":1858,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigatetologinpage",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigator",{"_index":129,"title":{"interfaces/Navigator.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["navigator.mssaveblob",{"_index":164,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["navigator.mssaveblob(blob",{"_index":168,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["need",{"_index":1846,"title":{},"body":{"index.html":{}}}],["negativecallback",{"_index":1053,"title":{},"body":{"injectables/DialogService.html":{}}}],["nein",{"_index":829,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["new",{"_index":161,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["newdata",{"_index":1654,"title":{},"body":{"injectables/TranslationService.html":{}}}],["newkey",{"_index":965,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["newobj",{"_index":1824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["newvalidators",{"_index":599,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.email",{"_index":608,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.max",{"_index":601,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.maxlength",{"_index":603,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.min",{"_index":602,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.minlength",{"_index":604,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.pattern",{"_index":606,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.required",{"_index":600,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["next",{"_index":195,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["ng",{"_index":1852,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1405,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngmodule",{"_index":1155,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["ngonchanges",{"_index":1514,"title":{},"body":{"components/TableComponent.html":{}}}],["ngonchanges(changes",{"_index":1418,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngoninit",{"_index":439,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["noaction",{"_index":1280,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["node",{"_index":783,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["node.name",{"_index":784,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodejs",{"_index":1834,"title":{},"body":{"index.html":{}}}],["nodownload",{"_index":84,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":1844,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1839,"title":{},"body":{"index.html":{}}}],["null",{"_index":223,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["nulltoemptystring",{"_index":87,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":486,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["numrows",{"_index":1380,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["numselected",{"_index":1378,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["obj",{"_index":61,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["obj.constructor",{"_index":945,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer",{"_index":946,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer(obj",{"_index":947,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj[key",{"_index":781,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object",{"_index":65,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object(val",{"_index":229,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["object.assign",{"_index":227,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{}}}],["object.assign(newdata",{"_index":1660,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.assign(this.data",{"_index":1652,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.assign(txtfile",{"_index":1648,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(data",{"_index":1658,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(form",{"_index":771,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.entries(this.data",{"_index":1655,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.keys(actions).length",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object.keys(appdata).foreach(page",{"_index":796,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(form).foreach(key",{"_index":789,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(formobj).foreach(form",{"_index":787,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(obj).reduce((accumulator",{"_index":780,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(object).foreach((key",{"_index":957,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.keys(this._options.objheader).foreach(key",{"_index":192,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["object.keys(this._options.objheader).length",{"_index":153,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["object.keys(value).length",{"_index":966,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.hasownproperty",{"_index":215,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.propertyisenumerable",{"_index":217,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.tostring.call(recipient[key1",{"_index":978,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.tostring.call(value",{"_index":962,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.values(roles",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object[key",{"_index":958,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["objectassign",{"_index":138,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectassign(target",{"_index":232,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["objheader",{"_index":83,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":1715,"title":{},"body":{"injectables/UserService.html":{}}}],["ok",{"_index":1107,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["okaction",{"_index":1297,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["oncancel",{"_index":1281,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["onchanges",{"_index":1319,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onclose",{"_index":1282,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["ondatachange",{"_index":1628,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ondeleterecord",{"_index":1515,"title":{},"body":{"components/TableComponent.html":{}}}],["ondeleterecord(row",{"_index":1429,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondeleteselectedrecords",{"_index":1431,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondownload",{"_index":1516,"title":{},"body":{"components/TableComponent.html":{}}}],["ondownload(row",{"_index":1427,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onedit",{"_index":1517,"title":{},"body":{"components/TableComponent.html":{}}}],["onedit(row",{"_index":1425,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onfileselected",{"_index":1114,"title":{},"body":{"components/FileInputComponent.html":{}}}],["oninit",{"_index":419,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["onlangchange",{"_index":1627,"title":{},"body":{"injectables/TranslationService.html":{}}}],["operator",{"_index":1277,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["opt",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter(item",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt[0",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["options",{"_index":30,"title":{"interfaces/Options.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["opts",{"_index":935,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.delimiter",{"_index":951,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.maxdepth",{"_index":952,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.object",{"_index":981,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.safe",{"_index":960,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["origobj",{"_index":1823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1383,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["out",{"_index":1148,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["output",{"_index":953,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["outputs",{"_index":1519,"title":{},"body":{"components/TableComponent.html":{}}}],["overview",{"_index":1881,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":979,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["package",{"_index":1790,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":840,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["page",{"_index":764,"title":{},"body":{"injectables/ConfigService.html":{}}}],["paginator",{"_index":1361,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["param",{"_index":141,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.max",{"_index":519,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.min",{"_index":521,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredlength",{"_index":517,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredpattern",{"_index":524,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":917,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["parser",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["path",{"_index":1609,"title":{},"body":{"injectables/TranslationService.html":{}}}],["path}${this.lang",{"_index":1635,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pattern",{"_index":522,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pipe",{"_index":1581,"title":{"pipes/TranslatePipe.html":{}},"body":{"pipes/TranslatePipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1582,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["pipetransform",{"_index":1587,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["placeholder",{"_index":459,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["position",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["positivecallback",{"_index":1052,"title":{},"body":{"injectables/DialogService.html":{}}}],["positivecallback(result",{"_index":1086,"title":{},"body":{"injectables/DialogService.html":{}}}],["post",{"_index":885,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["prefer",{"_index":197,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["prefix",{"_index":1626,"title":{},"body":{"injectables/TranslationService.html":{}}}],["prev",{"_index":955,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["previousvalue.concat(currentvalue",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1875,"title":{},"body":{"index.html":{}}}],["production",{"_index":1877,"title":{},"body":{"index.html":{}}}],["profile",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["project",{"_index":1828,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1850,"title":{},"body":{"index.html":{}}}],["projects/.../angular",{"_index":1820,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../autocomplete.component.ts",{"_index":1818,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form.service.ts",{"_index":1819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../table.component.ts",{"_index":1816,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/formbuilder/src/lib/classes/angular",{"_index":6,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts",{"_index":416,"title":{},"body":{"components/BaseFieldComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:103",{"_index":510,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:14",{"_index":528,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:158",{"_index":506,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:162",{"_index":504,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:166",{"_index":511,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:192",{"_index":505,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:196",{"_index":501,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:199",{"_index":507,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:25",{"_index":492,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:27",{"_index":498,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:28",{"_index":493,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:29",{"_index":475,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:30",{"_index":490,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:31",{"_index":488,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:32",{"_index":489,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:33",{"_index":487,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:34",{"_index":494,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:35",{"_index":477,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:36",{"_index":472,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:37",{"_index":479,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:38",{"_index":478,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:39",{"_index":495,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:40",{"_index":483,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:41",{"_index":485,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:42",{"_index":484,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:43",{"_index":497,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:44",{"_index":474,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:45",{"_index":481,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:46",{"_index":468,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:49",{"_index":470,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:50",{"_index":514,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:51",{"_index":467,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:54",{"_index":512,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:55",{"_index":513,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:56",{"_index":529,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:59",{"_index":499,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:63",{"_index":500,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:76",{"_index":503,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:83",{"_index":508,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts",{"_index":1133,"title":{},"body":{"components/FormbuilderComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:13",{"_index":1135,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:17",{"_index":1136,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts",{"_index":1149,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts:131",{"_index":1154,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts",{"_index":1243,"title":{},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts:6",{"_index":1244,"title":{},"body":{"injectables/FormbuilderService.html":{}}}],["projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts",{"_index":1247,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/icustom",{"_index":1272,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ifield.ts",{"_index":1256,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts",{"_index":1301,"title":{},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts:8",{"_index":1304,"title":{},"body":{"interfaces/IForm.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts",{"_index":406,"title":{},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:7",{"_index":409,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:8",{"_index":408,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/isliderconfig.ts",{"_index":1305,"title":{},"body":{"interfaces/ISliderConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ivalidator.ts",{"_index":1457,"title":{},"body":{"interfaces/IValidator.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:112",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:12",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:128",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:13",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:139",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:15",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:155",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:159",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:164",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:186",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:190",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:194",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:20",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:201",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:70",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:87",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts",{"_index":710,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:112",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:133",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:14",{"_index":749,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:15",{"_index":747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:16",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:17",{"_index":748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:19",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:27",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:58",{"_index":751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:65",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:89",{"_index":741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:93",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:97",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/data",{"_index":873,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts",{"_index":1042,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:10",{"_index":1050,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:100",{"_index":1069,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:114",{"_index":1058,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:14",{"_index":1061,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:33",{"_index":1064,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:52",{"_index":1066,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:79",{"_index":1054,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/form.service.ts",{"_index":1773,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts",{"_index":1583,"title":{},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts:11",{"_index":1586,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts",{"_index":1594,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:106",{"_index":1612,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:13",{"_index":1623,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:14",{"_index":1624,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:15",{"_index":1625,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:17",{"_index":1606,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:24",{"_index":1617,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:28",{"_index":1608,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:46",{"_index":1613,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:58",{"_index":1615,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:64",{"_index":1619,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:69",{"_index":1621,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:89",{"_index":1611,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:101",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:105",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:109",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:11",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:15",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:17",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:25",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:39",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:47",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:58",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:71",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:77",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:81",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:85",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:97",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/ui",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/server/app.js",{"_index":1849,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1622,"title":{},"body":{"injectables/TranslationService.html":{}}}],["promise((resolve",{"_index":1632,"title":{},"body":{"injectables/TranslationService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"properties.html":{},"interfaces/searchObj.html":{}}}],["property",{"_index":1412,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["propisenumerable",{"_index":216,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":1238,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["providedin",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["providers",{"_index":1156,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["public",{"_index":13,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pure",{"_index":1589,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["questionmark",{"_index":815,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["quotestrings",{"_index":76,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["r\\n",{"_index":90,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["r\\n\\n",{"_index":151,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["radiobutton",{"_index":1468,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton'},{'name",{"_index":639,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["radiobutton.component.html",{"_index":1470,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton.component.scss",{"_index":1469,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobuttoncomponent",{"_index":638,"title":{"components/RadiobuttonComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":1200,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reader",{"_index":1124,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.onload",{"_index":1125,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.readasarraybuffer(inputnode.files[0",{"_index":1130,"title":{},"body":{"components/FileInputComponent.html":{}}}],["readonly",{"_index":429,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["recipient",{"_index":976,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["recipient[key1",{"_index":980,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["reduce((previousvalue",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refresh",{"_index":1518,"title":{},"body":{"components/TableComponent.html":{}}}],["registerallowedactions",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registercurrentuser",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerlocaledata",{"_index":1214,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["registerlocaledata(localede",{"_index":1236,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reject",{"_index":1633,"title":{},"body":{"injectables/TranslationService.html":{}}}],["reload",{"_index":1861,"title":{},"body":{"index.html":{}}}],["removes",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replaysubject",{"_index":994,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":1004,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["repo",{"_index":1866,"title":{},"body":{"index.html":{}}}],["report",{"_index":99,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["required",{"_index":460,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["requirements",{"_index":1833,"title":{},"body":{"index.html":{}}}],["res",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["reset",{"_index":1147,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"overview.html":{}}}],["resolve(this.data",{"_index":1643,"title":{},"body":{"injectables/TranslationService.html":{}}}],["resp",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response",{"_index":1716,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":977,"title":{},"body":{"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["results",{"_index":236,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["resultslength",{"_index":1356,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["return",{"_index":142,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":1563,"title":{},"body":{"components/TableComponent.html":{}}}],["right",{"_index":854,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["roles",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["rolesobject",{"_index":1742,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["router",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["row",{"_index":186,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["row.slice(0",{"_index":190,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["rows",{"_index":1376,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["run",{"_index":1838,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["rxjs/operators",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["s",{"_index":235,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["safe",{"_index":950,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["saveallowedactions(actions",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile",{"_index":255,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile(userprofile",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["scaffolding",{"_index":1869,"title":{},"body":{"index.html":{}}}],["search",{"_index":912,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.categories",{"_index":915,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.id",{"_index":913,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.text",{"_index":916,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["searchable",{"_index":1329,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["searchafternthcharacter",{"_index":1252,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["searchobj",{"_index":905,"title":{"interfaces/searchObj.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["select",{"_index":1393,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{}}}],["select'},{'name",{"_index":641,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["select.component.html",{"_index":1478,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":1477,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":640,"title":{"components/SelectComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1372,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selection",{"_index":1351,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel",{"_index":1316,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel(true",{"_index":1352,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selector",{"_index":421,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["selects",{"_index":1382,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["serve",{"_index":1841,"title":{},"body":{"index.html":{}}}],["server",{"_index":1847,"title":{},"body":{"index.html":{}}}],["server/app.js",{"_index":1864,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":1220,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/data",{"_index":1221,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/form.service",{"_index":535,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["services/translation.pipe",{"_index":1219,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["services/translation.service",{"_index":536,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["set",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"index.html":{}}}],["set('authorization",{"_index":1712,"title":{},"body":{"injectables/UserService.html":{}}}],["set('charset",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["set('content",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["set(allactionswithduplicates",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setallowedactions",{"_index":989,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setallowedactions(value",{"_index":997,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser",{"_index":990,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser(value",{"_index":999,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setisloggedin(value",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setlang",{"_index":1602,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setlang(lang",{"_index":1614,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath",{"_index":1603,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath(path",{"_index":1616,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setupconfig",{"_index":440,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setupconfig(config",{"_index":509,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setvalid",{"_index":1043,"title":{},"body":{"injectables/DialogService.html":{}}}],["setvalid(positivecallback",{"_index":1057,"title":{},"body":{"injectables/DialogService.html":{}}}],["short",{"_index":1569,"title":{},"body":{"components/TableComponent.html":{}}}],["shouldnavbarbevisible",{"_index":1003,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showactions",{"_index":1332,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showasobject",{"_index":1253,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["showcheckbox",{"_index":1331,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showcsvexport",{"_index":1333,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showdataimporterrordialog",{"_index":1044,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdataimporterrordialog(errordataarray",{"_index":1059,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdeleteallbutton",{"_index":1334,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showerrordialog",{"_index":1045,"title":{},"body":{"injectables/DialogService.html":{}}}],["showerrordialog(errormsg",{"_index":1063,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog",{"_index":1046,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog(infomsg",{"_index":1065,"title":{},"body":{"injectables/DialogService.html":{}}}],["showlabels",{"_index":78,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["shownavbar",{"_index":991,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["shownavbar(shouldnavbarbevisible",{"_index":1001,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showpaginator",{"_index":1330,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showthumb",{"_index":1307,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showticks",{"_index":1308,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showtitle",{"_index":80,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["sicher",{"_index":827,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["sie",{"_index":826,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["simple",{"_index":1090,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple'},{'name",{"_index":632,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["simple.component",{"_index":1074,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["simple.component.html",{"_index":1092,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.less",{"_index":1091,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts",{"_index":1089,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simple.component.ts:11",{"_index":1096,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:12",{"_index":1093,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:15",{"_index":1095,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:20",{"_index":1094,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple/error",{"_index":1073,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["simple/info",{"_index":1076,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simplechanges",{"_index":1320,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sind",{"_index":825,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["size",{"_index":847,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["slider",{"_index":1493,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":643,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slider.component.html",{"_index":1495,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider.component.scss",{"_index":1494,"title":{},"body":{"components/SliderComponent.html":{}}}],["slidercomponent",{"_index":642,"title":{"components/SliderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slidetoggle",{"_index":1486,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle'},{'name",{"_index":645,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slidetoggle.component.html",{"_index":1488,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle.component.scss",{"_index":1487,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetogglecomponent",{"_index":644,"title":{"components/SlideToggleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort",{"_index":1363,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sortkeys.foreach((key",{"_index":969,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["space",{"_index":1576,"title":{},"body":{"components/TableComponent.html":{}}}],["split",{"_index":970,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["split.length",{"_index":982,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["src",{"_index":1263,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["src/app",{"_index":1870,"title":{},"body":{"index.html":{}}}],["srcresult",{"_index":1115,"title":{},"body":{"components/FileInputComponent.html":{}}}],["start",{"_index":836,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"index.html":{}}}],["started",{"_index":1826,"title":{"index.html":{}},"body":{}}],["startfb",{"_index":1843,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["statischen",{"_index":1284,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["step",{"_index":1264,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{}}}],["step(object",{"_index":954,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["store.service",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store.service.ts",{"_index":984,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:11",{"_index":1005,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:12",{"_index":992,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:17",{"_index":1002,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":996,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:25",{"_index":995,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:29",{"_index":1000,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:33",{"_index":993,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:37",{"_index":998,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:9",{"_index":1007,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["stored",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["storedallowedactions",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["storeduserprofile",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["string(this.data.errormsg",{"_index":1100,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["string(this.data.infomsg",{"_index":1461,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["structure",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["styles",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["styleurls",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["sub",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl",{"_index":768,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl.push(value.name",{"_index":773,"title":{},"body":{"injectables/ConfigService.html":{}}}],["submit",{"_index":1270,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["subtask.name",{"_index":708,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["successful",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["super(fb",{"_index":705,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["super.ngoninit",{"_index":706,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["support",{"_index":1878,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1056,"title":{},"body":{"injectables/DialogService.html":{}}}],["svg",{"_index":1879,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1413,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["symbols",{"_index":234,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["synchronizevalidator",{"_index":441,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["systemaction",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemresource",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemrole",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1339,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":647,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["table.component.html",{"_index":1349,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1350,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tablecomponent",{"_index":646,"title":{"components/TableComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["tabletype",{"_index":1327,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tap",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(resp",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["target",{"_index":231,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":425,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["templateurl",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["test",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["text",{"_index":482,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["text/csv;charset=utf8",{"_index":163,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["textinputcomponent",{"_index":648,"title":{"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this._isloggedin",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._options",{"_index":137,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.decimalseparator",{"_index":203,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.fieldseparator",{"_index":189,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.filename",{"_index":139,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.filename.replace",{"_index":165,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.headers",{"_index":199,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.headers.length",{"_index":185,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.nodownload",{"_index":160,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.nulltoemptystring",{"_index":213,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.objheader[key",{"_index":193,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.quotestrings",{"_index":209,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.showtitle",{"_index":149,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.title",{"_index":150,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.usebom",{"_index":146,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._options.useobjheader",{"_index":152,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this._path",{"_index":1631,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this._path}${lang",{"_index":1653,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.adduser(url",{"_index":1731,"title":{},"body":{"injectables/UserService.html":{}}}],["this.allowedactions",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.allowedactions.next(value",{"_index":1011,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.allowedactions[systemresource",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.apibaseurl",{"_index":1711,"title":{},"body":{"injectables/UserService.html":{}}}],["this.autocomplete",{"_index":593,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.collumnstobedisplayed",{"_index":1396,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.config",{"_index":1502,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.config.showticks",{"_index":1503,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.config.tickinterval",{"_index":1504,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.configs[page][form",{"_index":792,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configs[page][form][key",{"_index":793,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.control",{"_index":537,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.dirty",{"_index":542,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.disable",{"_index":595,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors",{"_index":539,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors.hasownproperty(error",{"_index":540,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors[error",{"_index":544,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.patchvalue(this.control.value.add(1",{"_index":1038,"title":{},"body":{"components/DateInputComponent.html":{}}}],["this.control.patchvalue(this.control.value.subtract(1",{"_index":1040,"title":{},"body":{"components/DateInputComponent.html":{}}}],["this.control.touched",{"_index":541,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.valuechanges.subscribe(val",{"_index":562,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.csv",{"_index":147,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.currentuser",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.currentuser.next(value",{"_index":1010,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.currentuser.roles",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.customfilterbasedondisplaycolumns(data",{"_index":1404,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data",{"_index":134,"title":{},"body":{"classes/AngularCsv.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.data.errormsg",{"_index":1097,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.data.icon",{"_index":821,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.data.infomsg",{"_index":1458,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.data.length",{"_index":1422,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data.message",{"_index":823,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.data[i",{"_index":201,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.data[i][index",{"_index":202,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.data[key",{"_index":1649,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.datachange.value",{"_index":779,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.datasource.data",{"_index":1389,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filter",{"_index":1367,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.filter(item",{"_index":1433,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.foreach(row",{"_index":1387,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.length",{"_index":1381,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1403,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator",{"_index":1406,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":1424,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sort",{"_index":1408,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sortingdataaccessor",{"_index":1411,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datastore.getallowedactions().subscribe((actions",{"_index":403,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.getcurrentuser().subscribe((user",{"_index":401,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(actionresp['actions",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(null",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(storedallowedactions",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(null",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(profile",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(storeduserprofile",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.delete.emit(row",{"_index":1430,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.deletebulk.emit(filtereddatasource",{"_index":1435,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1085,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(errordialogsimplecomponent",{"_index":1082,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(infodialogsimplecomponent",{"_index":1083,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(matdialog",{"_index":1079,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogref.disableclose",{"_index":820,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.dialogservice.showerrordialog('error",{"_index":1738,"title":{},"body":{"injectables/UserService.html":{}}}],["this.disabled",{"_index":572,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.displayedcolumns.filter((column",{"_index":1400,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.map(header",{"_index":1397,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.push({collumnname",{"_index":1395,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.unshift({collumnname",{"_index":1392,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.download.emit(row",{"_index":1428,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.edit.emit(row",{"_index":1426,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.errormsg",{"_index":1099,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.field",{"_index":548,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.field.config",{"_index":1500,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.filtercontrol.patchvalue",{"_index":1423,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.flatcontrolls",{"_index":760,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.form",{"_index":553,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.formatdata(this.data[i][index",{"_index":200,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.formatdata(this.data[i][key",{"_index":198,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.fs.addfield(this",{"_index":560,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname",{"_index":549,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname(this.name).options",{"_index":1482,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.fs.getform(this.field.name",{"_index":554,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getformcontrol(this.field",{"_index":557,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.generatecsv",{"_index":140,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.getbody",{"_index":158,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.getbodyaccordingheader",{"_index":156,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.getdisplaydata(columns",{"_index":1452,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getfiltereddisplaydata(columns",{"_index":1454,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getheaderfromobj",{"_index":155,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.getheaders",{"_index":157,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["this.getmeesage(error",{"_index":543,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getname",{"_index":610,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getuseractions",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuserprofile",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getvalue",{"_index":611,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.headers",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{}}}],["this.headers.set('usemockup",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hint",{"_index":564,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.hintlabel",{"_index":566,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.htmltype",{"_index":587,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.http.delete('/api",{"_index":919,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete(`${url}${user.id",{"_index":1741,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.url",{"_index":923,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete(url",{"_index":1718,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get('/api",{"_index":918,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get(`${url}${userid",{"_index":1725,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(langpath).subscribe",{"_index":1638,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.http.get(this.apibaseurl",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.url",{"_index":920,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get(url",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post",{"_index":907,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(this.url",{"_index":921,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(url",{"_index":924,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put",{"_index":910,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put(`${url}${user.id",{"_index":1739,"title":{},"body":{"injectables/UserService.html":{}}}],["this.icon",{"_index":822,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.iconaction.emit",{"_index":609,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.iconbtn",{"_index":589,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.infomsg",{"_index":1460,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.init",{"_index":561,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.initialcolumns",{"_index":1399,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isallselected",{"_index":1386,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isloggedin",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ismoment(this.control",{"_index":1037,"title":{},"body":{"components/DateInputComponent.html":{}}}],["this.lang",{"_index":1630,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.loadallowedactions",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loaduserprofile",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.max",{"_index":578,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.maxlength",{"_index":582,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.message",{"_index":824,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.min",{"_index":580,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.minlength",{"_index":584,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.msgerrors[type](param",{"_index":547,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.name",{"_index":551,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.navbarvisibility",{"_index":1009,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navbarvisibility.next(shouldnavbarbevisible",{"_index":1008,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navigatetologinpage",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ondatachange.emit(this.data",{"_index":1642,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.emit(this.lang",{"_index":1651,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.subscribe(val",{"_index":1629,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.options",{"_index":1481,"title":{},"body":{"components/SelectComponent.html":{},"injectables/UserService.html":{}}}],["this.paginator",{"_index":1407,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.placeholder",{"_index":550,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.registerallowedactions",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.registercurrentuser",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.required",{"_index":571,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.resultslength",{"_index":1421,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.router.navigate(['login",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveallowedactions(actions",{"_index":404,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveuserprofile(user",{"_index":402,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.selection.clear",{"_index":1370,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.select(row",{"_index":1388,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.indexof(item",{"_index":1434,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.length",{"_index":1379,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.setupconfig(this.field",{"_index":552,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.sort",{"_index":1409,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.srcresult",{"_index":1128,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.synchronizevalidator",{"_index":596,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.translate.data[key",{"_index":1593,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.ts.data.datepicker_error",{"_index":527,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.email_error",{"_index":525,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.max_error.replace('${param",{"_index":518,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.min_error.replace('${param",{"_index":520,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.minlength_error.replace('${param",{"_index":516,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.pattern_error.replace('${param",{"_index":523,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.required_error",{"_index":515,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data[this.value",{"_index":597,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.ts.transform(header.collumnkey",{"_index":1444,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.updatedata(translation",{"_index":1641,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updateroles(url",{"_index":1735,"title":{},"body":{"injectables/UserService.html":{}}}],["this.use(this.lang",{"_index":1650,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userdata",{"_index":1646,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userservice.getuserprofile(url).subscribe",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.getuserroles().subscribe((actionresp",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.login(usernameandpassword",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.logout(url).subscribe(null",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validators",{"_index":573,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.email",{"_index":607,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.pattern",{"_index":605,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.value",{"_index":563,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.viewoptions.datestringtodatefilter",{"_index":1410,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showactions",{"_index":1394,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showcheckbox",{"_index":1391,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showdeleteallbutton",{"_index":1390,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["throw",{"_index":225,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["throwerror",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throwerror(errobj",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tickinterval",{"_index":1309,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["timer",{"_index":903,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["timer(2000).pipe",{"_index":927,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["title",{"_index":81,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["tmpdata",{"_index":775,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tmpdis",{"_index":570,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["tmpreq",{"_index":569,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["todo",{"_index":1336,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["toggle",{"_index":1234,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["toobject",{"_index":1755,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toobject(target",{"_index":233,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["toobject(val",{"_index":221,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":461,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["tooltipdelay",{"_index":1266,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["tooltipposition",{"_index":1265,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["top",{"_index":1571,"title":{},"body":{"components/TableComponent.html":{}}}],["total",{"_index":1375,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["transform",{"_index":1584,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["transform(key",{"_index":1585,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translate",{"_index":707,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{}}}],["translatepipe",{"_index":1145,"title":{"pipes/TranslatePipe.html":{}},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["translation",{"_index":1639,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translation.service",{"_index":1588,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translationservice",{"_index":466,"title":{"injectables/TranslationService.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":415,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["true).unix",{"_index":1416,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ts",{"_index":431,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"miscellaneous/functions.html":{}}}],["ts.onlangchange.subscribe(lang",{"_index":1031,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ts:translationservice",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":194,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["txt",{"_index":892,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["txtfile",{"_index":1644,"title":{},"body":{"injectables/TranslationService.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["typeerror",{"_index":226,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["typeof",{"_index":135,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ufeff",{"_index":92,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["ui",{"_index":1070,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"index.html":{}}}],["undefined",{"_index":224,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"pipes/TranslatePipe.html":{},"miscellaneous/functions.html":{}}}],["unflatten",{"_index":932,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["unflatten(target",{"_index":943,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["unset",{"_index":1577,"title":{},"body":{"components/TableComponent.html":{}}}],["up",{"_index":1836,"title":{},"body":{"index.html":{}}}],["update",{"_index":880,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["update(id",{"_index":899,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["updatedata",{"_index":1604,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updatedata(data",{"_index":1618,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updateon",{"_index":1268,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["updateroles",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(url",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":1560,"title":{},"body":{"components/TableComponent.html":{}}}],["uri",{"_index":169,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["url",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/IAutoCompleteOptions.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["url.createobjecturl(blob",{"_index":176,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["use",{"_index":1605,"title":{},"body":{"injectables/TranslationService.html":{},"index.html":{}}}],["use(lang",{"_index":1620,"title":{},"body":{"injectables/TranslationService.html":{}}}],["usebom",{"_index":82,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":1240,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["used",{"_index":939,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["useful",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["useheader",{"_index":86,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["useobjheader",{"_index":85,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user).subscribe(adduserres",{"_index":1732,"title":{},"body":{"injectables/UserService.html":{}}}],["user).subscribe(updateroleresp",{"_index":1736,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":1733,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1743,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user/profile",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["user/role",{"_index":1723,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata",{"_index":1597,"title":{},"body":{"injectables/TranslationService.html":{}}}],["userid",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usernameandpassword",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userprofile",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":260,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":1239,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["utf",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["util",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":222,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["val:any",{"_index":219,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{}}}],["valid",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validation",{"_index":532,"title":{},"body":{"components/BaseFieldComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validation.ts",{"_index":1273,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["validatorfn",{"_index":1259,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validators",{"_index":462,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value2",{"_index":1657,"title":{},"body":{"injectables/TranslationService.html":{}}}],["value['actions",{"_index":1724,"title":{},"body":{"injectables/UserService.html":{}}}],["var",{"_index":617,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["variable",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1885,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1832,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1310,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["vertical_align_bottom",{"_index":1554,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild",{"_index":1321,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matpaginator",{"_index":1360,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matsort",{"_index":1362,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewoptions",{"_index":1359,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Navigator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["von",{"_index":1283,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["werten",{"_index":1285,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["whether",{"_index":1371,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["white",{"_index":1575,"title":{},"body":{"components/TableComponent.html":{}}}],["width",{"_index":1087,"title":{},"body":{"injectables/DialogService.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["widthinpercentage",{"_index":1315,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["withcredentials",{"_index":1717,"title":{},"body":{"injectables/UserService.html":{}}}],["word",{"_index":1109,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["work",{"_index":1845,"title":{},"body":{"index.html":{}}}],["works",{"_index":1134,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["wählen",{"_index":1484,"title":{},"body":{"components/SelectComponent.html":{}}}],["xmlexport",{"_index":1047,"title":{},"body":{"injectables/DialogService.html":{}}}],["xmlexport(positivecallback",{"_index":1068,"title":{},"body":{"injectables/DialogService.html":{}}}],["yes",{"_index":39,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{}}}],["zone.js",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1146,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AngularCsv.html":{"url":"classes/AngularCsv.html","title":"class - AngularCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                labels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Private\n                                generateCsv\n                            \n                            \n                                getBody\n                            \n                            \n                                getBodyAccordingHeader\n                            \n                            \n                                getCsvData\n                            \n                            \n                                getHeaderFromObj\n                            \n                            \n                                getHeaders\n                            \n                            \n                                    Static\n                                isFloat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(DataJSON: any, filename: string, options?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DataJSON\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:63\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:224\n                \n            \n\n\n            \n                \n                    Format Data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCsv\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCsv()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:94\n                \n            \n\n\n            \n                \n                    Generate and Download Csv\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:197\n                \n            \n\n\n            \n                \n                    Create Body\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBodyAccordingHeader\n                        \n                    \n                \n            \n            \n                \ngetBodyAccordingHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:176\n                \n            \n\n\n            \n                \n                    Create Body according to obj header\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCsvData\n                        \n                    \n                \n            \n            \n                \ngetCsvData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaderFromObj\n                        \n                    \n                \n            \n            \n                \ngetHeaderFromObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:162\n                \n            \n\n\n            \n                \n                    Create Header from Object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:148\n                \n            \n\n\n            \n                \n                    Create Headers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFloat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFloat(input: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:87\n                \n            \n\n\n            \n                \n                    Check if is Float\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\ndeclare global {\n  interface Navigator {\n      msSaveBlob?: (blob: any, defaultName?: string) => boolean\n  }\n}\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isLoggedIn\n                            \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                bla\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfUserIsAlreadyLoggedIn\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                    Public\n                                handleSessionTimeout\n                            \n                            \n                                loadUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                navigateToLoginPage\n                            \n                            \n                                registerAllowedActions\n                            \n                            \n                                registerCurrentUser\n                            \n                            \n                                saveUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, dataStore: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataStore\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAlreadyLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAlreadyLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:139\n                \n            \n\n\n            \n                \n                    Checks currently only if the userProfile is stored locally\nFIXME: An additional test for a valid cookie would be more useful.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleSessionTimeout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSessionTimeout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:128\n                \n            \n\n\n            \n                \n                    Removes Authentication Informations from Localstorage\nand navigates to the loginpage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserProfile\n                        \n                    \n                \n            \n            \n                \nloadUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginurl: string, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginurl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(navigateToLoginpage: boolean, url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    navigateToLoginpage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLoginPage\n                        \n                    \n                \n            \n            \n                \nnavigateToLoginPage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAllowedActions\n                        \n                    \n                \n            \n            \n                \nregisterAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerCurrentUser\n                        \n                    \n                \n            \n            \n                \nregisterCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(userProfile: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bla\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fbapp-user'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:186\n                                \n                            \n\n                \n                    \n                        setisLoggedIn(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:190\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DataStoreService } from './data-store.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private _isLoggedIn = false;\n  bla = 'fbapp-user';\n\n  private currentUser: {\n    id?: string;\n    name?: string;\n    email?: string;\n  };\n  private allowedActions: Object;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private dataStore: DataStoreService\n  ) {\n    this.registerCurrentUser();\n    this.registerAllowedActions();\n\n    const storedUserProfile = this.loadUserProfile();\n    //const storedAllowedActions = this.loadAllowedActions();\n\n    if (!!storedUserProfile) {\n      this.dataStore.setCurrentUser(storedUserProfile);\n    }\n    /*\n    if (!!storedAllowedActions) {\n      this.dataStore.setAllowedActions(storedAllowedActions);\n    }\n*/\n  }\n  /*\n  hasAvailableAction(systemResource: SystemResource, systemAction: SystemAction) {\n    if (systemResource && systemAction && this.allowedActions && systemResource in this.allowedActions) {\n      const roles: Object = this.allowedActions[systemResource];\n      const allActionsWithDuplicates = Object.values(roles)\n        .reduce((previousValue, currentValue) => {\n          return previousValue.concat(currentValue);\n        });\n      const availableActions = Array.from(new Set(allActionsWithDuplicates)); // [C, C, R, R, U] => [C, R, U]\n      if (!!availableActions && availableActions.indexOf(systemAction) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasRole(systemRole: SystemRole) {\n    if (!systemRole || !this.currentUser) {\n      return false;\n    }\n\n    const currentUserRoles: string[] = this.currentUser.roles;\n    if (currentUserRoles.indexOf(systemRole) >= 0) {\n      return true;\n    }\n    return false;\n  }\n*/\n  login(loginurl: string, username: string, password: string): Observable {\n    const usernameAndPassword = username + ':' + password;\n\n    return this.userService.login(usernameAndPassword, loginurl).pipe(\n      tap(resp => {\n        // console.log('[authenticationService] - login successful', resp);\n        this.isLoggedIn = true;\n      }),\n      tap(() => {\n        // this.getUserProfile();\n      }),\n      tap(() => {\n        // this.getUserActions();\n      })\n    );\n  }\n\n  getUserProfile(url: string) {\n    this.userService.getUserProfile(url).subscribe(\n      (profile: any) => {\n        // console.log('[AuthenticationService] - getUserProfile', profile);\n        this.dataStore.setCurrentUser(profile);\n      },\n      errObj => {\n        throwError(errObj);\n      }\n    );\n  }\n  /*\n  getUserActions() {\n    this.userService.getUserRoles().subscribe((actionResp: Object) => {\n      if (actionResp.hasOwnProperty('actions')) {\n        // console.log('[AuthenticationService] - getUserActions', actionResp);\n        this.dataStore.setAllowedActions(actionResp['actions']);\n      } else {\n        this.dataStore.setAllowedActions(null);\n      }\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n*/\n  public logout(navigateToLoginpage: boolean = true, url: string): void {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    // this.dataStore.setAllowedActions(null);\n\n    this.userService.logout(url).subscribe(null, null, () => {\n      if (navigateToLoginpage) {\n        this.navigateToLoginPage();\n      }\n    });\n  }\n\n  /**\n   * Removes Authentication Informations from Localstorage\n   * and navigates to the loginpage.\n   */\n  public handleSessionTimeout() {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    this.navigateToLoginPage();\n  }\n\n  /**\n   * Checks currently only if the userProfile is stored locally\n   * FIXME: An additional test for a valid cookie would be more useful.\n   */\n  checkIfUserIsAlreadyLoggedIn(): boolean {\n    const storedUserProfile = this.loadUserProfile();\n    const storedAllowedActions = true; //his.loadAllowedActions();\n\n    if (!!storedUserProfile && !!storedAllowedActions) {\n      this.isLoggedIn = true;\n      this.dataStore.setCurrentUser(storedUserProfile);\n      // this.dataStore.setAllowedActions(storedAllowedActions);\n      return true;\n    }\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    return false;\n  }\n\n  navigateToLoginPage() {\n    this.router.navigate(['login']);\n  }\n\n  loadUserProfile(): any {\n    let res = localStorage.getItem(this.bla);\n    return res ? JSON.parse(res) : '' as any;\n  }\n\n  saveUserProfile(userProfile: any): void {\n    // console.log('saveUserProfile', userProfile);\n    if (!!userProfile) {\n      localStorage.setItem(this.bla, JSON.stringify(userProfile));\n    } else {\n      localStorage.removeItem(this.bla);\n    }\n  }\n  /*\n  loadAllowedActions(): any {\n    return JSON.parse(localStorage.getItem(this.USER_ALLOWED_ACTIONS));\n  }\n\n  saveAllowedActions(actions: any): void {\n    // console.log('saveAllowedActions', actions);\n    if (!!actions && Object.keys(actions).length > 0) {\n      localStorage.setItem(this.USER_ALLOWED_ACTIONS, JSON.stringify(actions));\n    } else {\n      localStorage.removeItem(this.USER_ALLOWED_ACTIONS);\n    }\n  }\n*/\n  get isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n\n  set isLoggedIn(value: boolean) {\n    this._isLoggedIn = value;\n  }\n\n  registerCurrentUser() {\n    this.dataStore.getCurrentUser().subscribe((user: any) => {\n      this.currentUser = user;\n      this.saveUserProfile(user);\n    });\n  }\n\n  registerAllowedActions() {\n    this.dataStore.getAllowedActions().subscribe((actions: Object) => {\n      this.allowedActions = actions;\n      //this.saveAllowedActions(actions);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoSearch.html":{"url":"classes/AutoSearch.html","title":"class - AutoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoSearch[] | string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFieldComponent.html":{"url":"components/BaseFieldComponent.html","title":"component - BaseFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/classes/field.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    IField\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                field\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                            \n                                    Public\n                                ts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { IField, IHTMLAttributes } from '../interfaces/ifield';\nimport { ICustomValidation } from '../interfaces/icustom-validation';\nimport { IValidator } from '../interfaces/ivalidator';\nimport { EventEmitter, Input, OnInit, Component } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { FormService } from '../services/form.service';\nimport { TranslationService } from '../services/translation.service';\n\n@Component({\n  selector: 'app-base-field',\n  template: ''\n})\nexport class BaseFieldComponent implements IField, OnInit {\n  private readonly MSGerrors = {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  };\n\n  @Input() name = 'home_ui_new';\n\n  @Input() value = '';\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() minLength: number;\n  @Input() maxLength: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() required: boolean;\n  @Input() form: FormGroup;\n  @Input() control: FormControl;\n  @Input() hintlabel = '';\n  @Input() hint = '';\n  @Input() tooltip = '';\n  @Input() htmlType = 'text';\n  @Input() iconBtn: string;\n  @Input() iconAction: EventEmitter = new EventEmitter();\n  @Input() validators: IValidator;\n  @Input() customValidation: ICustomValidation[];\n  @Input() htmlAttribute: IHTMLAttributes;\n  @Input() autocomplete = 'off';\n\n\n  @Input() change: EventEmitter = new EventEmitter();\n  init = true;\n  field: IField;\n\n  constructor(\n    public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService\n  ) {}\n\n  get(): BaseFieldComponent {\n    return this;\n  }\n\n  getErrorMeesage() {\n    if (this.control) {\n      for (const error in this.control.errors) {\n        if (\n          (this.control.errors.hasOwnProperty(error) && this.control.touched) ||\n          this.control.dirty\n        ) {\n          return this.getMeesage(error, this.control.errors[error]);\n        }\n      }\n    }\n  }\n\n  getMeesage(type: string, param: any) {\n    // console.log(type);\n    if(this.MSGerrors[type](param)) {\n      return this.MSGerrors[type](param);\n    }\n  }\n\n  ngOnInit(): void {\n    this.field = this.fs.getConfigByName(\n      this.placeholder ? this.placeholder : this.name\n    );\n\n    this.setUpConfig(this.field);\n    this.form = this.fs.getForm(this.field.name);\n    // console.log(this.field);\n    // console.log(this.name);\n\n    this.control = this.fs.getFormControl(this.field);\n    // console.log(this.control);\n\n    if(this.init) {\n      this.fs.addField(this);\n    }\n    this.init = false;\n    this.control.valueChanges.subscribe(val => (this.value = val));\n  }\n\n  public setUpConfig(config: IField) {\n    this.hint = config.hint;\n    this.hintlabel = config.hintlabel;\n\n    if (!this.hintlabel) {\n      this.hintlabel = config.name + '#hintlabel';\n    }\n\n    let tmpReq = false;\n    let tmpDis = false;\n\n    if (this.init) {\n      tmpReq = this.required ? this.required : null;\n      tmpDis = this.disabled ? this.disabled : null;\n    }\n\n    this.validators = config.validators;\n    this.disabled = config.disabled ? config.disabled : tmpDis;\n    this.required = config.validators ? config.validators.required : tmpReq;\n    // console.log(this.required);\n\n    this.max = config.validators\n      ? config.validators.max\n      : this.max\n      ? this.max\n      : null;\n    this.min = config.validators\n      ? config.validators.min\n      : this.min\n      ? this.min\n      : null;\n    this.maxLength = config.validators\n      ? config.validators.maxLength\n      : this.maxLength\n      ? this.maxLength\n      : null;\n    this.minLength = config.validators\n      ? config.validators.minLength\n      : this.minLength\n      ? this.minLength\n      : null;\n    this.value = config.value || '';\n    this.htmlType = config.htmlType ? config.htmlType : this.htmlType;\n    this.iconBtn = config.icon? config.icon: this.iconBtn;\n\n    if (config.htmlAttribute && config.htmlAttribute.autocomplete) {\n      this.autocomplete = config.htmlAttribute.autocomplete;\n    }\n\n    if(this.field.disabled && this.control) {\n      this.control.disable();\n    }\n    this.synchronizeValidator();\n  }\n\n  getValue() {\n    return this.ts.data[this.value + '#label'] || this.value;\n  }\n\n  getName() {\n    return this.placeholder ? this.placeholder : this.name;\n  }\n\n  synchronizeValidator() {\n    const newValidators: IValidator = {};\n    if (this.required) {\n      newValidators.required = this.required;\n    }\n    if (this.max) {\n      newValidators.max = this.max;\n    }\n    if (this.min) {\n      newValidators.min = this.min;\n    }\n    if (this.maxLength) {\n      newValidators.maxLength = this.maxLength;\n    }\n    if (this.minLength) {\n      newValidators.minLength = this.minLength;\n    }\n    if (this.validators && this.validators.pattern) {\n      newValidators.pattern = this.validators.pattern;\n    }\n    if (this.validators && this.validators.email) {\n      newValidators.email = this.validators.email;\n    }\n    this.validators = newValidators;\n  }\n\n  getValidators() {\n    return this.validators? this.validators : {};\n  }\n\n  getFieldConfig() {\n    return this as IField;\n  }\n  iconAct() {\n    this.iconAction.emit(\n      {\n        name: this.getName(),\n        value: this.getValue(),\n        btn: this.iconBtn\n      }\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'before'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseFieldComponent implements OnInit {\n  @Input() position = 'before';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService\n  ) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        {{ getName() + \"#label\" | translate }}\n      \n    \n\n\n\n  \n    {{ getName() + \"#label\" | translate }}\n  \n  \n    \n      \n        {{ subtask.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getName() + \"#label\" | translate }}                {{ getName() + \"#label\" | translate }}                      {{ subtask.name }}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configs\n                            \n                            \n                                dataChange\n                            \n                            \n                                emptyObj\n                            \n                            \n                                flatControlls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                buildTree\n                            \n                            \n                                getAppConfigs\n                            \n                            \n                                getConfigByName\n                            \n                            \n                                getControlls\n                            \n                            \n                                getFBConfig\n                            \n                            \n                                getFlatControlls\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildFileTree\n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: literal type, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:65\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of AutoSearch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AutoSearch[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTree\n                        \n                    \n                \n            \n            \n                \nbuildTree(config: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppConfigs\n                        \n                    \n                \n            \n            \n                \ngetAppConfigs(appData: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appData\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfigByName\n                        \n                    \n                \n            \n            \n                \ngetConfigByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlls\n                        \n                    \n                \n            \n            \n                \ngetControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFBConfig\n                        \n                    \n                \n            \n            \n                \ngetFBConfig(appData: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appData\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFlatControlls\n                        \n                    \n                \n            \n            \n                \ngetFlatControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: 'home_ui_new'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatControlls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/config.service.ts:58\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataFlattnerService } from './data-flattner.service';\nimport { IField } from '../interfaces/ifield';\nimport { AutoSearch } from '../interfaces/imenu';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { merge } from 'lodash';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  flatControlls: any[];\n  dataChange = new BehaviorSubject([]);\n  configs: any;\n  emptyObj: IField = {\n    name: 'home_ui_new'\n  };\n\n\n  constructor(private http: HttpClient) {\n    this.flatControlls = [];\n    // console.log(this.flatControlls);\n  }\n\n  buildTree(config: any) {\n    // console.log(config);\n    const entries = [];\n    for (const page in config) {\n      if (page) {\n        for (const formN in config[page]) {\n          if (config[page][formN]) {\n            const subLvl = [];\n            const form: IField[] = config[page][formN];\n            // console.log(form);\n            for (const [key, value] of Object.entries(form)) {\n              // console.log(`${key}: ${value}`);\n              subLvl.push(value.name);\n              // children.push(value.name);\n            }\n            const tmpData = [\n              {\n                name: formN,\n                children: subLvl\n              }\n            ];\n            entries.push(tmpData);\n          }\n        }\n      }\n    }\n    // DataFlattnerService.flatten(tmpData)\n    // this.flatControlls = tmpData;\n    // console.log(\"newtree\", this.flatControlls);\n  }\n\n  get data(): AutoSearch[] {\n    return this.dataChange.value;\n  }\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `AutoSearch`.\n   */\n  buildFileTree(obj: { [key: string]: any }, level: number): AutoSearch[] {\n    return Object.keys(obj).reduce((accumulator, key) => {\n      const value = obj[key];\n      // console.log(value);\n\n      const node = new AutoSearch();\n      node.name = key;\n      if (value != null) {\n        if (typeof value === 'object' && level  {\n      const formObj = appData[page];\n      if (formObj) {\n        Object.keys(formObj).forEach(form => {\n          const forM: any = formObj[form];\n          Object.keys(forM).forEach(key => {\n            const field: IField = forM[key];\n\n            if(this.configs[page] && this.configs[page][form] && this.configs[page][form][key]) {\n              // data[page][form][key] = field;\n              merge(data, {[page]: {[form]: {[key]: field}}});\n            }\n          });\n        });\n      }\n    });\n    return data;\n  }\n\n  getFBConfig(appData: any[]) {\n    let data = {};\n    Object.keys(appData).forEach(page => {\n      const formObj = appData[page];\n      if (formObj) {\n        Object.keys(formObj).forEach(form => {\n          const forM: any = formObj[form];\n          Object.keys(forM).forEach(key => {\n            const field: IField = forM[key];\n\n            if(!this.configs[page] || !this.configs[page][form] || !this.configs[page][form][key]) {\n              // data[page][form][key] = field;\n              merge(data, {[page]: {[form]: {[key]: field}}});\n            }\n          });\n        });\n      }\n    });\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.less\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'questionmark'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  public icon = 'questionmark';\n  public errorMsg: string[] = [];\n  public message: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.message) {\n      this.message = this.data.message;\n    } else {\n      this.message = 'Sind Sie sicher?';\n    }\n    console.log(this.message);\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Sind Sie sicher?\n\n\n\n\n  {{message | translate}}\n\n\n\n\n  Nein\n  \n  \n  \n    Ja\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.less\n                \n                #confirm-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#confirm-dialog_title > h2 {\n  margin: 0;\n}\n\n#confirm-dialog_message {\n  font-size: 14px;\n}\n\nmat-dialog-content#confirm-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Sind Sie sicher?  {{message | translate}}  Nein          Ja  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvConfigConsts.html":{"url":"classes/CsvConfigConsts.html","title":"class - CsvConfigConsts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvConfigConsts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BOM\n                            \n                            \n                                    Static\n                                DEFAULT_DECIMAL_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FIELD_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FILENAME\n                            \n                            \n                                    Static\n                                DEFAULT_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_NO_DOWNLOAD\n                            \n                            \n                                    Static\n                                DEFAULT_NULL_TO_EMPTY_STRING\n                            \n                            \n                                    Static\n                                DEFAULT_OBJ_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_QUOTE\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_LABELS\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_USE_BOM\n                            \n                            \n                                    Static\n                                DEFAULT_USE_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_USE_OBJ_HEADER\n                            \n                            \n                                    Static\n                                EOL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BOM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\ufeff'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_DECIMAL_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FIELD_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ','\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mycsv.csv'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NO_DOWNLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NULL_TO_EMPTY_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_QUOTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\"'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_LABELS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'My Report'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_BOM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\r\\n'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\ndeclare global {\n  interface Navigator {\n      msSaveBlob?: (blob: any, defaultName?: string) => boolean\n  }\n}\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataConnectorService.html":{"url":"injectables/DataConnectorService.html","title":"injectable - DataConnectorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataConnectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteField\n                            \n                            \n                                get\n                            \n                            \n                                getAsyncValidation\n                            \n                            \n                                getFields\n                            \n                            \n                                insertField\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(id)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(itemType: string, id: string, kat: string[], txt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"0\"\n                                    \n\n                                \n                                \n                                    kat\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    txt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsyncValidation\n                        \n                    \n                \n            \n            \n                \ngetAsyncValidation(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFields\n                        \n                    \n                \n            \n            \n                \ngetFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertField\n                        \n                    \n                \n            \n            \n                \ninsertField(field: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataFlattnerService.html":{"url":"injectables/DataFlattnerService.html","title":"injectable - DataFlattnerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataFlattnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flatten\n                            \n                            \n                                    Static\n                                isBuffer\n                            \n                            \n                                    Static\n                                isFlat\n                            \n                            \n                                    Static\n                                unflatten\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    flatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBuffer(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:26\n                \n            \n\n\n            \n                \n                    isBuffer\nused for flatten unflatten\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFlat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFlat(object: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unflatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    unflatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                navbarVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllowedActions\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getNavbarState\n                            \n                            \n                                    Public\n                                setAllowedActions\n                            \n                            \n                                    Public\n                                setCurrentUser\n                            \n                            \n                                    Public\n                                showNavbar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNavbarState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavbarState()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllowedActions(value: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentUser(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showNavbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    showNavbar(shouldNavbarBeVisible: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shouldNavbarBeVisible\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        navbarVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n\n  private navbarVisibility: BehaviorSubject = new BehaviorSubject(true);\n\n  private currentUser: ReplaySubject = new ReplaySubject(1);\n  private allowedActions: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n  }\n\n  public showNavbar(shouldNavbarBeVisible: boolean): void {\n    this.navbarVisibility.next(shouldNavbarBeVisible);\n  }\n\n  public getNavbarState(): BehaviorSubject {\n    return this.navbarVisibility;\n  }\n\n  public getCurrentUser(): ReplaySubject {\n    return this.currentUser;\n  }\n\n  public setCurrentUser(value: any) {\n    this.currentUser.next(value);\n  }\n\n  public getAllowedActions(): ReplaySubject {\n    return this.allowedActions;\n  }\n\n  public setAllowedActions(value: Object): void {\n    this.allowedActions.next(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateInputComponent.html":{"url":"components/DateInputComponent.html","title":"component - DateInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-input\n            \n\n            \n                styleUrls\n                ./date-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isMoment\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, dateAdapter: DateAdapter, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateAdapter\n                                                  \n                                                        \n                                                                    DateAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isMoment\n                        \n                    \n                \n            \n            \n                \nisMoment(date: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \nkeydown()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keyup\n                        \n                    \n                \n            \n            \n                \nkeyup()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { DateAdapter } from '@angular/material/core';\nimport { TranslationService } from '../../services/translation.service';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss']\n})\nexport class DateInputComponent extends BaseFieldComponent implements OnInit {\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    private dateAdapter: DateAdapter,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n    dateAdapter.setLocale(ts.lang);\n\n    ts.onLangChange.subscribe(lang => dateAdapter.setLocale(lang));\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  isMoment(date: FormControl) {\n    if(!moment.isMoment(date.value)) {\n      date.patchValue(moment(date.value, 'L', 'de', true));\n    }\n  }\n\n  keyup(){\n    this.isMoment(this.control);\n    this.control.patchValue(this.control.value.add(1, 'd'));\n  }\n\n  keydown(){\n    this.isMoment(this.control);\n    this.control.patchValue(this.control.value.subtract(1, 'd'));\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./date-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                setValid\n                            \n                            \n                                    Public\n                                showDataImportErrorDialog\n                            \n                            \n                                    Public\n                                showErrorDialog\n                            \n                            \n                                    Public\n                                showInfoDialog\n                            \n                            \n                                    Public\n                                xmlExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/dialog.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:79\n                \n            \n\n\n            \n                \n                    messageString may also be an html String like:\nAre you sure?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    setValid(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showDataImportErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDataImportErrorDialog(errorDataArray: any[], afterDialogCallback: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorDataArray\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showErrorDialog(errorMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showInfoDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInfoDialog(infoMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        xmlExport\n                        \n                    \n                \n            \n            \n                \n                    \n                    xmlExport(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from '../ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from '../ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  public showDataImportErrorDialog(errorDataArray: any[],\n    afterDialogCallback: Function\n  ): MatDialogRef {\n\n    const dialogData = {\n      dataImportErrors: errorDataArray\n    };\n\n    const dialogRef = this.dialog.open(MatDialog, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      afterDialogCallback(result);\n    });\n\n    return dialogRef;\n  }\n\n  public showErrorDialog(errorMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      errorMsg: errorMsg\n    };\n\n    const dialogRef = this.dialog.open(ErrorDialogSimpleComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  public showInfoDialog(infoMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      infoMsg: infoMsg\n    };\n\n    const dialogRef = this.dialog.open(InfoDialogSimpleComponent, {\n      data: dialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  /**\n   * messageString may also be an html String like:\n   * Are you sure?\n   *\n   * @param {string} messageString\n   * @param {Function} positiveCallback\n   * @param {Function} negativeCallback\n   */\n  public confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function): void {\n    console.log(messageString);\n\n    const dialogData = {\n      message: messageString\n    };\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result === true) {\n        positiveCallback();\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public xmlExport(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog);\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public setValid(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog, {width: '350px'});\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogSimpleComponent.html":{"url":"components/ErrorDialogSimpleComponent.html","title":"component - ErrorDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-simple\n            \n\n            \n                styleUrls\n                ./error-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog-simple',\n  templateUrl: './error-dialog-simple.component.html',\n  styleUrls: ['./error-dialog-simple.component.less']\n})\nexport class ErrorDialogSimpleComponent implements OnInit {\n\n  public icon = 'error';\n  public errorMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.errorMsg && Array.isArray(this.data.errorMsg)) {\n      this.errorMsg = this.data.errorMsg;\n    } else {\n      this.errorMsg = [String(this.data.errorMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Es ist ein Fehler aufgetreten!\n   1\">Es sind Fehler aufgetreten!\n\n\n\n\n  \n    {{errorMsg | translate}}\n  \n\n\n\n\n  \n    OK\n  \n\n\n    \n\n    \n                \n                    ./error-dialog-simple.component.less\n                \n                \n#error-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#error-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.error-dialog_message {\n  font-size: 14px;\n  word-break: break-all;\n}\n\nmat-dialog-content#error-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Es ist ein Fehler aufgetreten!   1\">Es sind Fehler aufgetreten!      {{errorMsg | translate}}        OK  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-input\n            \n\n            \n                styleUrls\n                ./file-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcResult\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        srcResult\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.scss']\n})\nexport class FileInputComponent extends BaseFieldComponent implements OnInit {\n\n  @Input() srcResult: any;\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.name);\n    // console.log(this.control);\n    // console.log(this.form);\n  }\n\n  onFileSelected() {\n    const inputNode: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined' && typeof (inputNode.files[0]) !== 'undefined') {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        // console.log(e);\n\n        this.srcResult = e.target.result;\n      };\n\n      reader.readAsArrayBuffer(inputNode.files[0]);\n      // console.log(reader);\n\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Choose File\n  \n  \n\n    \n\n    \n                \n                    ./file-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose File    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormbuilderComponent.html":{"url":"components/FormbuilderComponent.html","title":"component - FormbuilderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormbuilderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/formbuilder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-formbuilder\n            \n\n\n\n            \n                template\n                \n  formbuilder works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-formbuilder',\n  template: `\n    \n      formbuilder works!\n    \n  `,\n  styles: [\n  ]\n})\nexport class FormbuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  formbuilder works!'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormbuilderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormbuilderModule.html":{"url":"modules/FormbuilderModule.html","title":"module - FormbuilderModule","body":"\n                   \n\n\n\n\n    Modules\n    FormbuilderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_bootstrap\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nFormbuilderModule->TranslatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            BaseFieldComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            ErrorDialogSimpleComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            InfoDialogSimpleComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            FormbuilderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.module.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { ngModule: typeof FormbuilderModule; providers: {}; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormbuilderComponent } from './formbuilder.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectComponent } from './ui-components/select/select.component';\nimport { TextInputComponent } from './ui-components/text-input/text-input.component';\nimport { DateInputComponent } from './ui-components/date-input/date-input.component';\nimport { FileInputComponent } from './ui-components/file-input/file-input.component';\nimport { AutocompleteComponent } from './ui-components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './ui-components/checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './ui-components/radiobutton/radiobutton.component';\nimport { SliderComponent } from './ui-components/slider/slider.component';\nimport { MatMomentDateModule, MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { BaseFieldComponent } from './classes/field';\nimport { TranslatePipe } from './services/translation.pipe';\nimport { TranslationService } from './services/translation.service';\nimport { ConfigService } from './services/config.service';\nimport { DataFlattnerService } from './services/data-flattner.service';\nimport { ConfirmDialogComponent } from './ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from './ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from './ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TableComponent } from './ui-components/table/table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { SlideToggleComponent } from './ui-components/slideToggle/slideToggle.component';\n\nregisterLocaleData(localeDe, 'de');\n\n@NgModule({\n  declarations: [\n    FormbuilderComponent,\n    BaseFieldComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TranslatePipe,\n    ConfirmDialogComponent,\n    ErrorDialogSimpleComponent,\n    InfoDialogSimpleComponent,\n    TableComponent,\n    SlideToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSliderModule,\n    MatSlideToggleModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'de' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n    TranslatePipe\n  ],\n  bootstrap: [FormbuilderComponent],\n  exports: [\n    FormbuilderComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TableComponent,\n    SlideToggleComponent,\n    TranslatePipe\n  ]\n})\n\nexport class FormbuilderModule {\n\n  static forRoot() {\n    return {\n      ngModule: FormbuilderModule,\n      providers: [\n        TranslationService,\n        ConfigService,\n        DataFlattnerService,\n        TranslatePipe\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormbuilderService.html":{"url":"injectables/FormbuilderService.html","title":"injectable - FormbuilderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormbuilderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormbuilderService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoCompleteOptions.html":{"url":"interfaces/IAutoCompleteOptions.html","title":"interface - IAutoCompleteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAutoCompleteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entriesPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadAfterPercentscrolled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchAfterNthCharacter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showAsObject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entriesPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entriesPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupBy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadAfterPercentscrolled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadAfterPercentscrolled:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAfterNthCharacter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchAfterNthCharacter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAsObject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAsObject:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAutoCompleteOptions {\n    showAsObject?: {\n        KeyToSave: string | null\n    };\n    groupBy?: boolean;\n    apiEndpoint?: URL;\n    entriesPerPage?: number;\n    searchAfterNthCharacter?: number;\n    loadAfterPercentscrolled?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeEntry.html":{"url":"interfaces/ICodeEntry.html","title":"interface - ICodeEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomValidation.html":{"url":"interfaces/ICustomValidation.html","title":"interface - ICustomValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICustomValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToCheck\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToUpdate\n                                        \n                                \n                                \n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         IDialogConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDialogConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToCheck\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToCheck:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDialogConfig.html":{"url":"interfaces/IDialogConfig.html","title":"interface - IDialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            okAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onCancel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        okAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        okAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onCancel:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IField.html":{"url":"interfaces/IField.html","title":"interface - IField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customValidation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hintlabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlAttribute\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconAction\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipdelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipposition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidatorFn:         AsyncValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AsyncValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     ISliderConfig | ITableViewOptions | IAutoCompleteOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ISliderConfig | ITableViewOptions | IAutoCompleteOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customValidation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customValidation:         ICustomValidation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICustomValidation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintlabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hintlabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlAttribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlAttribute:         IHTMLAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHTMLAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconAction:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ICodeEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICodeEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipdelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipdelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipposition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateOn:     \"change\" | \"blur\" | \"submit\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"change\" | \"blur\" | \"submit\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validatorFn:         ValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:         IValidator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IValidator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlatObject.html":{"url":"interfaces/IFlatObject.html","title":"interface - IFlatObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlatObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForm.html":{"url":"interfaces/IForm.html","title":"interface - IForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iform.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            form\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getForm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/interfaces/iform.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        form:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\nimport { IField, IFormObj } from './ifield';\n\nexport interface IForm {\n  form: FormGroup;\n  name: string;\n\n  getForm(name: string): FormGroup;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormObj.html":{"url":"interfaces/IFormObj.html","title":"interface - IFormObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     IFormObj[] | IField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormObj[] | IField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHTMLAttributes.html":{"url":"interfaces/IHTMLAttributes.html","title":"interface - IHTMLAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHTMLAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autocomplete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autocomplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autocomplete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISliderConfig.html":{"url":"interfaces/ISliderConfig.html","title":"interface - ISliderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISliderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inverted\n                                        \n                                \n                                \n                                        \n                                            showThumb\n                                        \n                                \n                                \n                                        \n                                            showTicks\n                                        \n                                \n                                \n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            tickInterval\n                                        \n                                \n                                \n                                        \n                                            vertical\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inverted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inverted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showThumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showThumb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTicks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTicks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tickInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tickInterval:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertical\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertical:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISliderConfig {\n    step: number;\n    showThumb: boolean;\n    vertical: boolean;\n    inverted: boolean;\n    showTicks: boolean;\n    tickInterval: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableHeader.html":{"url":"interfaces/ITableHeader.html","title":"interface - ITableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collumnKey\n                                        \n                                \n                                \n                                        \n                                            collumnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            widthInPercentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collumnKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collumnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthInPercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widthInPercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\nimport * as moment from 'moment';\n\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n\n  dateStringToDateFilter?: string;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (this.viewOptions.dateStringToDateFilter) {\n      this.dataSource.sortingDataAccessor = (item, property): string | number => {\n        switch (property) {\n          case this.viewOptions.dateStringToDateFilter: {\n            return moment(item[property], 'L', 'de', true).unix();\n          };\n          default: return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableViewOptions.html":{"url":"interfaces/ITableViewOptions.html","title":"interface - ITableViewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableViewOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dateStringToDateFilter\n                                        \n                                \n                                \n                                        \n                                            searchable\n                                        \n                                \n                                \n                                        \n                                            showActions\n                                        \n                                \n                                \n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                        \n                                            showCSVExport\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDeleteAllButton\n                                        \n                                \n                                \n                                        \n                                            showPaginator\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateStringToDateFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateStringToDateFilter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showActions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCSVExport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCSVExport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeleteAllButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDeleteAllButton:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TableType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\nimport * as moment from 'moment';\n\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n\n  dateStringToDateFilter?: string;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (this.viewOptions.dateStringToDateFilter) {\n      this.dataSource.sortingDataAccessor = (item, property): string | number => {\n        switch (property) {\n          case this.viewOptions.dateStringToDateFilter: {\n            return moment(item[property], 'L', 'de', true).unix();\n          };\n          default: return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidator.html":{"url":"interfaces/IValidator.html","title":"interface - IValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ivalidator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IValidator {\n  required?: boolean;\n  maxLength?: number;\n  minLength?: number;\n  max?: number;\n  min?: number;\n  pattern?: string;\n  email?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogSimpleComponent.html":{"url":"components/InfoDialogSimpleComponent.html","title":"component - InfoDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog-simple\n            \n\n            \n                styleUrls\n                ./info-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                infoMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'info'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-info-dialog-simple',\n  templateUrl: './info-dialog-simple.component.html',\n  styleUrls: ['./info-dialog-simple.component.less']\n})\nexport class InfoDialogSimpleComponent implements OnInit {\n\n  public icon = 'info';\n  public infoMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.infoMsg && Array.isArray(this.data.infoMsg)) {\n      this.infoMsg = this.data.infoMsg;\n    } else {\n      this.infoMsg = [String(this.data.infoMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Information\n\n\n\n\n  \n    \n                   {{infoMsg | translate}}\n    \n  \n\n\n\n\n  OK\n\n\n    \n\n    \n                \n                    ./info-dialog-simple.component.less\n                \n                \n#info-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#info-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.info-dialog_message {\n  font-size: 14px;\n  height: 20px;\n  padding: 0;\n  word-break: break-all;\n}\n\nmat-dialog-content#info-dialog_content {\n  padding-left: 50px !important;\n  padding-right: 50px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Information                         {{infoMsg | translate}}        OK'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuNode.html":{"url":"interfaces/MenuNode.html","title":"interface - MenuNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MenuNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Navigator.html":{"url":"interfaces/Navigator.html","title":"interface - Navigator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Navigator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            msSaveBlob\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msSaveBlob\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msSaveBlob:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\ndeclare global {\n  interface Navigator {\n      msSaveBlob?: (blob: any, defaultName?: string) => boolean\n  }\n}\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decimalseparator\n                                        \n                                \n                                \n                                        \n                                            fieldSeparator\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            noDownload\n                                        \n                                \n                                \n                                        \n                                            nullToEmptyString\n                                        \n                                \n                                \n                                        \n                                            objHeader\n                                        \n                                \n                                \n                                        \n                                            quoteStrings\n                                        \n                                \n                                \n                                        \n                                            showLabels\n                                        \n                                \n                                \n                                        \n                                            showTitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            useBom\n                                        \n                                \n                                \n                                        \n                                            useHeader\n                                        \n                                \n                                \n                                        \n                                            useObjHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decimalseparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimalseparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldSeparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldSeparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullToEmptyString\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nullToEmptyString:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objHeader:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quoteStrings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quoteStrings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTitle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useBom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useObjHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useObjHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\ndeclare global {\n  interface Navigator {\n      msSaveBlob?: (blob: any, defaultName?: string) => boolean\n  }\n}\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadiobuttonComponent.html":{"url":"components/RadiobuttonComponent.html","title":"component - RadiobuttonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadiobuttonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-radiobutton\n            \n\n            \n                styleUrls\n                ./radiobutton.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radiobutton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  styleUrls: ['./radiobutton.component.scss']\n})\nexport class RadiobuttonComponent extends BaseFieldComponent implements OnInit {\n  @Input() options: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n  {{ getName()+'#label' | translate }}\n    \n    \n      \n        {{item.key}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./radiobutton.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ getName()+\\'#label\\' | translate }}                      {{item.key}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadiobuttonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { TranslationService } from '../../services/translation.service';\n\n\n\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent extends BaseFieldComponent implements OnInit {\n  @Input() options?: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.options = this.fs.getConfigByName(this.name).options? this.fs.getConfigByName(this.name).options : this.options;\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Bitte Wählen...\n      \n        {{item.key | translate}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitte Wählen...              {{item.key | translate}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideToggleComponent.html":{"url":"components/SlideToggleComponent.html","title":"component - SlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slidetoggle\n            \n\n            \n                styleUrls\n                ./slideToggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slideToggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slidetoggle',\n  templateUrl: './slideToggle.component.html',\n  styleUrls: ['./slideToggle.component.scss']\n})\nexport class SlideToggleComponent extends BaseFieldComponent implements OnInit {\n  @Input() color: string;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n        {{ getName() + \"#label\" | translate }}\n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slideToggle.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ getName() + \"#label\" | translate }}            {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider\n            \n\n            \n                styleUrls\n                ./slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTickIntervall\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTickIntervall\n                        \n                    \n                \n            \n            \n                \ngetTickIntervall()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if(!this.config && this.field.config) {\n      // console.log(this.field.config);\n      this.config = this.field.config as ISliderConfig;\n    }\n  }\n\n  getTickIntervall() {\n    if (this.config.showTicks) {\n      return this.config.tickInterval > 0 ? this.config.tickInterval : 'auto';\n    }\n\n    return 0;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    {{name+'#label' | translate}}\n\n\n    \n\n    \n                \n                    ./slider.component.scss\n                \n                \nmat-slider {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{name+\\'#label\\' | translate}}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collumnsToBeDisplayed\n                            \n                            \n                                filterControl\n                            \n                            \n                                initialColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                resultsLength\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                csvExport\n                            \n                            \n                                customFilterBasedOnDisplayColumns\n                            \n                            \n                                getDisplayData\n                            \n                            \n                                getFilteredDisplayData\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteRecord\n                            \n                            \n                                onDeleteSelectedRecords\n                            \n                            \n                                onDownload\n                            \n                            \n                                onEdit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                viewOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                delete\n                            \n                            \n                                deleteBulk\n                            \n                            \n                                download\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ts: TranslatePipe)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         ITableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewOptions\n                    \n                \n                \n                    \n                        Type :         ITableViewOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:65\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteBulk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:69\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        csvExport\n                        \n                    \n                \n            \n            \n                \ncsvExport()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFilterBasedOnDisplayColumns\n                        \n                    \n                \n            \n            \n                \ncustomFilterBasedOnDisplayColumns(data: any, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayData\n                        \n                    \n                \n            \n            \n                \ngetDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredDisplayData\n                        \n                    \n                \n            \n            \n                \ngetFilteredDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:85\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:92\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteRecord\n                        \n                    \n                \n            \n            \n                \nonDeleteRecord(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteSelectedRecords\n                        \n                    \n                \n            \n            \n                \nonDeleteSelectedRecords()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDownload\n                        \n                    \n                \n            \n            \n                \nonDownload(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collumnsToBeDisplayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\nimport * as moment from 'moment';\n\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n\n  dateStringToDateFilter?: string;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (this.viewOptions.dateStringToDateFilter) {\n      this.dataSource.sortingDataAccessor = (item, property): string | number => {\n        switch (property) {\n          case this.viewOptions.dateStringToDateFilter: {\n            return moment(item[property], 'L', 'de', true).unix();\n          };\n          default: return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    vertical_align_bottom\n  \n  \n  \n\n\n  \n    \n      \n        {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}\n      \n      \n        {{ element[collumn.collumnName] }}\n      \n    \n  \n\n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n    \n    \n      \n        delete_forever\n      \n      \n        edit\n      \n      \n        get_app\n      \n    \n  \n\n  \n  \n\n\n\n  \n    File Upload\n  \n\n  \n  \n    Löschen\n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                table {\n  width: 100%;\n}\n.row {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-bottom: 5px;\n}\n\n\n.long-filter {\n  float: left;\n  width: calc(100% - 520px) !important;\n}\n\n.short-filter {\n  float: left;\n  width: calc(100% - 560px) !important;\n}\n\n#table-export {\n  float: right;\n  margin-top: 8px;\n}\n\n.mat-column-actions {\n  width: 104px !important;\n  white-space: unset !important;\n}\n\n.mat-column-select {\n  width: 50px !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              vertical_align_bottom                          {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}                    {{ element[collumn.collumnName] }}                                                                                delete_forever                    edit                    get_app                      File Upload          Löschen  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputComponent.html":{"url":"components/TextInputComponent.html","title":"component - TextInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-input\n            \n\n            \n                styleUrls\n                ./text-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                internalType\n                            \n                            \n                                rows\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        internalType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IField\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent extends BaseFieldComponent implements OnInit {\n  @Input() rows = 3;\n  @Input() internalType = 'text';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n      \n        {{ iconBtn }}\n      \n    \n      {{iconBtn}}\n     -->\n    {{ hint }}\n    \n      {{ getErrorMeesage() }}\n    \n  \n  \n    \n      \n  {{ hint }}\n  \n    {{ getErrorMeesage() }}\n  \n\n\n\n    \n\n    \n                \n                    ./text-input.component.scss\n                \n                mat-form-field {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ iconBtn }}                {{iconBtn}}     -->    {{ hint }}          {{ getErrorMeesage() }}                    {{ hint }}      {{ getErrorMeesage() }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TranslatePipe.html":{"url":"pipes/TranslatePipe.html","title":"pipe - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        translate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(key: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: TranslationService) { }\n  transform(key: any): any {\n    // console.log(key);\n    if(key !== 'undefined') {\n// console.log(this.translate.data);\n\n      return this.translate.data[key] || '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _path\n                            \n                            \n                                data\n                            \n                            \n                                lang\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTxtFile\n                            \n                            \n                                deleteKeys\n                            \n                            \n                                getFBData\n                            \n                            \n                                getUserData\n                            \n                            \n                                setLang\n                            \n                            \n                                setPath\n                            \n                            \n                                updateData\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTxtFile\n                        \n                    \n                \n            \n            \n                \naddTxtFile(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteKeys\n                        \n                    \n                \n            \n            \n                \ndeleteKeys(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFBData\n                        \n                    \n                \n            \n            \n                \ngetFBData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPath\n                        \n                    \n                \n            \n            \n                \nsetPath(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'de'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onLangChange: EventEmitter = new EventEmitter();\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onDataChange: EventEmitter = new EventEmitter();\n\n  data: any = {};\n  lang = 'de';\n  userData = {};\n\n  private _path = '';\n  constructor(private http: HttpClient) {\n    this.onLangChange.subscribe(val => {\n      this.lang = val;\n    });\n  }\n\n  setPath(path: string) {\n    this._path = path;\n  }\n\n  addTxtFile(path: string) {\n    return new Promise((resolve, reject) => {\n      const langPath = `${path}${this.lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.updateData(translation);\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          resolve(this.data);\n        }\n      );\n    });\n  }\n\n  getUserData() {\n    let txtFile = {};\n    for(const key in this.userData) {\n      if(this.userData) {\n        Object.assign(txtFile, {\n          [key]: this.data[key]\n        });\n      }\n    }\n    return txtFile;\n  }\n\n  setLang(lang: string) {\n    this.lang = lang;\n    this.use(this.lang);\n    this.onLangChange.emit(this.lang);\n  }\n\n  updateData(data: any) {\n    Object.assign(this.data, data);\n    this.onDataChange.emit(this.data);\n  }\n\n  use(lang: string): Promise {\n    return new Promise((resolve, reject) => {\n      const langPath = `${this._path}${lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.data = Object.assign({}, translation || {});\n          this.lang = lang;\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n\n  deleteKeys(data: any) {\n    // this.data.\n    let newdata = {};\n    for (let [key, value] of Object.entries(this.data)) {\n      console.log(key + ':' + value);\n      let found = false;\n      for (let [key2, value2] of Object.entries(data)) {\n        if(key !== key2) { found = true; }\n        // console.log(key + ':' + value);\n      }\n      if(!found) {\n        Object.assign(newdata, {[key]: value});\n      }\n    }\n    this.data = newdata;\n  }\n\n  getFBData() {\n    let txtFile = {};\n    for(const key in this.data) {\n      if(!this.userData[key]) {\n        Object.assign(txtFile, {\n          [key]: this.data[key]\n        });\n      }\n    }\n    return txtFile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiBaseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                headers\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                addUserAndRoles\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                editUserAndRoles\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogService: DialogService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserAndRoles\n                        \n                    \n                \n            \n            \n                \naddUserAndRoles(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReplaySubject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserAndRoles\n                        \n                    \n                \n            \n            \n                \neditUserAndRoles(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(url: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets current users profile.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the allowed actions of the current user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:71\n                \n            \n\n\n            \n                \n                    get all users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRoles\n                        \n                    \n                \n            \n            \n                \nupdateRoles(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {headers: this.headers}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { DialogService } from './dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8');\n\n  private options = {headers: this.headers};\n\n  apiBaseUrl: string;\n\n  constructor(private http: HttpClient,\n    private dialogService: DialogService\n  ) {\n    this.apiBaseUrl = '/api';\n  }\n\n  login(credentials: any, url: string): Observable {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Charset', 'UTF-8')\n      .set('Authorization', 'Basic ' + btoa(credentials));\n\n    const options: Object = {\n      headers: headers,\n      observe: 'response',\n      withCredentials: true\n    };\n    return this.http.post(url, null, options);\n  }\n\n  logout(url: string): Observable {\n    this.options = {headers: this.headers};\n    return this.http.delete(url, this.options);\n  }\n\n  /**\n   * Gets current users profile.\n   */\n  getUserProfile(url: string): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/profile`, options);\n\n    return this.http.get(url, this.options);\n  }\n\n  /**\n   * Get the allowed actions of the current user\n   */\n  getUserRoles(url: string): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/role`, options)\n    //   .pipe(\n    //     map(value => value['actions'])\n    //   );\n    return this.http.get(url, this.options);\n  }\n\n  /**\n   * get all users\n   */\n  getUsers(url: string): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    return this.http.get(url, this.options);\n  }\n\n  getUser(url: string, userId: number): Observable {\n    return this.http.get(`${url}${userId}`, this.options);\n  }\n\n  addUser(url: string, user: any): Observable {\n    return this.http.post(url, JSON.stringify(user), this.options);\n  }\n\n  addUserAndRoles(url: string, user: any): ReplaySubject {\n    // check if bkuUser already exists\n    const done = new ReplaySubject(1);\n    this.addUser(url, user).subscribe(addUserRes => {\n      user.id = addUserRes.id;\n      this.updateRoles(url, user).subscribe(updateRoleResp => done.next(updateRoleResp));\n    }, error => {\n      this.dialogService.showErrorDialog('Error');\n    });\n    return done;\n  }\n\n  editUser(url: string, user: any): Observable {\n    return this.http.put(`${url}${user.id}`, JSON.stringify(user), this.options);\n  }\n\n  editUserAndRoles(url: string, user: any): Observable {\n    return forkJoin(this.editUser(url, user), this.updateRoles(url, user));\n  }\n\n  deleteUser(url: string, user: any): Observable {\n    return this.http.delete(`${url}${user.id}`, this.options);\n  }\n\n  updateRoles(url: string, user: any) {\n    const rolesObject = {\n      'roles': user.roles\n    };\n    return this.http.put(`${url}${user.id}`, JSON.stringify(rolesObject), this.options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            AngularCsv\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            CsvConfigConsts\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            interface\n            Navigator\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            objectAssign\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            toObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            ConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            hasOwnProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            propIsEnumerable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/field.ts\n            \n            component\n            BaseFieldComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.component.ts\n            \n            component\n            FormbuilderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.service.ts\n            \n            injectable\n            FormbuilderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n            \n            interface\n            IAutoCompleteOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            ICustomValidation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            IDialogConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            ICodeEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IField\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IFormObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IHTMLAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iform.ts\n            \n            interface\n            IForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            class\n            AutoSearch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            interface\n            MenuNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n            \n            interface\n            ISliderConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ivalidator.ts\n            \n            interface\n            IValidator\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            injectable\n            DataConnectorService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            interface\n            searchObj\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            injectable\n            DataFlattnerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            interface\n            IFlatObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            function\n            difference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.pipe.ts\n            \n            pipe\n            TranslatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            function\n            checkKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            variable\n            _filter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n            \n            component\n            DateInputComponent\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n            \n            component\n            ErrorDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n            \n            component\n            InfoDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n            \n            component\n            RadiobuttonComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n            \n            component\n            SlideToggleComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableViewOptions\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n            \n            component\n            TextInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.6\n        \n            @angular/cdk : ~13.3.6\n        \n            @angular/common : ~13.3.6\n        \n            @angular/compiler : ~13.3.6\n        \n            @angular/core : ~13.3.6\n        \n            @angular/forms : ~13.3.6\n        \n            @angular/localize : ~13.3.6\n        \n            @angular/material : ~13.3.6\n        \n            @angular/material-moment-adapter : ~13.3.6\n        \n            @angular/platform-browser : ~13.3.6\n        \n            @angular/platform-browser-dynamic : ~13.3.6\n        \n            @angular/router : ~13.3.6\n        \n            @types/pouchdb : ^6.4.0\n        \n            body-parser : ^1.19.0\n        \n            express : ^4.17.1\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.1\n        \n            rxjs : ^7.4.0\n        \n            tslib : ^2.3.1\n        \n            util : ^0.12.4\n        \n            zone.js : ~0.11.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableType   (projects/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TableType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : FILE\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkKey   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            difference   (projects/.../form.service.ts)\n                        \n                        \n                            objectAssign   (projects/.../angular-csv.ts)\n                        \n                        \n                            toObject   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkKey\n                        \n                    \n                \n            \n            \n                \ncheckKey(ts: TranslationService, item: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ts\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/services/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        difference\n                        \n                    \n                \n            \n            \n                \ndifference(newObj: any, origObj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    origObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        objectAssign\n                        \n                    \n                \n            \n            \n                \nobjectAssign(target: any, ...source: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Assign data  to new Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toObject\n                        \n                    \n                \n            \n            \n                \ntoObject(val: any)\n                \n            \n\n\n\n\n            \n                \n                    Convet to Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularFormbuilder\nThis project was generated with Angular CLI version 12.\nRequirements:\nNodejs Version 14\nangular CLI Version 12\nSet Up\nTo start the Application run:\nnpm install\nRun\nnpm start\nto serve the main Application\nRun \nnpm startFB\nto start the Formbuilder UI\nNOTE:\nFor the Formbuilder UI to work you need to start the express server with:\nDEBUG=express:* node ./projects/server/app.js\nOptional:\nYou can run and build all projects with their names after the ng command: ng serve formbuilderui (formbuilder | formbuilderui| formbuilderapp)\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nTo start the generating server run DEBUG=express:* node ./server/app.js\nIncluded in this Repo are:\nProject: FormbuilderApp, FormbuilderUi\nLibraries: Angular Formbuilder\nCode scaffolding\nRun ng generate component component-name in 'src/app/' to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FormbuilderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nFormbuilderModule->TranslatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/searchObj.html":{"url":"interfaces/searchObj.html","title":"interface - searchObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  searchObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _filter   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            ConfigDefaults   (projects/.../angular-csv.ts)\n                        \n                        \n                            hasOwnProperty   (projects/.../angular-csv.ts)\n                        \n                        \n                            propIsEnumerable   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (opt: any[], value: string, ts:TranslationService): string[] => {\n  const filterValue = value.toLowerCase();\n  if (opt) {\n    if (typeof opt[0] === 'string') {\n      return opt.filter(item => checkKey(ts, item, filterValue));\n    } else {\n      return opt.filter(\n        item => checkKey(ts, item.name, filterValue)\n      );\n    }\n  } else {\n    return [];\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOwnProperty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.hasOwnProperty\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propIsEnumerable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.propertyIsEnumerable\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
