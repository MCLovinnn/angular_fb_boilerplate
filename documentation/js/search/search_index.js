var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AngularCsv.html",[0,0.274,1,1.865]],["body/classes/AngularCsv.html",[0,0.275,1,1.873,2,1.645,3,0.117,4,0.163,5,0.087,6,4.003,7,1.4,8,0.218,9,0.354,10,1.501,11,3.385,12,3.476,13,1.726,14,2.558,15,4.488,16,3.385,17,0.71,18,3.649,19,3.797,20,3.797,21,3.797,22,3.797,23,3.797,24,3.797,25,4.118,26,3.649,27,0.438,28,2.782,29,0.513,30,1.799,31,1.044,32,3.649,33,0.911,34,0.021,35,0.499,36,0.306,37,0.431,38,3.385,39,1.813,40,2.378,41,0.571,42,0.306,43,2.378,44,2.378,45,2.319,46,2.378,47,2.782,48,2.378,49,2.782,50,2.148,51,1.185,52,2.378,53,2.525,54,2.148,55,2.378,56,4.215,57,2.932,58,1.419,59,2.378,60,2.782,61,2.148,62,4.323,63,2.378,64,2.378,65,1.291,66,2.378,67,2.44,68,2.782,69,2.378,70,2.525,71,2.782,72,1.197,73,0.244,74,0.196,75,2.002,76,2.002,77,2.002,78,2.002,79,1.06,80,2.002,81,2.002,82,2.002,83,2.525,84,2.002,85,2.525,86,2.525,87,2.525,88,1.511,89,1.813,90,1.813,91,1.813,92,1.813,93,1.813,94,1.813,95,1.813,96,1.813,97,1.656,98,1.813,99,1.813,100,1.813,101,1.813,102,1.813,103,1.813,104,0.749,105,1.813,106,1.813,107,1.813,108,1.813,109,1.813,110,1.813,111,1.63,112,2.319,113,1.645,114,1.645,115,1.645,116,1.645,117,1.645,118,1.645,119,1.645,120,1.645,121,1.645,122,1.645,123,1.645,124,1.645,125,1.645,126,1.645,127,1.4,128,1.08,129,2.141,130,1.813,131,2.782,132,1.511,133,2.782,134,1.813,135,2.061,136,1.537,137,1.813,138,1.813,139,3.678,140,1.813,141,4.762,142,1.813,143,1.813,144,1.813,145,1.813,146,1.813,147,2.782,148,2.036,149,1.813,150,1.813,151,1.813,152,1.813,153,1.813,154,1.813,155,1.813,156,0.961,157,1.813,158,1.813,159,1.813,160,2.782,161,2.782,162,2.782,163,1.813,164,1.813,165,1.813,166,1.645,167,1.813,168,1.813,169,1.813,170,1.813,171,1.813,172,1.813,173,1.813,174,1.813,175,1.813,176,1.813,177,1.813,178,1.813,179,1.813,180,1.813,181,4.661,182,1.813,183,1.813,184,4.096,185,3.797,186,3.797,187,2.782,188,1.813,189,2.002,190,2.002,191,2.002,192,2.148,193,1.813,194,1.813,195,2.782,196,1.813,197,1.813,198,3.385,199,1.813,200,2.782,201,1.813,202,1.813,203,1.813,204,3.385,205,1.813,206,1.813,207,1.813,208,1.813,209,1.511,210,1.645,211,1.511,212,1.645,213,1.645,214,1.813,215,1.873,216,1.645,217,2.148,218,1.479,219,1.873,220,1.813,221,1.813,222,1.645,223,1.813,224,1.813,225,1.645,226,1.511,227,1.645,228,1.813,229,1.813,230,2.782,231,0.01,232,0.01]],["title/injectables/AuthenticationService.html",[233,0.919,234,2.77]],["body/injectables/AuthenticationService.html",[0,0.206,3,0.134,4,0.1,5,0.1,8,0.134,9,0.393,10,1.61,13,1.436,14,0.992,17,0.787,27,0.502,29,0.506,31,1.095,33,1.171,34,0.021,35,0.672,36,0.318,37,0.554,41,1.16,42,0.734,51,1.303,58,1.61,65,1.371,73,0.134,79,1.13,97,1.82,104,1.304,111,2.125,136,1.547,148,1.664,218,1.64,231,0.011,232,0.011,233,1.024,234,3.086,235,1.239,236,2.337,237,4.826,238,4.135,239,4.826,240,4.135,241,5.34,242,4.886,243,5.34,244,5.34,245,4.135,246,3.468,247,5.975,248,5.34,249,5.34,250,4.048,251,3.468,252,4.826,253,2.728,254,5.975,255,4.279,256,4.826,257,3.694,258,4.048,259,2.728,260,4.048,261,4.048,262,5.704,263,3.468,264,4.048,265,4.048,266,4.048,267,4.048,268,4.048,269,4.048,270,4.048,271,4.048,272,2.728,273,2.728,274,4.048,275,4.048,276,4.048,277,4.048,278,4.048,279,4.048,280,2.728,281,4.048,282,5.34,283,2.728,284,4.048,285,4.135,286,4.048,287,2.728,288,2.728,289,2.728,290,2.728,291,4.048,292,2.728,293,2.728,294,4.048,295,3.358,296,2.728,297,1.887,298,2.728,299,2.728,300,2.728,301,2.728,302,2.728,303,0.72,304,0.329,305,2.337,306,2.728,307,1.496,308,4.826,309,2.079,310,2.728,311,2.728,312,1.169,313,1.169,314,2.079,315,1.169,316,1.4,317,2.728,318,2.728,319,5.34,320,4.048,321,5.34,322,2.728,323,4.048,324,4.048,325,2.728,326,4.826,327,4.826,328,4.135,329,2.337,330,2.728,331,2.728,332,2.728,333,2.728,334,2.728,335,2.728,336,4.048,337,2.728,338,2.728,339,4.826,340,4.826,341,4.048,342,2.728,343,2.728,344,4.048,345,3.468,346,2.728,347,2.728,348,2.728,349,2.728,350,2.728,351,2.728,352,4.826,353,2.728,354,2.728,355,5.704,356,2.728,357,2.728,358,2.728,359,2.337,360,2.728,361,4.048,362,4.048,363,4.048,364,2.728,365,2.728,366,2.728,367,2.728,368,5.34,369,4.826,370,2.728,371,4.048,372,2.728,373,2.728,374,3.086,375,2.728,376,2.728,377,2.728,378,2.728,379,2.728,380,2.728,381,2.728,382,2.728,383,2.728,384,2.728,385,3.067,386,2.728,387,2.728,388,2.728,389,2.728,390,4.048,391,2.079,392,2.728,393,2.728,394,2.728,395,2.728,396,2.728]],["title/classes/AutoSearch.html",[0,0.274,397,2.309]],["body/classes/AutoSearch.html",[0,0.416,2,3.814,3,0.27,4,0.202,5,0.202,8,0.27,9,0.628,29,0.546,31,1.004,34,0.02,35,0.797,36,0.317,37,0.628,73,0.317,74,0.455,231,0.017,232,0.017,397,4.508,398,4.203,399,3.891,400,5.513,401,5.513,402,4.115]],["title/components/BaseFieldComponent.html",[403,0.498,404,1.073]],["body/components/BaseFieldComponent.html",[0,0.158,3,0.162,4,0.077,5,0.121,8,0.102,9,0.32,10,0.983,13,1.533,17,0.642,27,0.607,29,0.5,31,1.137,33,0.839,34,0.021,35,0.675,36,0.353,37,0.397,41,1.533,42,0.861,51,1.22,58,1.215,65,0.502,72,1.691,73,0.102,79,0.712,97,1.418,104,0.677,111,1.08,127,0.801,135,2.483,136,1.284,156,1.005,217,1.23,218,2.178,231,0.009,232,0.009,303,0.678,304,0.252,315,1.414,403,0.561,404,1.587,405,1.138,406,0.76,407,0.721,408,1.79,409,1.026,410,1.867,411,1.338,412,0.721,413,2.209,414,2.08,415,1.487,416,2.049,417,1.2,418,2.24,419,2.439,420,1.972,421,1.857,422,1.972,423,1.94,424,2.24,425,2.24,426,1.591,427,2.24,428,2.24,429,2.24,430,2.24,431,1.52,432,1.591,433,2.24,434,1.498,435,1.569,436,1.338,437,1.972,438,1.41,439,1.338,440,1.753,441,1.569,442,1.782,443,1.569,444,1.569,445,1.569,446,1.972,447,2.297,448,2.297,449,2.297,450,2.297,451,1.569,452,2.297,453,1.569,454,1.569,455,1.007,456,1.94,457,2.297,458,1.744,459,3.299,460,2.089,461,1.867,462,2.089,463,1.569,464,2.089,465,1.271,466,2.089,467,2.089,468,1.857,469,2.089,470,2.089,471,2.089,472,1.41,473,2.089,474,1.338,475,2.089,476,2.089,477,2.089,478,1.331,479,2.089,480,2.089,481,2.089,482,2.089,483,1.591,484,2.089,485,2.089,486,2.089,487,2.089,488,1.52,489,2.089,490,2.089,491,2.089,492,2.089,493,2.089,494,1.591,495,2.089,496,2.089,497,2.089,498,2.089,499,2.089,500,2.089,501,1.591,502,2.089,503,2.089,504,2.089,505,2.089,506,2.089,507,2.24,508,1.498,509,1.498,510,1.591,511,1.591,512,1.591,513,2.24,514,1.591,515,1.591,516,1.591,517,1.591,518,2.24,519,1.591,520,1.591,521,1.591,522,2.109,523,1.591,524,1.591,525,1.591,526,1.591,527,1.591,528,1.591,529,1.591,530,1.591,531,1.591,532,1.591,533,2.089,534,2.089,535,1.445,536,2.089,537,1.146,538,2.089,539,1.146,540,0.586,541,1.007,542,0.949,543,3.299,544,0.974,545,2.089,546,2.089,547,2.089,548,2.089,549,2.089,550,2.089,551,2.089,552,2.089,553,2.089,554,2.089,555,2.089,556,4.645,557,3.299,558,2.089,559,2.089,560,2.089,561,2.089,562,2.089,563,3.299,564,2.089,565,4.089,566,2.089,567,2.089,568,4.089,569,2.089,570,2.089,571,4.089,572,4.089,573,5.057,574,4.089,575,5.057,576,5.375,577,3.299,578,2.089,579,2.089,580,5.057,581,2.089,582,5.057,583,2.089,584,5.057,585,2.089,586,5.057,587,2.089,588,2.089,589,3.299,590,3.299,591,4.089,592,3.299,593,2.089,594,3.299,595,2.089,596,2.089,597,2.089,598,2.089,599,2.089,600,1.79,601,3.299,602,2.089,603,2.089,604,2.089,605,2.089,606,2.089,607,3.299,608,2.089,609,3.299,610,2.089,611,2.089,612,2.089,613,2.089,614,2.089,615,0.76,616,1.138,617,1.2,618,0.76,619,1.689,620,0.76,621,0.649,622,0.76,623,0.76,624,0.617,625,0.76,626,0.586,627,0.721,628,0.76,629,0.617,630,0.76,631,1.2,632,0.586,633,0.835,634,1.2,635,0.617,636,0.617,637,0.76,638,0.76,639,0.586,640,0.617,641,0.76,642,0.617,643,0.76,644,0.617,645,0.76,646,0.617,647,0.76,648,0.557,649,0.76,650,0.617,651,0.76,652,0.76]],["title/components/CheckboxComponent.html",[403,0.498,624,1.073]],["body/components/CheckboxComponent.html",[0,0.195,3,0.191,4,0.095,5,0.143,8,0.127,9,0.377,10,0.935,13,1.567,17,0.756,27,0.476,29,0.512,31,1.158,33,0.96,34,0.021,35,0.683,36,0.362,37,0.454,41,1.63,42,0.889,51,1.287,58,1.25,65,0.622,72,1.124,73,0.127,79,0.677,97,0.725,104,0.531,127,0.992,135,2.332,156,0.842,231,0.01,232,0.01,303,0.672,304,0.311,315,1.109,403,0.641,404,2.213,405,1.342,406,0.94,407,0.892,409,1.209,410,1.453,411,1.53,412,0.892,413,2.293,414,2.163,415,0.94,416,1.576,417,0.94,418,2.508,419,2.825,420,1.876,421,1.767,422,1.876,423,2.247,424,2.254,425,2.254,426,1.876,427,2.931,428,2.254,429,2.254,430,2.254,431,1.702,432,1.876,433,2.254,434,1.767,435,1.492,436,1.273,437,1.876,438,1.342,439,1.273,440,1.667,441,1.492,442,1.492,443,1.492,444,1.492,445,1.492,446,1.876,447,2.123,448,2.123,449,2.123,450,2.123,451,1.492,452,2.123,453,1.492,454,1.492,455,1.247,456,2.139,457,2.532,458,1.923,461,1.616,463,0.992,465,0.804,468,1.175,472,0.892,474,1.273,478,1.186,483,1.247,488,0.847,494,1.247,501,1.247,507,1.876,508,1.175,509,1.175,510,1.247,511,1.247,512,1.247,513,1.876,514,1.247,515,1.247,516,1.247,517,1.247,518,1.876,519,1.247,520,1.247,521,1.247,522,1.767,523,1.247,524,1.247,525,1.247,526,1.247,527,1.247,528,1.247,529,1.247,530,1.247,531,1.247,532,1.247,540,0.725,541,1.247,542,1.175,544,0.764,600,4.455,615,0.94,616,1.342,617,1.414,618,0.94,619,1.891,620,0.94,621,0.804,622,0.94,623,0.94,624,1.535,625,0.94,626,0.725,627,0.892,628,0.94,629,0.764,630,0.94,631,1.414,632,0.725,633,0.984,634,1.414,635,0.764,636,0.764,637,0.94,638,0.94,639,0.725,640,0.764,641,0.94,642,0.764,643,0.94,644,0.764,645,0.94,646,0.764,647,0.94,648,0.689,649,0.94,650,0.764,651,0.94,652,0.94,653,0.992,654,1.38,655,2.216,656,1.997,657,3.89,658,1.414,659,4.675,660,1.414,661,3.89,662,4.675,663,3.89,664,3.89,665,3.827,666,1.328,667,1.328,668,1.328,669,1.328,670,1.328,671,1.328,672,1.328,673,1.328,674,1.328,675,1.328,676,1.328,677,1.328,678,1.328,679,1.328,680,1.328,681,1.328,682,1.328,683,1.328,684,1.328,685,1.328,686,1.328,687,1.328,688,1.972,689,1.328,690,1.328,691,1.328,692,1.328,693,1.328,694,1.328,695,1.328,696,1.328,697,1.328,698,1.328,699,1.789,700,1.522,701,1.522,702,1.328,703,1.328,704,1.328,705,1.247,706,1.328,707,1.328,708,1.328,709,2.67,710,3.89]],["title/injectables/ConfigService.html",[233,0.919,711,2.513]],["body/injectables/ConfigService.html",[0,0.293,3,0.19,4,0.143,5,0.215,8,0.19,9,0.504,14,2.272,17,1.01,27,0.715,29,0.293,31,1.092,33,1.201,34,0.021,35,0.703,36,0.336,37,0.568,41,0.933,42,0.916,51,1.215,58,0.933,61,2.286,65,1.566,73,0.19,111,2.306,127,1.993,129,1.873,136,1.426,156,1.267,218,1.574,231,0.014,232,0.014,233,1.315,235,1.764,251,4.451,297,3.594,303,0.807,304,0.468,307,2.13,312,1.665,313,1.665,316,1.994,397,4.351,399,2.13,402,2.468,407,2.156,410,1.615,440,1.665,478,1.335,535,2.687,711,3.594,712,3.327,713,5.854,714,5.854,715,5.854,716,5.195,717,5.195,718,5.854,719,5.854,720,2.687,721,3.972,722,5.195,723,3.302,724,5.195,725,6.25,726,3.884,727,4.451,728,3.594,729,6.25,730,5.195,731,3.594,732,5.195,733,3.884,734,3.884,735,3.884,736,5.015,737,3.884,738,3.884,739,3.884,740,3.884,741,2.286,742,3.327,743,3.884,744,2.286,745,5.854,746,3.884,747,3.884,748,3.884,749,5.195,750,5.195,751,3.884,752,5.195,753,5.195,754,3.884,755,3.014,756,3.884,757,3.884,758,3.884,759,3.884,760,3.594,761,3.884,762,3.884,763,3.884,764,3.884,765,3.884,766,3.884,767,3.884,768,3.327,769,3.884]],["title/components/ConfirmDialogComponent.html",[403,0.498,626,1.019]],["body/components/ConfirmDialogComponent.html",[0,0.273,3,0.243,4,0.133,5,0.182,8,0.177,9,0.481,10,0.87,13,1.718,14,2.207,17,0.963,27,0.911,29,0.48,31,1.018,33,0.743,34,0.02,35,0.635,36,0.312,37,0.351,41,1.19,42,0.637,51,0.704,58,0.87,72,0.87,73,0.177,104,0.743,128,1.643,136,0.826,148,1.708,231,0.013,232,0.013,303,0.596,304,0.436,403,0.775,404,1.068,405,1.708,406,1.316,407,1.248,409,1.539,411,1.848,412,1.248,413,2.402,414,2.272,415,1.316,417,1.316,431,1.987,474,1.185,544,1.068,615,1.316,616,1.708,617,1.801,618,1.316,619,2.207,620,1.316,621,1.125,622,1.316,623,1.316,624,1.068,625,1.316,626,1.703,627,2.445,628,1.316,629,1.068,630,1.316,631,1.801,632,1.015,633,1.609,634,1.801,635,1.068,636,1.068,637,1.316,638,1.316,639,1.015,640,1.068,641,1.316,642,1.068,643,1.316,644,1.068,645,1.316,646,1.068,647,1.316,648,0.964,649,1.316,650,1.068,651,1.316,652,1.316,653,1.388,654,1.985,658,1.801,660,1.801,709,2.543,770,4.65,771,4.65,772,3.1,773,5.646,774,4.952,775,4.304,776,3.601,777,4.399,778,2.758,779,3.906,780,4.2,781,4.952,782,3.619,783,2.503,784,3.775,785,3.619,786,3.619,787,4.952,788,3.619,789,2.758,790,2.758,791,1.858,792,2.758,793,3.775,794,2.758,795,4.952,796,4.952,797,4.837,798,5.646,799,5.646,800,3.619,801,4.952,802,4.952,803,3.775,804,2.503,805,3.426,806,2.758,807,2.3,808,2.503,809,2.758,810,2.758,811,2.758,812,4.304,813,2.758,814,4.628,815,2.758,816,3.426,817,2.758,818,2.758,819,2.758,820,2.758,821,3.426,822,3.619,823,2.758,824,2.758,825,3.775,826,3.775,827,2.758]],["title/classes/CsvConfigConsts.html",[0,0.274,88,2.309]],["body/classes/CsvConfigConsts.html",[0,0.272,1,1.204,2,1.622,3,0.115,4,0.162,5,0.086,6,4.057,7,1.38,8,0.216,9,0.35,10,1.058,11,1.788,12,2.911,13,1.678,14,2.487,15,4.064,16,1.788,19,1.788,20,1.788,21,1.788,22,1.788,23,1.788,24,1.788,25,4.406,28,1.788,29,0.516,30,1.576,31,1.06,34,0.021,36,0.312,38,2.752,41,1.644,42,0.88,45,1.49,47,1.788,49,1.788,53,1.622,54,1.38,56,3.421,57,2.125,58,1.058,60,1.788,61,1.38,62,3.769,65,1.283,67,2.245,68,1.788,70,1.622,71,1.788,72,1.058,73,0.242,74,0.193,75,1.98,76,1.98,77,1.98,78,1.98,79,1.056,80,1.98,81,1.98,82,1.98,83,2.498,84,1.98,85,2.498,86,2.498,87,2.498,88,2.294,89,3.356,90,2.752,91,3.356,92,2.752,93,3.356,94,3.356,95,3.356,96,3.356,97,1.864,98,3.356,99,2.752,100,3.356,101,2.752,102,3.356,103,3.356,104,0.903,105,3.356,106,3.356,107,3.356,108,3.356,109,3.356,110,3.356,111,1.619,112,2.294,113,1.622,114,1.622,115,1.622,116,1.622,117,1.622,118,1.622,119,1.622,120,1.622,121,1.622,122,1.622,123,1.622,124,1.622,125,1.622,126,1.622,127,1.385,128,1.065,129,2.123,130,1.788,131,2.752,132,1.49,133,2.752,134,1.788,135,2.048,136,1.533,137,1.788,138,1.788,139,3.663,140,1.788,141,4.743,142,1.788,143,1.788,144,1.788,145,1.788,146,1.788,147,2.752,148,2.026,149,1.788,150,1.788,151,1.788,152,1.788,153,1.788,154,1.788,155,1.788,156,0.953,157,1.788,158,1.788,159,1.788,160,2.752,161,2.752,162,2.752,163,1.788,164,1.788,165,1.788,166,1.622,167,1.788,168,1.788,169,1.788,170,1.788,171,1.788,172,1.788,173,1.788,174,1.788,175,1.788,176,1.788,177,1.788,178,1.788,179,1.788,180,1.788,181,4.647,182,1.788,183,1.788,184,4.07,185,3.769,186,3.769,187,2.752,188,1.788,189,1.98,190,1.98,191,1.98,192,2.125,193,1.788,194,1.788,195,2.752,196,1.788,197,1.788,198,3.356,199,1.788,200,2.752,201,1.788,202,1.788,203,1.788,204,3.356,205,1.788,206,1.788,207,1.788,208,1.788,209,1.49,210,1.622,211,1.49,212,1.622,213,1.622,214,1.788,215,1.854,216,1.622,217,2.125,218,1.463,219,1.854,220,1.788,221,1.788,222,1.622,223,1.788,224,1.788,225,1.622,226,1.49,227,1.622,228,1.788,229,1.788,230,2.752,231,0.01,232,0.01,828,2.345,829,2.345,830,2.345,831,2.345,832,2.345,833,2.345,834,2.345,835,2.345,836,2.345,837,2.345,838,2.345,839,2.345,840,2.345,841,2.345,842,2.345,843,2.345]],["title/injectables/DataConnectorService.html",[233,0.919,844,2.513]],["body/injectables/DataConnectorService.html",[0,0.256,3,0.166,4,0.124,5,0.124,8,0.166,9,0.459,17,0.921,27,0.624,29,0.57,30,1.398,31,1.075,33,1.383,34,0.021,35,0.757,36,0.347,37,0.654,41,1.138,42,0.76,51,1.31,56,3.275,57,3.211,67,2.821,72,0.815,73,0.232,74,0.28,104,0.696,136,1.625,148,2.036,156,0.734,231,0.013,232,0.013,233,1.198,235,1.54,303,0.711,304,0.408,307,1.86,309,2.585,312,1.453,313,1.453,314,5.466,316,1.741,374,3.609,416,1.918,474,1.11,544,1.001,720,2.346,721,3.752,723,3.009,744,1.996,807,3.752,844,3.275,845,4.124,846,2.585,847,4.501,848,3.467,849,4.734,850,4.734,851,5.058,852,4.734,853,4.734,854,4.734,855,4.056,856,6.143,857,3.391,858,5.658,859,4.056,860,3.391,861,4.056,862,3.391,863,4.056,864,5.321,865,5.321,866,3.391,867,4.056,868,3.391,869,3.391,870,4.056,871,3.391,872,4.056,873,3.391,874,4.501,875,4.158,876,2.905,877,4.056,878,3.275,879,2.905,880,2.905,881,3.275,882,4.501,883,2.905,884,2.905,885,3.609,886,2.905,887,2.905,888,2.905,889,2.905,890,4.673,891,2.905,892,2.905,893,2.905,894,2.905,895,2.905,896,2.905,897,2.905,898,2.905,899,2.585,900,2.905]],["title/injectables/DataFlattnerService.html",[233,0.919,741,2.139]],["body/injectables/DataFlattnerService.html",[0,0.273,3,0.177,4,0.133,5,0.133,8,0.177,13,1.356,17,0.962,25,4.173,27,1.039,29,0.373,31,0.985,33,1.245,34,0.021,35,0.682,36,0.353,37,0.589,39,3.772,42,0.465,45,3.145,51,1.18,61,3.322,65,1.688,73,0.243,74,0.298,79,0.629,97,1.014,104,0.742,111,2.339,129,2.926,136,1.497,139,2.128,148,1.247,215,2.541,218,2.287,219,2.541,226,3.145,231,0.013,232,0.013,233,1.252,235,1.642,297,4.198,303,0.435,304,0.435,312,1.549,313,1.549,478,1.129,539,1.983,741,2.913,755,2.721,845,3.864,901,2.756,902,5.199,903,5.623,904,4.949,905,5.199,906,3.615,907,4.239,908,5.862,909,3.615,910,4.239,911,3.615,912,4.239,913,4.239,914,3.615,915,3.904,916,3.615,917,3.615,918,3.097,919,3.097,920,3.097,921,4.834,922,4.239,923,3.097,924,3.097,925,4.239,926,3.097,927,4.834,928,5.199,929,3.097,930,3.097,931,4.239,932,3.097,933,3.097,934,3.097,935,3.097,936,5.445,937,3.097,938,3.097,939,3.097,940,3.097,941,3.097,942,3.097,943,3.097,944,4.239,945,4.239,946,5.199,947,4.239,948,4.239,949,2.913,950,3.097,951,4.834,952,5.445,953,3.097,954,3.097,955,3.097]],["title/injectables/DataStoreService.html",[233,0.919,257,2.513]],["body/injectables/DataStoreService.html",[0,0.32,3,0.208,4,0.156,5,0.156,8,0.208,9,0.534,10,1.723,13,1.8,17,1.071,27,1.125,31,1.121,33,1.255,34,0.02,35,0.687,36,0.337,37,0.593,41,1.469,42,0.863,51,1.336,58,1.612,65,1.469,73,0.208,79,1.064,136,1.395,156,1.487,231,0.015,232,0.015,233,1.394,235,1.927,238,5.238,240,5.238,257,3.81,303,0.663,304,0.511,307,2.328,312,1.819,313,1.819,328,3.635,345,3.635,736,5.744,845,4.286,956,3.635,957,6.114,958,6.471,959,6.471,960,6.471,961,5.507,962,5.507,963,5.507,964,5.507,965,4.243,966,6.14,967,4.243,968,4.243,969,5.507,970,4.243,971,5.507,972,4.243,973,5.507,974,4.243,975,4.243,976,5.543,977,4.243,978,5.507,979,4.243,980,4.243,981,4.243,982,4.243,983,4.243]],["title/components/DateInputComponent.html",[403,0.498,629,1.073]],["body/components/DateInputComponent.html",[0,0.198,3,0.193,4,0.096,5,0.144,8,0.128,9,0.381,10,1.133,13,1.572,17,0.764,27,0.482,29,0.507,31,1.158,33,0.967,34,0.02,35,0.686,36,0.361,37,0.457,41,1.616,42,0.883,51,1.291,58,1.258,65,0.63,72,1.133,73,0.128,79,0.684,97,0.735,104,0.538,127,1.005,135,2.342,156,0.85,231,0.01,232,0.01,303,0.709,304,0.316,315,1.123,403,0.646,404,2.215,405,1.355,406,0.953,407,0.904,409,1.221,410,1.465,411,1.542,412,0.904,413,2.298,414,2.168,415,0.953,416,1.592,417,0.953,418,2.524,419,2.839,420,1.894,421,1.784,422,1.894,423,2.258,424,2.704,425,2.272,426,1.894,427,2.272,428,2.272,429,2.272,430,2.272,431,1.713,432,1.894,433,2.272,434,1.784,435,1.507,436,1.286,437,1.894,438,1.355,439,1.286,440,1.684,441,2.008,442,1.507,443,1.507,444,1.507,445,1.507,446,1.894,447,2.14,448,2.14,449,2.14,450,2.14,451,1.507,452,2.14,453,1.507,454,1.507,455,1.264,456,2.151,457,2.547,458,1.934,461,1.627,463,1.005,465,0.814,468,1.19,472,0.904,474,1.286,478,1.194,483,1.264,488,0.858,494,1.264,501,1.264,507,1.894,508,1.19,509,1.19,510,1.264,511,1.264,512,1.264,513,1.894,514,1.264,515,1.264,516,1.264,517,1.264,518,1.894,519,1.264,520,1.264,521,1.264,522,1.784,523,1.264,524,1.264,525,1.264,526,1.264,527,1.264,528,1.264,529,1.264,530,1.264,531,1.264,532,1.264,540,0.735,541,1.264,542,1.19,544,0.774,615,0.953,616,1.355,617,1.428,618,0.953,619,1.903,620,0.953,621,0.814,622,0.953,623,0.953,624,0.774,625,0.953,626,0.735,627,0.904,628,0.953,629,1.545,630,2.283,631,1.428,632,0.735,633,0.994,634,1.428,635,0.774,636,0.774,637,0.953,638,0.953,639,0.735,640,0.774,641,0.953,642,0.774,643,0.953,644,0.774,645,0.953,646,0.774,647,0.953,648,0.698,649,0.953,650,0.774,651,0.953,652,0.953,653,1.005,654,1.16,656,2.017,658,1.428,660,1.428,665,3.831,666,1.345,667,1.345,668,1.345,669,1.345,670,1.345,671,1.345,672,1.345,673,1.345,674,1.345,675,1.345,676,1.345,677,1.345,678,1.345,679,1.345,680,1.345,681,1.345,682,1.345,683,1.345,684,1.345,685,1.345,686,1.345,687,1.345,689,1.345,690,1.345,691,1.345,692,1.345,693,1.345,694,1.345,695,1.345,696,1.345,697,1.345,698,1.345,699,1.813,700,1.542,702,1.345,703,1.345,704,1.345,705,1.264,706,1.345,707,1.345,708,1.345,984,2.994,985,2.994,986,1.813,987,3.592,988,2.994,989,6.105,990,2.245,991,2.245,992,1.813,993,2.245,994,2.62,995,2.62,996,2.62]],["title/injectables/DialogService.html",[233,0.919,997,2.513]],["body/injectables/DialogService.html",[0,0.258,3,0.168,4,0.125,5,0.125,8,0.168,13,1.758,14,2.154,17,0.926,27,0.629,29,0.487,31,1.026,33,1.358,34,0.021,35,0.744,36,0.325,37,0.642,39,4.749,51,1.254,58,1.55,73,0.168,104,0.701,111,2.273,135,2.102,136,1.25,215,3.854,231,0.013,232,0.013,233,1.205,235,1.552,303,0.75,304,0.412,312,1.465,313,1.465,316,1.755,616,1.642,626,0.959,627,1.642,632,0.959,633,1.633,639,0.959,770,2.365,771,2.365,775,4.176,777,2.365,779,4.743,780,4.579,791,1.755,949,3.225,997,3.294,998,2.928,999,4.761,1000,4.761,1001,4.761,1002,4.761,1003,4.761,1004,2.928,1005,4.099,1006,3.418,1007,4.761,1008,6.619,1009,7.256,1010,3.418,1011,6.23,1012,4.761,1013,4.761,1014,3.418,1015,4.761,1016,7.017,1017,3.418,1018,4.761,1019,4.761,1020,3.418,1021,4.761,1022,3.418,1023,4.693,1024,4.761,1025,3.418,1026,4.693,1027,2.928,1028,2.365,1029,2.365,1030,4.079,1031,2.365,1032,2.365,1033,6.75,1034,3.418,1035,5.479,1036,6.451,1037,5.479,1038,3.418,1039,3.418,1040,3.418,1041,3.418,1042,4.761,1043,2.606,1044,3.418]],["title/components/ErrorDialogSimpleComponent.html",[403,0.498,632,1.019]],["body/components/ErrorDialogSimpleComponent.html",[0,0.268,3,0.24,4,0.13,5,0.179,8,0.174,9,0.474,10,0.853,13,1.662,14,2.19,17,0.95,27,0.9,29,0.422,31,0.979,33,0.729,34,0.02,35,0.628,36,0.295,37,0.345,41,1.175,42,0.629,51,0.69,58,0.853,72,0.853,73,0.174,104,0.729,128,1.612,136,0.81,148,1.686,231,0.013,232,0.013,303,0.589,304,0.428,403,0.767,404,1.048,405,1.686,406,1.291,407,1.224,409,1.519,411,1.83,412,1.224,413,2.397,414,2.267,415,1.291,417,1.291,431,1.971,474,1.162,508,2.22,509,2.22,544,2.104,615,1.291,616,1.686,617,1.777,618,1.291,619,2.19,620,1.291,621,1.104,622,1.291,623,1.291,624,1.048,625,1.291,626,0.996,627,1.224,628,1.291,629,1.048,630,1.291,631,1.777,632,1.689,633,1.882,634,1.777,635,1.048,636,1.048,637,1.291,638,1.291,639,0.996,640,1.048,641,1.291,642,1.048,643,1.291,644,1.048,645,1.291,646,1.048,647,1.291,648,0.946,649,1.291,650,1.048,651,1.291,652,1.291,653,1.362,654,1.927,658,1.777,660,1.777,709,2.51,731,2.456,775,4.814,776,3.58,778,2.706,779,3.867,780,4.166,783,2.456,784,3.726,789,2.706,790,2.706,791,1.823,792,2.706,793,3.726,794,2.706,797,4.187,803,3.726,804,2.456,805,3.382,806,2.706,807,2.256,808,2.456,809,2.706,810,2.706,811,2.706,812,4.261,813,2.706,814,4.591,815,2.706,816,3.382,817,2.706,818,2.706,819,2.706,820,2.706,821,3.867,823,2.706,824,2.706,825,3.726,826,3.726,827,2.706,1028,4.516,1029,4.516,1045,2.706,1046,4.187,1047,4.789,1048,4.187,1049,4.187,1050,3.042,1051,3.042,1052,3.042,1053,4.888,1054,3.55,1055,4.888,1056,3.55,1057,4.888,1058,6.022,1059,6.022,1060,4.888,1061,4.187,1062,3.55,1063,3.042,1064,4.187,1065,3.55]],["title/components/FileInputComponent.html",[403,0.498,635,1.073]],["body/components/FileInputComponent.html",[0,0.191,3,0.188,4,0.093,5,0.242,8,0.124,9,0.371,10,0.92,13,1.558,17,0.744,27,0.466,29,0.504,31,1.158,33,0.947,34,0.02,35,0.678,36,0.361,37,0.448,41,1.604,42,0.878,51,1.298,58,1.328,65,0.608,72,1.328,73,0.124,79,0.666,97,0.71,104,0.519,111,1.252,127,0.971,129,1.845,135,2.315,156,0.999,219,1.964,231,0.01,232,0.01,303,0.665,304,0.305,315,1.085,403,0.633,404,2.21,405,1.32,406,0.92,407,0.873,409,1.189,410,1.434,411,1.51,412,0.873,413,2.285,414,2.155,415,0.92,416,1.55,417,0.92,418,2.48,419,2.802,420,1.845,421,1.738,422,1.845,423,2.229,424,2.225,425,2.225,426,1.845,427,2.225,428,2.225,429,2.225,430,2.225,431,1.684,432,1.845,433,2.225,434,1.738,435,1.468,436,1.252,437,1.845,438,1.32,439,1.252,440,1.64,441,1.468,442,1.468,443,1.468,444,1.468,445,1.468,446,1.845,447,2.095,448,2.095,449,2.095,450,2.095,451,1.468,452,2.095,453,1.468,454,1.468,455,1.22,456,2.119,457,2.508,458,1.905,461,1.599,463,0.971,465,0.787,468,1.149,472,0.873,474,1.252,478,1.173,483,1.22,488,0.828,494,1.22,501,1.22,507,1.845,508,1.149,509,1.149,510,1.22,511,1.22,512,1.22,513,1.845,514,1.22,515,1.22,516,1.22,517,1.22,518,1.845,519,1.22,520,1.22,521,1.22,522,1.738,523,1.22,524,1.22,525,1.22,526,1.22,527,1.22,528,1.22,529,1.22,530,1.22,531,1.22,532,1.22,540,0.71,541,1.22,542,1.149,544,0.747,615,0.92,616,1.32,617,1.391,618,0.92,619,1.87,620,0.92,621,0.787,622,0.92,623,0.92,624,0.747,625,0.92,626,0.71,627,0.873,628,0.92,629,0.747,630,0.92,631,1.391,632,0.71,633,0.968,634,1.391,635,1.519,636,0.747,637,0.92,638,0.92,639,0.71,640,0.747,641,0.92,642,0.747,643,0.92,644,0.747,645,0.92,646,0.747,647,0.92,648,0.674,649,0.92,650,0.747,651,0.92,652,0.92,653,0.971,654,1.519,656,1.964,658,1.391,660,1.391,665,3.821,666,1.299,667,1.299,668,1.299,669,1.299,670,1.299,671,1.299,672,1.299,673,1.299,674,1.299,675,1.299,676,1.299,677,1.299,678,1.299,679,1.299,680,1.299,681,1.299,682,1.299,683,1.299,684,1.299,685,1.299,686,1.299,687,1.299,689,1.299,690,1.299,691,1.299,692,1.299,693,1.299,694,1.299,695,1.299,696,1.299,697,1.299,698,1.299,699,1.751,700,1.49,701,1.49,702,1.299,703,1.299,704,1.299,705,1.22,706,1.299,707,1.299,708,1.299,986,1.751,987,3.517,988,2.917,1066,3.921,1067,3.921,1068,5.143,1069,4.614,1070,3.826,1071,1.929,1072,2.53,1073,2.53,1074,2.168,1075,1.608,1076,2.53,1077,2.53,1078,3.826,1079,2.53,1080,2.53,1081,2.53,1082,2.53,1083,2.53,1084,2.53,1085,2.53,1086,2.53,1087,2.53,1088,3.826]],["title/components/FormbuilderComponent.html",[403,0.498,636,1.073]],["body/components/FormbuilderComponent.html",[0,0.351,3,0.287,4,0.171,5,0.214,8,0.228,17,1.136,27,1.175,31,0.906,34,0.02,35,0.657,51,0.906,58,1.405,72,1.119,73,0.228,231,0.016,232,0.016,303,0.561,304,0.561,403,0.876,404,1.375,405,2.016,406,1.693,407,1.606,409,1.817,411,2.091,412,1.606,413,2.468,414,2.324,415,1.693,417,2.125,431,2.192,456,2.647,474,1.525,544,1.375,615,1.693,616,2.016,617,2.125,618,1.693,619,2.435,620,1.693,621,1.448,622,1.693,623,1.693,624,1.375,625,1.693,626,1.306,627,1.606,628,1.693,629,1.375,630,1.693,631,2.125,632,1.306,633,1.479,634,2.125,635,1.375,636,1.977,637,2.322,638,1.693,639,1.306,640,1.375,641,1.693,642,1.375,643,1.693,644,1.375,645,1.693,646,1.375,647,1.693,648,1.241,649,1.693,650,1.375,651,1.693,652,1.693,653,1.787,1089,3.99,1090,6.387,1091,4.657,1092,4.657]],["title/modules/FormbuilderModule.html",[1093,3.112,1094,2.513]],["body/modules/FormbuilderModule.html",[0,0.215,3,0.14,4,0.105,5,0.105,17,0.554,25,2.462,31,0.442,34,0.021,51,0.554,73,0.14,129,1.375,136,0.651,231,0.011,232,0.011,303,0.913,304,0.343,404,1.793,416,1.156,458,1.442,540,0.8,542,1.295,621,2.128,624,2.021,626,1.703,629,2.021,632,1.703,633,1.381,635,2.021,636,2.087,639,1.703,640,2.021,642,2.021,644,2.021,646,2.021,648,1.824,650,2.021,705,1.375,711,2.894,731,1.973,741,2.462,742,2.443,744,1.679,770,1.973,771,1.973,791,1.464,984,2.174,985,2.174,993,2.443,1026,5.922,1027,2.443,1028,1.973,1029,1.973,1030,3.583,1031,1.973,1032,1.973,1066,2.174,1067,2.174,1094,5.242,1095,2.174,1096,2.894,1097,2.443,1098,2.852,1099,2.443,1100,2.443,1101,3.117,1102,3.583,1103,1.973,1104,2.443,1105,2.852,1106,4.182,1107,4.182,1108,4.182,1109,4.953,1110,2.852,1111,5.456,1112,4.953,1113,2.852,1114,4.182,1115,3.583,1116,2.174,1117,4.182,1118,2.852,1119,4.182,1120,2.852,1121,4.182,1122,2.852,1123,4.182,1124,2.852,1125,4.182,1126,2.852,1127,4.182,1128,2.852,1129,4.182,1130,2.852,1131,4.182,1132,2.852,1133,4.182,1134,2.852,1135,4.182,1136,2.852,1137,4.182,1138,2.852,1139,4.182,1140,2.852,1141,4.182,1142,2.852,1143,4.182,1144,2.852,1145,4.182,1146,2.852,1147,4.182,1148,2.852,1149,4.182,1150,2.852,1151,4.182,1152,4.182,1153,2.852,1154,4.182,1155,4.182,1156,2.852,1157,2.174,1158,2.174,1159,4.953,1160,2.852,1161,2.852,1162,2.852,1163,2.852,1164,4.182,1165,2.443,1166,2.443,1167,2.443,1168,2.852,1169,4.182,1170,2.443,1171,2.852,1172,2.852,1173,1.973,1174,2.852,1175,2.852,1176,4.182,1177,2.852,1178,4.182,1179,1.973,1180,4.182,1181,1.973,1182,4.182,1183,1.973,1184,4.182,1185,2.852,1186,4.182,1187,2.852,1188,2.852,1189,2.852,1190,2.852,1191,3.583,1192,2.852,1193,2.852,1194,2.852]],["title/injectables/FormbuilderService.html",[233,0.919,1195,2.77]],["body/injectables/FormbuilderService.html",[0,0.43,3,0.279,4,0.209,5,0.209,27,1.283,31,0.883,34,0.02,73,0.279,231,0.018,232,0.018,233,1.671,235,2.588,303,0.686,304,0.686,312,2.442,313,2.442,1195,5.032,1196,4.882,1197,5.698]],["title/interfaces/ICodeEntry.html",[74,0.3,1198,1.865]],["body/interfaces/ICodeEntry.html",[3,0.235,4,0.176,5,0.176,8,0.235,9,0.578,29,0.572,30,1.418,34,0.02,35,0.728,36,0.318,37,0.578,42,0.896,50,3.986,73,0.332,74,0.558,79,1.037,231,0.016,232,0.016,303,0.815,304,0.578,399,2.634,410,1.852,435,1.842,436,1.95,438,1.656,439,1.95,441,1.842,442,1.842,443,1.842,444,1.842,445,1.842,451,1.842,453,1.842,454,1.842,461,2.013,465,1.852,472,2.054,478,1.359,488,2.12,537,2.634,540,1.347,755,3.265,776,2.634,1198,3.325,1199,1.493,1200,3.052,1201,3.322,1202,4.48,1203,4.48,1204,3.322,1205,3.052,1206,3.322,1207,3.322,1208,3.322,1209,3.322,1210,2.827,1211,3.322,1212,3.268]],["title/interfaces/ICustomValidation.html",[74,0.3,465,1.129]],["body/interfaces/ICustomValidation.html",[0,0.438,3,0.226,4,0.169,5,0.169,8,0.226,9,0.563,13,1.761,29,0.565,34,0.021,35,0.652,36,0.344,37,0.7,42,0.593,65,1.107,73,0.226,74,0.38,79,1.106,218,2.352,231,0.015,232,0.015,391,5.496,436,1.508,438,1.589,465,1.804,537,3.184,633,1.608,777,3.187,1103,4.615,1199,1.432,1210,2.712,1213,3.512,1214,3.512,1215,5.715,1216,6.355,1217,6.355,1218,5.891,1219,4.015,1220,3.947,1221,3.947,1222,3.947,1223,3.947,1224,3.947,1225,3.947,1226,3.947,1227,3.947,1228,3.947,1229,5.444,1230,3.947,1231,3.947,1232,3.947,1233,3.947,1234,3.947,1235,3.947,1236,3.947]],["title/interfaces/IDialogConfig.html",[74,0.3,1219,2.513]],["body/interfaces/IDialogConfig.html",[0,0.435,3,0.223,4,0.167,5,0.167,8,0.223,9,0.559,13,1.758,29,0.555,34,0.021,35,0.648,36,0.349,37,0.71,42,0.586,65,1.094,73,0.223,74,0.375,79,1.1,215,3.693,218,2.334,231,0.015,232,0.015,391,5.483,436,1.49,438,1.57,465,1.415,537,3.159,633,1.599,777,3.148,1103,4.595,1199,1.415,1210,2.679,1213,3.469,1214,3.469,1215,3.899,1218,4.934,1219,3.148,1220,3.899,1221,5.69,1222,5.69,1223,5.69,1224,3.899,1225,3.899,1226,3.899,1227,3.899,1228,3.899,1229,5.414,1230,3.899,1231,3.899,1232,3.899,1233,3.899,1234,3.899,1235,3.899,1236,3.899,1237,6.319,1238,6.319]],["title/interfaces/IField.html",[74,0.3,410,1.129]],["body/interfaces/IField.html",[3,0.191,4,0.143,5,0.143,8,0.191,9,0.506,29,0.573,30,1.849,34,0.02,35,0.755,36,0.366,37,0.741,42,0.84,50,2.297,73,0.307,74,0.516,79,1.09,231,0.014,232,0.014,303,0.754,304,0.47,399,2.14,410,1.824,435,1.497,436,2.244,438,2.159,439,2.136,441,2.402,442,2.402,443,2.402,444,2.402,445,2.402,451,2.402,453,2.402,454,2.402,461,2.13,465,1.946,472,2.159,478,1.429,488,2.136,537,2.14,540,1.094,755,1.881,776,3.435,1198,3.215,1199,1.213,1200,2.48,1201,2.699,1202,4.817,1203,4.817,1204,2.699,1205,2.48,1206,4.332,1207,4.332,1208,2.699,1209,4.332,1210,3.454,1211,4.059,1212,2.858]],["title/interfaces/IFlatObject.html",[74,0.3,915,2.513]],["body/interfaces/IFlatObject.html",[0,0.3,3,0.195,4,0.146,5,0.146,13,1.423,25,3.486,27,0.732,29,0.447,31,0.616,34,0.021,36,0.331,42,0.512,45,3.353,61,3.106,65,1.701,73,0.259,74,0.328,79,0.692,97,1.115,104,0.816,111,2.375,129,3.042,136,1.54,139,2.34,148,1.371,215,2.709,218,2.4,219,2.709,231,0.014,232,0.014,233,1.335,303,0.479,304,0.479,312,1.704,313,1.704,478,1.204,539,2.18,741,2.34,755,3.042,845,3.106,901,3.03,902,3.405,903,5.073,905,3.405,907,3.405,908,5.404,910,3.405,912,3.405,913,3.405,915,4.097,918,3.405,919,3.405,920,3.405,921,5.073,922,4.52,923,3.405,924,3.405,925,4.52,926,3.405,927,5.073,928,5.404,929,3.405,930,3.405,931,4.52,932,3.405,933,3.405,934,3.405,935,3.405,936,5.624,937,3.405,938,3.405,939,3.405,940,3.405,941,3.405,942,3.405,943,3.405,944,4.52,945,4.52,946,5.404,947,4.52,948,4.52,949,3.106,950,3.405,951,5.073,952,5.624,953,3.405,954,3.405,955,3.405,1199,1.236,1239,3.975,1240,3.975]],["title/interfaces/IForm.html",[74,0.3,1241,2.77]],["body/interfaces/IForm.html",[3,0.263,4,0.197,5,0.197,8,0.263,9,0.618,17,1.238,29,0.549,31,0.83,33,1.099,34,0.02,35,0.818,36,0.333,37,0.52,51,1.041,73,0.263,74,0.442,231,0.017,232,0.017,303,0.767,410,1.979,440,3.012,463,2.055,468,3.306,540,1.502,1199,1.665,1212,2.938,1241,4.852,1242,4.589,1243,6.365,1244,6.365,1245,5.356]],["title/interfaces/IFormObj.html",[74,0.3,1212,1.993]],["body/interfaces/IFormObj.html",[3,0.236,4,0.177,5,0.177,8,0.236,9,0.58,29,0.569,30,1.424,34,0.02,35,0.798,36,0.293,42,0.769,50,2.839,73,0.333,74,0.559,79,1.039,231,0.016,232,0.016,303,0.817,304,0.581,399,3.72,410,2.108,435,1.85,436,1.955,438,1.663,439,1.955,441,1.85,442,1.85,443,1.85,444,1.85,445,1.85,451,1.85,453,1.85,454,1.85,461,2.017,465,1.857,472,2.06,478,1.363,488,2.124,537,2.645,540,1.353,755,2.326,776,2.645,1198,3.066,1199,1.499,1200,3.065,1201,3.337,1202,4.489,1203,4.489,1204,3.337,1205,3.065,1206,3.337,1207,3.337,1208,3.337,1209,3.337,1210,2.839,1211,3.337,1212,3.823]],["title/interfaces/IHTMLAttributes.html",[74,0.3,472,1.253]],["body/interfaces/IHTMLAttributes.html",[3,0.228,4,0.17,5,0.17,8,0.228,9,0.566,29,0.572,30,1.371,34,0.02,35,0.791,36,0.338,37,0.712,42,0.751,50,2.734,73,0.328,74,0.552,79,1.164,231,0.016,232,0.016,303,0.806,304,0.559,399,2.548,410,1.813,435,2.567,436,1.91,438,1.602,439,2.256,441,1.782,442,1.782,443,1.782,444,1.782,445,1.782,451,1.782,453,1.782,454,1.782,461,1.983,465,1.813,472,2.2,478,1.526,488,2.088,537,2.548,540,1.303,755,2.24,776,2.548,1198,2.995,1199,1.444,1200,2.952,1201,3.213,1202,4.413,1203,4.413,1204,4.629,1205,4.252,1206,3.213,1207,3.213,1208,3.213,1209,3.213,1210,2.734,1211,3.213,1212,3.2]],["title/interfaces/ISliderConfig.html",[74,0.3,1246,2.309]],["body/interfaces/ISliderConfig.html",[3,0.269,4,0.201,5,0.201,8,0.269,9,0.627,34,0.02,36,0.347,73,0.269,74,0.452,79,1.303,231,0.017,232,0.017,478,1.565,1199,1.705,1205,4.501,1246,4.103,1247,4.7,1248,7.082,1249,7.082,1250,7.082]],["title/interfaces/ITableHeader.html",[74,0.3,1251,2.309]],["body/interfaces/ITableHeader.html",[0,0.231,1,1.574,3,0.15,4,0.113,5,0.219,8,0.15,9,0.428,10,1.059,12,1.805,14,1.877,27,0.564,29,0.518,30,1.302,34,0.021,36,0.253,37,0.548,54,1.805,67,1.392,72,1.356,73,0.277,74,0.364,75,1.682,76,1.682,77,1.682,78,1.682,79,1.083,80,1.682,81,1.682,82,1.682,84,1.682,97,1.583,104,1.158,111,2.188,128,2.344,136,1.364,148,1.947,156,1.421,189,1.682,190,1.682,191,1.682,192,1.805,231,0.012,232,0.012,295,2.595,303,0.805,304,0.369,385,3.28,403,0.605,409,0.953,411,1.443,413,1.004,414,0.953,423,1.176,431,1.004,439,1.004,456,1.691,461,2.078,463,1.691,478,1.364,539,3.415,540,0.86,633,0.776,648,0.817,654,0.905,658,1.115,660,1.115,728,2.121,760,2.121,791,1.574,848,1.948,949,1.805,1005,3.05,1101,2.263,1173,2.121,1179,2.121,1181,2.121,1183,2.121,1199,0.953,1251,3.28,1252,1.948,1253,4.302,1254,4.302,1255,4.302,1256,2.337,1257,2.337,1258,3.36,1259,3.36,1260,3.36,1261,2.337,1262,3.36,1263,3.36,1264,3.36,1265,2.337,1266,2.337,1267,2.121,1268,3.05,1269,2.801,1270,2.337,1271,2.337,1272,2.337,1273,2.337,1274,2.337,1275,2.337,1276,3.935,1277,2.337,1278,2.337,1279,3.05,1280,2.337,1281,2.337,1282,2.337,1283,2.337,1284,2.337,1285,2.337,1286,2.337,1287,2.337,1288,2.337,1289,2.337,1290,2.337,1291,3.36,1292,2.337,1293,2.337,1294,2.337,1295,2.337,1296,2.337,1297,2.337,1298,2.337,1299,2.337,1300,2.337,1301,2.337,1302,2.337,1303,2.337,1304,2.337,1305,2.337,1306,2.337,1307,3.36,1308,2.337,1309,2.337,1310,4.558,1311,2.337,1312,3.36,1313,2.337,1314,2.337,1315,2.337,1316,3.05,1317,2.337,1318,3.36,1319,2.337,1320,3.36,1321,2.337,1322,2.337,1323,2.337,1324,2.337,1325,2.337,1326,2.337,1327,2.337,1328,2.337,1329,3.36,1330,3.36,1331,2.337,1332,2.337,1333,3.571,1334,2.337,1335,2.337,1336,2.337,1337,2.337,1338,3.36,1339,3.36,1340,2.337,1341,3.36,1342,2.337,1343,2.337,1344,3.935,1345,2.337,1346,2.337,1347,2.337,1348,3.36,1349,2.337,1350,2.337,1351,2.337,1352,2.337,1353,2.337,1354,2.337,1355,2.337,1356,2.337,1357,2.337,1358,2.337,1359,2.337,1360,2.337,1361,2.337,1362,2.337,1363,2.337,1364,2.337,1365,2.337,1366,2.337,1367,2.337,1368,2.337,1369,2.337,1370,2.337,1371,2.337,1372,2.337,1373,2.337,1374,2.337,1375,2.337,1376,2.337,1377,2.337,1378,3.36,1379,2.337,1380,3.935,1381,3.36,1382,2.337,1383,3.935,1384,3.36,1385,2.337,1386,2.337,1387,2.337,1388,2.337,1389,2.337]],["title/interfaces/ITableViewOptions.html",[74,0.3,1269,2.309]],["body/interfaces/ITableViewOptions.html",[0,0.227,1,1.547,3,0.148,4,0.111,5,0.218,8,0.148,9,0.423,10,1.047,12,1.774,14,1.859,27,0.555,29,0.482,30,1.286,34,0.021,36,0.304,37,0.423,54,1.774,67,1.369,72,1.346,73,0.275,74,0.359,75,1.653,76,1.653,77,1.653,78,1.653,79,1.253,80,1.653,81,1.653,82,1.653,84,1.653,97,1.571,104,1.149,111,2.179,128,2.322,136,1.355,148,1.931,156,1.414,189,1.653,190,1.653,191,1.653,192,1.774,231,0.012,232,0.012,295,2.563,303,0.802,304,0.363,385,3.249,403,0.597,409,0.937,411,1.425,413,0.987,414,0.937,423,1.156,431,0.987,439,0.987,456,1.671,461,2.069,463,1.671,478,1.166,539,3.395,540,0.845,633,0.763,648,0.803,654,0.89,658,1.096,660,1.096,728,2.085,760,2.085,791,1.547,848,1.915,949,1.774,1005,3.012,1101,2.236,1173,2.085,1179,2.085,1181,2.085,1183,2.085,1199,0.937,1251,2.767,1252,1.915,1253,2.298,1254,2.298,1255,2.298,1256,2.298,1257,2.298,1258,3.319,1259,3.319,1260,3.319,1261,2.298,1262,3.319,1263,3.319,1264,3.319,1265,2.298,1266,2.298,1267,2.085,1268,3.012,1269,3.249,1270,4.269,1271,4.269,1272,4.269,1273,4.269,1274,4.269,1275,4.269,1276,3.897,1277,2.298,1278,2.298,1279,3.012,1280,2.298,1281,2.298,1282,2.298,1283,2.298,1284,2.298,1285,2.298,1286,2.298,1287,2.298,1288,2.298,1289,2.298,1290,2.298,1291,3.319,1292,2.298,1293,2.298,1294,2.298,1295,2.298,1296,2.298,1297,2.298,1298,2.298,1299,2.298,1300,2.298,1301,2.298,1302,2.298,1303,2.298,1304,2.298,1305,2.298,1306,2.298,1307,3.319,1308,2.298,1309,2.298,1310,4.528,1311,2.298,1312,3.319,1313,2.298,1314,2.298,1315,2.298,1316,3.012,1317,2.298,1318,3.319,1319,2.298,1320,3.319,1321,2.298,1322,2.298,1323,2.298,1324,2.298,1325,2.298,1326,2.298,1327,2.298,1328,2.298,1329,3.319,1330,3.319,1331,2.298,1332,2.298,1333,3.537,1334,2.298,1335,2.298,1336,2.298,1337,2.298,1338,3.319,1339,3.319,1340,2.298,1341,3.319,1342,2.298,1343,2.298,1344,3.897,1345,2.298,1346,2.298,1347,2.298,1348,3.319,1349,2.298,1350,2.298,1351,2.298,1352,2.298,1353,2.298,1354,2.298,1355,2.298,1356,2.298,1357,2.298,1358,2.298,1359,2.298,1360,2.298,1361,2.298,1362,2.298,1363,2.298,1364,2.298,1365,2.298,1366,2.298,1367,2.298,1368,2.298,1369,2.298,1370,2.298,1371,2.298,1372,2.298,1373,2.298,1374,2.298,1375,2.298,1376,2.298,1377,2.298,1378,3.319,1379,2.298,1380,3.897,1381,3.319,1382,2.298,1383,3.897,1384,3.319,1385,2.298,1386,2.298,1387,2.298,1388,2.298,1389,2.298]],["title/interfaces/IValidator.html",[74,0.3,488,1.189]],["body/interfaces/IValidator.html",[3,0.252,4,0.189,5,0.189,8,0.252,9,0.603,29,0.504,34,0.02,36,0.358,37,0.734,73,0.252,74,0.424,79,1.255,231,0.017,232,0.017,315,2.972,447,3.149,448,3.149,449,3.149,450,3.149,452,3.149,478,1.714,488,2.034,522,3.149,1199,1.599,1390,4.408]],["title/components/InfoDialogSimpleComponent.html",[403,0.498,639,1.019]],["body/components/InfoDialogSimpleComponent.html",[0,0.272,3,0.353,4,0.132,5,0.181,8,0.176,9,0.479,10,0.865,13,1.667,14,2.202,17,0.959,27,0.908,29,0.425,31,0.984,33,0.739,34,0.02,35,0.633,36,0.297,37,0.349,41,1.186,42,0.635,51,0.7,58,0.865,72,0.865,73,0.176,104,0.739,128,1.635,136,0.821,148,1.942,231,0.013,232,0.013,303,0.594,304,0.433,403,0.772,404,1.063,405,1.702,406,1.309,407,1.241,409,1.534,411,1.843,412,1.241,413,2.401,414,2.271,415,1.309,417,1.309,431,1.983,474,1.178,544,1.063,615,1.309,616,1.702,617,1.794,618,1.309,619,2.202,620,1.309,621,1.119,622,1.309,623,1.309,624,1.063,625,1.309,626,1.01,627,1.241,628,1.309,629,1.063,630,1.309,631,1.794,632,1.01,633,1.884,634,1.794,635,1.063,636,1.063,637,1.309,638,1.309,639,1.699,640,1.063,641,1.309,642,1.063,643,1.309,644,1.063,645,1.309,646,1.063,647,1.309,648,0.959,649,1.309,650,1.063,651,1.309,652,1.309,653,1.381,654,1.935,658,1.794,660,1.794,709,2.533,731,2.49,776,3.595,778,2.744,779,3.895,780,4.191,783,2.49,784,3.761,789,2.744,790,2.744,791,1.848,792,2.744,793,3.761,794,2.744,803,3.761,804,2.49,805,3.414,806,2.744,807,2.287,808,2.49,809,2.744,810,2.744,811,2.744,812,4.618,813,2.744,814,3.761,815,2.744,816,3.414,817,2.744,818,2.744,819,2.744,820,2.744,821,3.895,823,2.744,824,2.744,825,3.761,826,3.761,827,3.761,1023,5.437,1031,4.535,1032,4.535,1045,2.744,1046,4.227,1047,4.823,1048,4.227,1049,4.227,1050,3.084,1051,3.084,1052,3.084,1061,4.227,1063,3.084,1064,4.227,1391,4.934,1392,3.599,1393,4.934,1394,3.599,1395,4.934,1396,3.599,1397,3.599,1398,3.599,1399,4.934]],["title/interfaces/MenuNode.html",[74,0.3,402,2.309]],["body/interfaces/MenuNode.html",[0,0.417,3,0.271,4,0.203,5,0.203,8,0.271,9,0.63,29,0.546,34,0.02,35,0.814,36,0.318,37,0.63,73,0.318,74,0.456,231,0.017,232,0.017,397,4.123,398,4.216,399,3.97,402,4.6,1199,1.719]],["title/interfaces/Options.html",[30,1.073,74,0.3]],["body/interfaces/Options.html",[0,0.289,1,1.299,3,0.124,4,0.169,5,0.093,6,1.49,7,1.49,8,0.226,9,0.371,10,1.109,11,1.929,12,3.028,13,1.697,14,2.521,15,4.484,16,1.929,19,1.929,20,1.929,21,1.929,22,1.929,23,1.929,24,1.929,25,4.109,28,1.929,29,0.538,30,1.715,34,0.021,36,0.337,38,2.917,45,1.608,47,1.929,49,1.929,53,1.751,54,1.49,56,3.558,57,2.252,58,1.109,60,1.929,61,1.49,62,3.921,65,1.236,67,2.74,68,1.929,70,1.751,71,1.929,72,1.109,73,0.252,74,0.209,75,3.03,76,3.03,77,3.03,78,3.03,79,1.246,80,3.03,81,3.03,82,3.03,83,3.821,84,3.03,85,3.821,86,3.821,87,3.821,88,1.608,89,1.929,90,1.929,91,1.929,92,1.929,93,1.929,94,1.929,95,1.929,96,1.929,97,1.692,98,1.929,99,1.929,100,1.929,101,1.929,102,1.929,103,1.929,104,0.785,105,1.929,106,1.929,107,1.929,108,1.929,109,1.929,110,1.929,111,1.684,112,2.432,113,1.751,114,1.751,115,1.751,116,1.751,117,1.751,118,1.751,119,1.751,120,1.751,121,1.751,122,1.751,123,1.751,124,1.751,125,1.751,126,1.751,127,1.468,128,1.149,129,2.225,130,1.929,131,2.917,132,1.608,133,2.917,134,1.929,135,2.119,136,1.556,137,1.929,138,1.929,139,3.743,140,1.929,141,4.848,142,1.929,143,1.929,144,1.929,145,1.929,146,1.929,147,2.917,148,2.081,149,1.929,150,1.929,151,1.929,152,1.929,153,1.929,154,1.929,155,1.929,156,0.999,157,1.929,158,1.929,159,1.929,160,2.917,161,2.917,162,2.917,163,1.929,164,1.929,165,1.929,166,1.751,167,1.929,168,1.929,169,1.929,170,1.929,171,1.929,172,1.929,173,1.929,174,1.929,175,1.929,176,1.929,177,1.929,178,1.929,179,1.929,180,1.929,181,4.718,182,1.929,183,1.929,184,4.211,185,3.921,186,3.921,187,2.917,188,1.929,189,2.099,190,2.099,191,2.099,192,2.252,193,1.929,194,1.929,195,2.917,196,1.929,197,1.929,198,3.517,199,1.929,200,2.917,201,1.929,202,1.929,203,1.929,204,3.517,205,1.929,206,1.929,207,1.929,208,1.929,209,1.608,210,1.751,211,1.608,212,1.751,213,1.751,214,1.929,215,1.964,216,1.751,217,2.252,218,1.55,219,1.964,220,1.929,221,1.929,222,1.751,223,1.929,224,1.929,225,1.751,226,1.608,227,1.751,228,1.929,229,1.929,230,2.917,231,0.01,232,0.01,1199,0.787]],["title/components/RadiobuttonComponent.html",[403,0.498,640,1.073]],["body/components/RadiobuttonComponent.html",[0,0.197,3,0.192,4,0.096,5,0.144,8,0.128,9,0.38,10,0.941,13,1.57,17,0.761,27,0.48,29,0.507,30,1.387,31,1.159,33,0.964,34,0.02,35,0.685,36,0.362,37,0.456,41,1.615,42,0.883,51,1.29,58,1.255,65,0.627,72,1.129,73,0.128,79,0.681,97,0.732,104,0.535,127,1.001,135,2.338,156,0.847,231,0.01,232,0.01,303,0.708,304,0.314,315,1.118,403,0.645,404,2.215,405,1.35,406,0.948,407,0.9,409,1.217,410,1.461,411,1.538,412,0.9,413,2.296,414,2.166,415,0.948,416,1.586,417,0.948,418,2.518,419,2.834,420,1.888,421,1.778,422,1.888,423,2.255,424,2.699,425,2.266,426,1.888,427,2.266,428,2.266,429,2.266,430,2.266,431,1.71,432,1.888,433,2.266,434,1.778,435,1.502,436,1.281,437,1.888,438,1.35,439,1.281,440,1.678,441,2.003,442,1.502,443,1.502,444,1.502,445,1.502,446,1.888,447,2.134,448,2.134,449,2.134,450,2.134,451,1.502,452,2.134,453,1.502,454,1.502,455,1.258,456,2.147,457,2.541,458,1.93,461,1.623,463,1.001,465,0.811,468,1.184,472,0.9,474,1.281,478,1.191,483,1.258,488,0.854,494,1.258,501,1.258,507,1.888,508,1.184,509,1.184,510,1.258,511,1.258,512,1.258,513,1.888,514,1.258,515,1.258,516,1.258,517,1.258,518,1.888,519,1.258,520,1.258,521,1.258,522,1.778,523,1.258,524,1.258,525,1.258,526,1.258,527,1.258,528,1.258,529,1.258,530,1.258,531,1.258,532,1.258,535,1.804,540,0.732,541,1.258,542,1.184,544,0.77,615,0.948,616,1.35,617,1.423,618,0.948,619,1.899,620,0.948,621,0.811,622,0.948,623,0.948,624,0.77,625,0.948,626,0.732,627,0.9,628,0.948,629,0.77,630,0.948,631,1.423,632,0.732,633,0.991,634,1.423,635,0.77,636,0.77,637,0.948,638,0.948,639,0.732,640,1.542,641,0.948,642,0.77,643,0.948,644,0.77,645,0.948,646,0.77,647,0.948,648,0.695,649,0.948,650,0.77,651,0.948,652,0.948,653,1.001,654,1.387,656,2.01,658,1.423,660,1.423,665,3.829,666,1.339,667,1.339,668,1.339,669,1.339,670,1.339,671,1.339,672,1.339,673,1.339,674,1.339,675,1.339,676,1.339,677,1.339,678,1.339,679,1.339,680,1.339,681,1.339,682,1.339,683,1.339,684,1.339,685,1.339,686,1.339,687,1.339,688,1.988,689,1.339,690,1.339,691,1.339,692,1.339,693,1.339,694,1.339,695,1.339,696,1.339,697,1.339,698,1.339,700,1.535,701,1.535,702,1.339,703,1.339,704,1.339,705,1.258,706,1.339,707,1.339,708,1.339,709,2.01,992,1.804,1075,1.658,1198,2.413,1400,2.234,1401,3.915,1402,4.699,1403,3.915,1404,3.915,1405,1.804,1406,2.608,1407,3.354,1408,2.608]],["title/components/SelectComponent.html",[403,0.498,642,1.073]],["body/components/SelectComponent.html",[0,0.196,3,0.192,4,0.095,5,0.143,8,0.128,9,0.379,10,0.939,13,1.569,17,0.759,27,0.479,29,0.507,30,1.385,31,1.159,33,0.963,34,0.02,35,0.685,36,0.362,37,0.455,41,1.614,42,0.882,51,1.289,58,1.253,65,0.625,72,1.127,73,0.128,79,0.68,97,0.729,104,0.534,127,0.998,135,2.336,156,0.845,231,0.01,232,0.01,303,0.707,304,0.313,315,1.114,403,0.643,404,2.214,405,1.347,406,0.945,407,0.897,409,1.214,410,1.458,411,1.535,412,0.897,413,2.295,414,2.165,415,0.945,416,1.583,417,0.945,418,2.514,419,2.831,420,1.883,421,1.774,422,1.883,423,2.252,424,2.695,425,2.262,426,1.883,427,2.262,428,2.262,429,2.262,430,2.262,431,1.707,432,1.883,433,2.262,434,1.774,435,1.498,436,1.278,437,1.883,438,1.347,439,1.278,440,1.674,441,2,442,1.498,443,1.498,444,1.498,445,1.498,446,1.883,447,2.13,448,2.13,449,2.13,450,2.13,451,1.498,452,2.13,453,1.498,454,1.498,455,1.254,456,2.144,457,2.538,458,1.928,461,1.621,463,0.998,465,0.808,468,1.181,472,0.897,474,1.278,478,1.19,483,1.254,488,0.851,494,1.254,501,1.254,507,1.883,508,1.181,509,1.181,510,1.254,511,1.254,512,1.254,513,1.883,514,1.254,515,1.254,516,1.254,517,1.254,518,1.883,519,1.254,520,1.254,521,1.254,522,1.774,523,1.254,524,1.254,525,1.254,526,1.254,527,1.254,528,1.254,529,1.254,530,1.254,531,1.254,532,1.254,535,1.799,540,0.729,541,1.254,542,1.181,544,0.768,615,0.945,616,1.347,617,1.42,618,0.945,619,1.896,620,0.945,621,0.808,622,0.945,623,0.945,624,0.768,625,0.945,626,0.729,627,0.897,628,0.945,629,0.768,630,0.945,631,1.42,632,0.729,633,0.988,634,1.42,635,0.768,636,0.768,637,0.945,638,0.945,639,0.729,640,0.768,641,0.945,642,1.54,643,0.945,644,0.768,645,0.945,646,0.768,647,0.945,648,0.693,649,0.945,650,0.768,651,0.945,652,0.945,653,0.998,654,1.385,656,2.005,658,1.42,660,1.42,665,3.829,666,1.335,667,1.335,668,1.335,669,1.335,670,1.335,671,1.335,672,1.335,673,1.335,674,1.335,675,1.335,676,1.335,677,1.335,678,1.335,679,1.335,680,1.335,681,1.335,682,1.335,683,1.335,684,1.335,685,1.335,686,1.335,687,1.335,689,1.335,690,1.335,691,1.335,692,1.335,693,1.335,694,1.335,695,1.335,696,1.335,697,1.335,698,1.335,702,1.335,703,1.335,704,1.335,705,1.254,706,1.335,707,1.335,708,1.335,709,2.005,991,2.228,1071,1.982,1075,1.652,1198,2.408,1333,2.702,1405,1.799,1407,3.346,1409,2.228,1410,4.69,1411,3.905,1412,3.905,1413,2.228,1414,2.6,1415,3.346,1416,3.905,1417,3.905,1418,3.905]],["title/components/SlideToggleComponent.html",[403,0.498,646,1.073]],["body/components/SlideToggleComponent.html",[0,0.197,3,0.192,4,0.096,5,0.144,8,0.128,9,0.38,10,0.94,13,1.57,17,0.761,27,0.48,29,0.518,31,1.16,33,0.964,34,0.02,35,0.685,36,0.362,37,0.456,41,1.615,42,0.883,51,1.289,58,1.255,65,0.626,72,1.255,73,0.128,79,0.681,97,0.731,104,0.535,127,2.003,135,2.338,156,0.847,231,0.01,232,0.01,303,0.708,304,0.314,315,1.117,403,0.644,404,2.214,405,1.349,406,0.948,407,0.899,409,1.216,410,1.46,411,1.538,412,0.899,413,2.296,414,2.166,415,0.948,416,1.585,417,0.948,418,2.517,419,2.833,420,1.887,421,1.777,422,1.887,423,2.254,424,2.698,425,2.265,426,1.887,427,2.265,428,2.265,429,2.265,430,2.265,431,1.709,432,1.887,433,2.265,434,1.777,435,1.501,436,1.281,437,1.887,438,1.349,439,1.281,440,1.677,441,2.003,442,1.501,443,1.501,444,1.501,445,1.501,446,1.887,447,2.133,448,2.133,449,2.133,450,2.133,451,1.501,452,2.133,453,1.501,454,1.501,455,1.257,456,2.146,457,2.541,458,1.929,461,1.623,463,1,465,0.81,468,1.184,472,0.899,474,1.281,478,1.191,483,1.257,488,0.853,494,1.257,501,1.257,507,1.887,508,1.184,509,1.184,510,1.257,511,1.257,512,1.257,513,1.887,514,1.257,515,1.257,516,1.257,517,1.257,518,1.887,519,1.257,520,1.257,521,1.257,522,1.777,523,1.257,524,1.257,525,1.257,526,1.257,527,1.257,528,1.257,529,1.257,530,1.257,531,1.257,532,1.257,540,0.731,541,1.257,542,1.184,544,0.769,615,0.948,616,1.349,617,1.422,618,0.948,619,1.898,620,0.948,621,0.81,622,0.948,623,0.948,624,0.769,625,0.948,626,0.731,627,0.899,628,0.948,629,0.769,630,0.948,631,1.422,632,0.731,633,0.99,634,1.422,635,0.769,636,0.769,637,0.948,638,0.948,639,0.731,640,0.769,641,0.948,642,0.769,643,0.948,644,0.769,645,0.948,646,1.541,647,0.948,648,0.694,649,0.948,650,0.769,651,0.948,652,0.948,653,1,654,1.541,656,2.009,658,1.422,660,1.422,665,3.829,666,1.338,667,1.338,668,1.338,669,1.338,670,1.338,671,1.338,672,1.338,673,1.338,674,1.338,675,1.338,676,1.338,677,1.338,678,1.338,679,1.338,680,1.338,681,1.338,682,1.338,683,1.338,684,1.338,685,1.338,686,1.338,687,1.338,689,1.338,690,1.338,691,1.338,692,1.338,693,1.338,694,1.338,695,1.338,696,1.338,697,1.338,698,1.338,701,1.534,702,1.338,703,1.338,704,1.338,705,1.257,706,1.338,707,1.338,708,1.338,992,1.803,1075,1.656,1246,2.985,1405,1.803,1413,2.233,1419,2.233,1420,3.912,1421,4.697,1422,3.912,1423,4.697,1424,3.912,1425,2.606,1426,2.606,1427,2.233,1428,3.912]],["title/components/SliderComponent.html",[403,0.498,644,1.073]],["body/components/SliderComponent.html",[0,0.199,3,0.193,4,0.097,5,0.145,8,0.129,9,0.383,10,0.947,13,1.573,17,0.766,27,0.485,29,0.508,31,1.16,33,0.97,34,0.02,35,0.687,36,0.362,37,0.459,41,1.618,42,0.884,51,1.292,58,1.261,65,0.633,72,1.136,73,0.129,79,0.686,97,0.738,104,0.54,127,2.013,135,2.346,156,0.853,231,0.01,232,0.01,303,0.71,304,0.317,315,1.128,403,0.648,404,2.216,405,1.359,406,0.957,407,0.908,409,1.225,410,1.469,411,1.547,412,0.908,413,2.3,414,2.169,415,0.957,416,1.597,417,0.957,418,2.53,419,2.844,420,1.901,421,1.79,422,1.901,423,2.262,424,2.709,425,2.279,426,1.901,427,2.279,428,2.279,429,2.279,430,2.279,431,1.717,432,1.901,433,2.279,434,1.79,435,1.512,436,1.29,437,1.901,438,1.359,439,1.29,440,1.69,441,2.013,442,1.512,443,1.512,444,1.512,445,1.512,446,1.901,447,2.146,448,2.146,449,2.146,450,2.146,451,1.512,452,2.146,453,1.512,454,1.512,455,1.269,456,2.155,457,2.552,458,1.938,461,1.631,463,1.01,465,0.818,468,1.195,472,0.908,474,1.29,478,1.197,483,1.269,488,0.862,494,1.269,501,1.269,507,1.901,508,1.195,509,1.195,510,1.269,511,1.269,512,1.269,513,1.901,514,1.269,515,1.269,516,1.269,517,1.269,518,1.901,519,1.269,520,1.269,521,1.269,522,1.79,523,1.269,524,1.269,525,1.269,526,1.269,527,1.269,528,1.269,529,1.269,530,1.269,531,1.269,532,1.269,540,0.738,541,1.269,542,1.195,544,0.777,615,0.957,616,1.359,617,1.433,618,0.957,619,1.908,620,0.957,621,0.818,622,0.957,623,0.957,624,0.777,625,0.957,626,0.738,627,0.908,628,0.957,629,0.777,630,0.957,631,1.433,632,0.738,633,0.998,634,1.433,635,0.777,636,0.777,637,0.957,638,0.957,639,0.738,640,0.777,641,0.957,642,0.777,643,0.957,644,1.549,645,0.957,646,0.777,647,0.957,648,0.701,649,0.957,650,0.777,651,0.957,652,0.957,653,1.01,654,1.395,656,2.024,658,1.433,660,1.433,665,3.832,666,1.352,667,1.352,668,1.352,669,1.352,670,1.352,671,1.352,672,1.352,673,1.352,674,1.352,675,1.352,676,1.352,677,1.352,678,1.352,679,1.352,680,1.352,681,1.352,682,1.352,683,1.352,684,1.352,685,1.352,686,1.352,687,1.352,688,2.007,689,1.352,690,1.352,691,1.352,692,1.352,693,1.352,694,1.352,695,1.352,696,1.352,697,1.352,698,1.352,700,1.55,701,1.55,702,1.352,703,1.352,704,1.352,705,1.269,706,1.352,707,1.352,708,1.352,992,1.821,1075,1.673,1246,3.003,1405,1.821,1427,2.255,1429,2.255,1430,3.942,1431,4.725,1432,3.942,1433,3.942]],["title/components/TableComponent.html",[403,0.498,648,0.968]],["body/components/TableComponent.html",[0,0.158,1,1.073,3,0.162,4,0.077,5,0.214,8,0.103,9,0.32,10,0.793,12,1.231,14,1.955,17,0.642,27,0.608,29,0.488,30,0.975,31,1.117,33,1.233,34,0.021,35,0.705,36,0.338,37,0.583,41,1.353,42,0.724,51,1.289,54,2.408,58,1.508,67,0.949,72,1.216,73,0.228,74,0.272,75,1.147,76,1.147,77,1.147,78,1.147,79,1.016,80,1.147,81,1.147,82,1.147,84,1.147,97,1.303,104,0.954,111,1.966,128,1.858,136,1.154,148,1.745,156,1.331,181,3.5,189,1.147,190,1.147,191,1.147,192,1.231,231,0.009,232,0.009,295,1.943,303,0.723,304,0.252,385,2.6,403,0.561,404,0.617,405,1.138,406,0.76,407,0.721,409,1.026,411,1.339,412,0.721,413,2.21,414,2.08,415,0.76,417,0.76,423,1.569,431,1.521,434,1.499,439,0.684,456,1.266,461,2.012,463,1.569,474,0.684,478,1.227,539,2.949,540,0.586,544,0.617,615,0.76,616,1.138,617,1.2,618,0.76,619,1.689,620,0.76,621,0.65,622,0.76,623,0.76,624,0.617,625,0.76,626,0.586,627,0.721,628,0.76,629,0.617,630,0.76,631,1.2,632,0.586,633,1.176,634,1.2,635,0.617,636,0.617,637,0.76,638,0.76,639,0.586,640,0.617,641,0.76,642,0.617,643,0.76,644,0.617,645,0.76,646,0.617,647,0.76,648,1.238,649,0.76,650,0.617,651,0.76,652,0.76,653,0.802,654,2.132,658,1.2,660,1.2,709,1.695,728,1.446,760,1.446,783,2.284,791,1.073,804,1.446,805,2.284,816,1.446,848,2.6,949,1.231,1004,1.791,1005,3.214,1043,1.594,1101,2.385,1173,1.446,1179,1.446,1181,1.446,1183,1.446,1251,2.6,1252,1.329,1253,1.594,1254,1.594,1255,1.594,1256,1.594,1257,1.594,1258,3.118,1259,3.118,1260,3.542,1261,1.594,1262,3.118,1263,3.118,1264,3.118,1265,1.594,1266,1.594,1267,1.446,1268,2.284,1269,2.6,1270,1.594,1271,1.594,1272,1.594,1273,1.594,1274,1.594,1275,1.594,1276,3.118,1277,1.594,1278,1.594,1279,3.214,1280,1.594,1281,1.594,1282,1.594,1283,1.594,1284,1.594,1285,1.594,1286,1.594,1287,1.594,1288,1.594,1289,2.516,1290,3.118,1291,3.856,1292,2.516,1293,3.118,1294,3.118,1295,3.118,1296,3.118,1297,3.118,1298,3.118,1299,3.118,1300,2.516,1301,3.118,1302,2.516,1303,3.118,1304,3.856,1305,3.118,1306,2.516,1307,2.516,1308,1.594,1309,1.594,1310,3.856,1311,2.516,1312,3.542,1313,2.516,1314,2.516,1315,2.516,1316,3.214,1317,3.542,1318,2.516,1319,1.594,1320,2.516,1321,1.594,1322,2.516,1323,2.516,1324,2.516,1325,3.542,1326,1.594,1327,1.594,1328,1.594,1329,2.516,1330,2.516,1331,1.594,1332,1.594,1333,2.83,1334,1.594,1335,1.594,1336,1.594,1337,1.594,1338,2.516,1339,2.516,1340,1.594,1341,2.516,1342,1.594,1343,1.594,1344,3.856,1345,1.594,1346,3.542,1347,1.594,1348,2.516,1349,1.594,1350,1.594,1351,2.516,1352,1.594,1353,1.594,1354,1.594,1355,1.594,1356,1.594,1357,1.594,1358,2.516,1359,1.594,1360,2.516,1361,1.594,1362,2.516,1363,1.594,1364,3.542,1365,1.594,1366,1.594,1367,1.594,1368,1.594,1369,2.516,1370,1.594,1371,1.594,1372,1.594,1373,1.594,1374,1.594,1375,2.516,1376,1.594,1377,1.594,1378,2.516,1379,1.594,1380,3.118,1381,2.516,1382,1.594,1383,3.118,1384,2.516,1385,1.594,1386,1.594,1387,1.594,1388,1.594,1389,1.594,1434,3.301,1435,4.091,1436,3.301,1437,3.301,1438,3.301,1439,3.301,1440,3.301,1441,3.301,1442,3.301,1443,4.091,1444,3.301,1445,3.301,1446,2.09,1447,2.09,1448,2.09,1449,2.09,1450,2.09,1451,2.09,1452,2.09,1453,2.09,1454,1.791,1455,2.09,1456,2.09,1457,2.09,1458,3.301,1459,2.09,1460,2.09,1461,2.09,1462,2.09,1463,2.09,1464,2.09,1465,2.09,1466,2.09,1467,2.09,1468,2.09,1469,2.09,1470,2.09,1471,2.09,1472,2.09,1473,2.09,1474,2.09,1475,2.09,1476,2.09,1477,2.09,1478,2.09,1479,3.301,1480,4.646,1481,3.301,1482,3.301,1483,3.301,1484,3.301,1485,3.301,1486,3.301,1487,1.594,1488,2.09,1489,2.09,1490,2.09,1491,2.09]],["title/components/TextInputComponent.html",[403,0.498,650,1.073]],["body/components/TextInputComponent.html",[0,0.192,3,0.188,4,0.093,5,0.141,8,0.125,9,0.372,10,0.922,13,1.559,17,0.746,27,0.467,29,0.504,31,1.157,33,0.949,34,0.021,35,0.679,36,0.361,37,0.449,41,1.624,42,0.886,51,1.282,58,1.238,65,0.61,72,1.33,73,0.125,79,0.668,97,0.712,104,0.521,127,0.974,135,2.317,156,0.831,231,0.01,232,0.01,303,0.666,304,0.306,315,1.089,403,0.634,404,2.211,405,1.323,406,0.923,407,0.876,409,1.193,410,1.437,411,1.514,412,0.876,413,2.286,414,2.156,415,0.923,416,1.874,417,0.923,418,2.485,419,2.806,420,1.85,421,1.743,422,1.85,423,2.232,424,2.913,425,2.23,426,1.85,427,2.23,428,2.23,429,2.23,430,2.23,431,1.687,432,1.85,433,2.23,434,1.743,435,1.472,436,1.256,437,1.85,438,1.323,439,1.256,440,1.982,441,2.232,442,1.472,443,1.472,444,1.472,445,1.472,446,2.806,447,2.34,448,2.1,449,2.1,450,2.1,451,1.472,452,2.1,453,1.472,454,1.472,455,1.225,456,2.122,457,2.512,458,1.908,461,1.602,463,0.974,465,0.789,468,1.153,472,0.876,474,2.084,478,1.262,483,1.225,488,0.831,494,1.225,501,1.225,507,1.85,508,1.153,509,1.153,510,1.225,511,1.225,512,1.225,513,1.85,514,1.225,515,1.225,516,1.225,517,1.225,518,1.85,519,1.225,520,1.225,521,1.225,522,1.743,523,1.225,524,1.225,525,1.225,526,1.225,527,1.225,528,1.225,529,1.225,530,1.225,531,1.225,532,1.225,540,0.712,541,1.225,542,1.153,544,0.75,615,0.923,616,1.323,617,1.395,618,0.923,619,1.874,620,0.923,621,0.789,622,0.923,623,0.923,624,0.75,625,0.923,626,0.712,627,0.876,628,0.923,629,0.75,630,0.923,631,1.395,632,0.712,633,0.971,634,1.395,635,0.75,636,0.75,637,0.923,638,0.923,639,0.712,640,0.75,641,0.923,642,0.75,643,0.923,644,0.75,645,0.923,646,0.75,647,0.923,648,0.677,649,0.923,650,1.521,651,0.923,652,0.923,653,0.974,654,1.365,656,1.97,658,1.395,660,1.395,665,3.822,666,1.304,667,1.304,668,1.304,669,1.304,670,1.304,671,1.304,672,1.304,673,1.304,674,1.304,675,1.304,676,1.304,677,1.304,678,1.304,679,1.304,680,1.304,681,1.304,682,1.304,683,1.304,684,1.304,685,1.304,686,1.304,687,1.304,689,1.304,690,1.304,691,1.304,692,1.304,693,1.304,694,1.304,695,1.304,696,1.304,697,1.304,698,1.304,699,1.757,700,1.495,701,1.495,702,1.304,703,1.304,704,1.304,705,1.225,706,1.304,707,1.304,708,1.304,821,1.757,986,1.757,987,3.525,988,2.925,990,3.287,1043,2.925,1071,1.936,1074,2.176,1157,3.525,1158,3.525,1316,3.199,1487,1.936,1492,3.287,1493,2.54]],["title/pipes/TranslatePipe.html",[1101,1.865,1494,2.309]],["body/pipes/TranslatePipe.html",[0,0.403,3,0.262,4,0.196,5,0.196,17,1.038,31,0.828,33,1.096,34,0.02,35,0.763,36,0.262,37,0.518,51,1.038,73,0.262,97,1.498,136,1.218,219,2.741,231,0.017,232,0.017,303,0.765,304,0.643,316,2.741,409,1.66,412,1.841,458,2.191,709,3.482,755,2.575,1101,3.262,1494,4.038,1495,5.339,1496,4.574,1497,5.339,1498,6.353,1499,5.339,1500,6.353,1501,5.339,1502,5.339,1503,5.339,1504,5.339,1505,5.339,1506,5.339]],["title/injectables/TranslationService.html",[233,0.919,458,1.253]],["body/injectables/TranslationService.html",[0,0.277,3,0.18,4,0.135,5,0.135,8,0.18,9,0.486,10,1.368,14,2.324,17,0.973,27,0.676,29,0.547,31,1.102,33,1.354,34,0.021,35,0.741,36,0.345,37,0.64,41,1.468,42,0.786,51,1.282,58,1.368,65,0.883,72,0.883,73,0.18,111,1.638,128,2.272,136,1.298,156,1.322,189,2.744,190,2.744,191,2.744,217,2.162,222,2.541,231,0.013,232,0.013,233,1.266,235,1.668,303,0.603,304,0.442,312,1.574,313,1.574,316,1.886,458,1.726,461,1.987,539,3.506,544,1.477,720,2.541,721,3.883,723,3.18,744,2.162,755,2.413,1191,4.286,1507,3.147,1508,5.69,1509,6.748,1510,5.69,1511,5.003,1512,6.109,1513,5.003,1514,5.003,1515,5.003,1516,4.286,1517,5.003,1518,5.003,1519,3.673,1520,5.69,1521,3.673,1522,5.003,1523,3.673,1524,5.003,1525,3.673,1526,5.003,1527,3.673,1528,5.003,1529,3.673,1530,5.003,1531,3.673,1532,3.673,1533,3.673,1534,5.003,1535,3.673,1536,3.673,1537,3.673,1538,3.673,1539,3.673,1540,5.69,1541,3.673,1542,5.003,1543,5.003,1544,5.003,1545,3.673,1546,5.003,1547,5.003,1548,5.003,1549,5.69,1550,5.003,1551,3.673,1552,5.69,1553,6.109,1554,5.003,1555,3.673,1556,3.673,1557,3.673,1558,3.673,1559,3.673,1560,3.673,1561,3.673,1562,3.673,1563,3.673]],["title/injectables/UserService.html",[233,0.919,255,2.513]],["body/injectables/UserService.html",[0,0.23,3,0.15,4,0.112,5,0.112,8,0.15,9,0.427,10,1.629,17,0.855,27,0.562,29,0.451,30,2.002,31,1.113,33,1.391,34,0.021,35,0.762,36,0.348,37,0.658,41,1.057,42,0.566,51,1.361,65,1.238,67,3.276,70,2.113,73,0.15,104,1.156,111,2.219,136,1.62,156,1.22,166,3.564,218,1.238,231,0.012,232,0.012,233,1.113,235,1.387,242,4.827,245,3.767,246,4.827,255,3.042,285,6.252,295,3.86,303,0.679,304,0.368,307,1.676,312,1.309,313,1.309,316,1.568,329,2.617,359,3.767,385,2.794,421,2.824,478,1.175,544,0.902,720,2.113,721,3.581,723,2.794,744,1.798,874,2.329,875,4.295,882,3.927,885,3.352,899,2.329,966,4.413,976,2.617,997,4.433,1415,5.881,1494,1.941,1564,2.617,1565,5.151,1566,4.397,1567,4.397,1568,4.397,1569,4.397,1570,4.397,1571,4.397,1572,5.635,1573,5.635,1574,4.397,1575,4.397,1576,4.397,1577,4.397,1578,3.055,1579,4.397,1580,3.055,1581,4.397,1582,3.055,1583,4.397,1584,3.055,1585,4.397,1586,3.055,1587,4.397,1588,3.055,1589,3.055,1590,3.055,1591,4.397,1592,5.635,1593,5.635,1594,3.055,1595,4.397,1596,3.055,1597,4.397,1598,3.055,1599,3.055,1600,3.055,1601,4.397,1602,3.055,1603,4.397,1604,3.055,1605,5.151,1606,5.151,1607,5.151,1608,3.055,1609,5.151,1610,3.055,1611,3.055,1612,3.055,1613,3.055,1614,3.055,1615,3.055,1616,3.055,1617,3.055,1618,3.055,1619,3.055,1620,3.055,1621,3.055,1622,5.151,1623,4.397,1624,3.055,1625,3.055,1626,3.055,1627,3.055,1628,4.397,1629,3.055,1630,3.055,1631,4.397,1632,3.055,1633,3.055,1634,3.055,1635,4.397,1636,3.055,1637,3.055,1638,3.055,1639,3.055,1640,3.055,1641,3.055,1642,3.055,1643,3.055,1644,3.055,1645,3.055,1646,3.055,1647,3.055,1648,3.055,1649,3.055,1650,3.055,1651,3.055]],["title/coverage.html",[1652,4.254]],["body/coverage.html",[0,0.425,1,1.846,5,0.132,6,4.023,7,4.023,30,1.062,34,0.02,36,0.176,74,0.602,88,2.285,112,2.285,132,2.285,148,2.634,156,0.778,209,2.285,211,2.285,215,3.109,231,0.013,232,0.013,233,1.775,234,2.741,236,3.08,255,2.487,257,2.487,397,2.285,398,3.759,402,2.285,403,0.997,404,1.062,408,3.08,410,1.118,457,1.633,458,1.24,465,1.118,472,1.24,488,1.177,621,1.118,624,1.062,626,1.008,629,1.062,632,1.008,633,1.532,635,1.062,636,1.062,639,1.008,640,1.062,642,1.062,644,1.062,646,1.062,648,0.958,650,1.062,654,2.165,655,3.08,711,2.487,712,3.08,741,2.117,770,2.487,771,2.487,772,3.08,844,2.487,845,3.734,846,3.759,878,2.487,901,3.759,915,2.487,956,3.08,984,2.741,985,2.741,986,3.893,997,2.487,998,3.08,1028,2.487,1029,2.487,1031,2.487,1032,2.487,1045,3.759,1066,2.741,1067,2.741,1089,3.08,1101,1.846,1157,2.741,1158,2.741,1195,2.741,1196,3.08,1198,1.846,1200,3.848,1212,1.972,1213,3.759,1214,3.759,1219,2.487,1241,2.741,1242,3.08,1246,2.285,1247,3.08,1251,2.285,1252,3.576,1269,2.285,1279,2.487,1390,3.08,1400,3.08,1409,3.08,1419,3.08,1429,3.08,1487,3.759,1494,2.285,1496,3.08,1507,3.08,1564,3.08,1652,3.08,1653,3.596,1654,3.596,1655,3.596,1656,3.596,1657,3.596,1658,3.596,1659,3.596,1660,4.931,1661,3.08,1662,6.055,1663,6.834,1664,4.931,1665,6.055,1666,3.596,1667,3.08,1668,2.741,1669,6.055,1670,4.931,1671,6.055,1672,3.596,1673,5.627,1674,3.596,1675,4.931,1676,3.596,1677,3.596,1678,3.596,1679,4.931,1680,4.224,1681,3.596,1682,3.596,1683,4.224,1684,3.596,1685,3.08,1686,3.596,1687,3.596,1688,4.29,1689,3.596,1690,3.08,1691,3.08,1692,6.344,1693,4.931,1694,3.596,1695,3.596,1696,3.596]],["title/dependencies.html",[1096,3.024,1697,3.03]],["body/dependencies.html",[34,0.02,57,3.114,231,0.017,232,0.017,304,0.637,305,4.531,307,2.901,540,1.484,1096,3.659,1115,5.412,1116,4.816,1165,5.412,1166,5.412,1167,4.531,1170,4.531,1698,5.289,1699,7.539,1700,5.289,1701,5.289,1702,5.289,1703,5.289,1704,5.289,1705,5.289,1706,5.289,1707,5.289,1708,5.289,1709,5.289,1710,5.289,1711,5.289,1712,5.289,1713,5.289,1714,5.289,1715,5.289,1716,5.289,1717,5.289,1718,5.289,1719,5.289,1720,5.289,1721,5.289]],["title/miscellaneous/enumerations.html",[1722,1.784,1723,3.745]],["body/miscellaneous/enumerations.html",[5,0.244,8,0.283,34,0.019,42,0.901,231,0.018,232,0.018,295,3.912,654,1.702,1252,3.664,1267,4.598,1268,4.598,1722,3.394,1723,4.94,1724,5.766]],["title/miscellaneous/functions.html",[1722,1.784,1725,3.745]],["body/miscellaneous/functions.html",[4,0.231,6,3.104,7,3.972,8,0.259,14,1.917,29,0.528,33,1.435,34,0.02,35,0.786,36,0.343,37,0.678,42,0.812,50,3.712,65,1.516,132,4.008,156,1.141,213,3.648,216,3.648,217,3.104,219,2.707,225,3.648,226,3.351,227,3.648,231,0.017,232,0.017,423,2.023,458,2.175,654,1.557,881,4.363,1661,5.402,1683,4.517,1685,5.402,1688,4.02,1690,5.402,1722,3.104,1725,4.517,1726,4.517,1727,5.273,1728,5.402,1729,4.517,1730,5.273,1731,6.306,1732,5.273]],["title/index.html",[8,0.149,1733,3.03,1734,3.03]],["body/index.html",[4,0.198,34,0.017,35,0.607,53,4.714,156,1.169,231,0.017,232,0.017,263,4.625,403,0.935,414,1.678,436,1.767,727,6.161,768,4.625,808,4.424,1516,5.479,1735,5.399,1736,6.395,1737,5.399,1738,5.399,1739,5.399,1740,5.399,1741,4.625,1742,5.399,1743,6.814,1744,7.045,1745,5.399,1746,5.399,1747,5.399,1748,5.399,1749,5.399,1750,5.399,1751,5.399,1752,5.399,1753,5.399,1754,5.399,1755,5.399,1756,5.399,1757,6.814,1758,5.399,1759,5.399,1760,5.399,1761,5.399,1762,5.399,1763,5.399,1764,5.399]],["title/modules.html",[1095,3.785]],["body/modules.html",[34,0.018,231,0.018,232,0.018,1094,4.086,1095,4.503,1116,4.503,1765,5.907,1766,5.907,1767,5.907]],["title/interfaces/optionsConfig.html",[74,0.3,1668,2.77]],["body/interfaces/optionsConfig.html",[3,0.254,4,0.19,5,0.19,8,0.254,9,0.605,29,0.391,34,0.02,36,0.361,37,0.73,73,0.254,74,0.427,79,1.165,218,2.098,231,0.017,232,0.017,297,4.314,478,1.692,847,5.102,1199,1.609,1667,4.435,1668,4.754,1768,6.948,1769,6.948,1770,6.948,1771,6.948,1772,6.948,1773,6.948,1774,5.176]],["title/overview.html",[1775,4.254]],["body/overview.html",[2,3.094,34,0.02,139,3.354,231,0.015,232,0.015,235,2.031,404,1.851,405,1.543,621,2.201,624,2.091,626,1.758,629,2.091,632,1.758,635,2.091,636,2.137,639,1.758,640,2.091,642,2.091,644,2.091,646,2.091,648,1.887,650,2.091,1093,3.832,1094,5.338,1096,3.941,1097,3.832,1099,3.832,1100,3.832,1101,3.218,1102,4.88,1103,3.094,1104,3.832,1199,1.39,1492,3.832,1494,2.843,1680,3.832,1741,3.832,1775,3.832,1776,4.473]],["title/interfaces/searchObj.html",[74,0.3,878,2.513]],["body/interfaces/searchObj.html",[0,0.299,3,0.194,4,0.145,5,0.145,8,0.194,9,0.511,29,0.563,30,1.554,34,0.021,36,0.337,37,0.654,42,0.677,57,2.332,67,2.978,72,0.952,73,0.258,74,0.327,104,0.813,136,1.664,148,2.039,156,0.857,231,0.014,232,0.014,233,1.332,303,0.759,304,0.477,307,2.173,309,3.019,312,1.698,313,1.698,314,5.527,316,2.034,374,4.012,416,1.605,474,2.062,544,1.169,721,3.345,723,2.517,744,2.332,807,4.003,844,2.74,845,2.332,846,3.019,847,3.019,848,2.517,851,3.393,855,3.393,856,5.894,858,5.397,859,3.393,861,3.393,863,3.393,864,5.064,865,5.064,867,3.393,870,3.393,872,3.393,874,4.506,875,4.506,876,3.393,877,4.509,878,4.09,879,5.397,880,3.393,881,3.641,882,4.802,883,3.393,884,3.393,885,4.012,886,3.393,887,3.393,888,3.393,889,3.393,890,5.064,891,3.393,892,3.393,893,3.393,894,3.393,895,3.393,896,3.393,897,3.393,898,3.393,899,3.019,900,3.393,1199,1.231]],["title/miscellaneous/variables.html",[1722,1.784,1777,3.745]],["body/miscellaneous/variables.html",[6,2.97,7,4.055,8,0.247,15,3.49,29,0.499,30,1.49,34,0.02,36,0.247,41,1.655,42,0.909,67,2.291,75,2.767,76,2.767,77,2.767,78,2.767,80,2.767,81,2.767,82,2.767,83,3.49,84,2.767,85,3.49,86,3.49,87,3.49,111,1.652,112,3.902,113,3.49,114,3.49,115,3.49,116,3.49,117,3.49,118,3.49,119,3.49,120,3.49,121,3.49,122,3.49,123,3.49,124,3.49,125,3.49,126,3.49,129,2.433,136,1.401,209,3.902,210,3.49,211,3.902,212,3.49,231,0.016,232,0.016,654,1.49,881,4.248,1454,5.671,1688,3.846,1691,5.261,1722,2.97,1726,4.322,1728,5.671,1729,5.261,1777,4.322,1778,5.045,1779,5.045,1780,5.045,1781,5.045,1782,5.045,1783,5.045,1784,5.045,1785,5.045]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["0.11.4",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["0.12.4",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":139,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["1\">es",{"_index":1060,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["1.19.0",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1741,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":1487,"title":{},"body":{"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["11",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["12.2.9",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":820,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["15",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1680,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["18",{"_index":1228,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["2.0.8",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["2/32",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":827,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["3",{"_index":1492,"title":{},"body":{"components/TextInputComponent.html":{},"overview.html":{}}}],["3/18",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":813,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["350px",{"_index":1044,"title":{},"body":{"injectables/DialogService.html":{}}}],["4.17.1",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1399,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["5px",{"_index":1491,"title":{},"body":{"components/TableComponent.html":{}}}],["6",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":814,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["7/15",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":166,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["_",{"_index":162,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_blank",{"_index":173,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_filter",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_isloggedin",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_options",{"_index":11,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_path",{"_index":1508,"title":{},"body":{"injectables/TranslationService.html":{}}}],["accessors",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{}}}],["according",{"_index":60,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["action",{"_index":1281,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["actionresp",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actionresp.hasownproperty('actions",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actions",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":652,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["adapter",{"_index":1167,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["add",{"_index":1285,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["additional",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["addtxtfile",{"_index":1511,"title":{},"body":{"injectables/TranslationService.html":{}}}],["addtxtfile(path",{"_index":1518,"title":{},"body":{"injectables/TranslationService.html":{}}}],["adduser",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(user",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles(user",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserres.id",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["afterdialogcallback",{"_index":1016,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterdialogcallback(result",{"_index":1037,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterviewinit",{"_index":1258,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["age",{"_index":1227,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["align",{"_index":809,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["allactionswithduplicates",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["allowed",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedactions",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["already",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["anderen",{"_index":1232,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["angular",{"_index":1738,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1257,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/common",{"_index":1170,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["angular/common/locales/de",{"_index":1172,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/compiler",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["angular/forms",{"_index":540,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1165,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1132,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/button",{"_index":1144,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/card",{"_index":1153,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/checkbox",{"_index":1136,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/core",{"_index":993,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["angular/material/datepicker",{"_index":1134,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/dialog",{"_index":791,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["angular/material/expansion",{"_index":1146,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/form",{"_index":1124,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/grid",{"_index":1148,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/icon",{"_index":1122,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/input",{"_index":1126,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/list",{"_index":1128,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/paginator",{"_index":1183,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/radio",{"_index":1150,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/select",{"_index":1130,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sidenav",{"_index":1120,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slide",{"_index":1187,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slider",{"_index":1185,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sort",{"_index":1181,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/stepper",{"_index":1138,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/table",{"_index":1179,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/tooltip",{"_index":1140,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/tree",{"_index":1142,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/platform",{"_index":1115,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["angularcsv",{"_index":1,"title":{"classes/AngularCsv.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["angularcsv(tmpdata",{"_index":1388,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angularcsv.isfloat(data",{"_index":200,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["angularformbuilder",{"_index":1735,"title":{},"body":{"index.html":{}}}],["api",{"_index":874,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["api/user?partlastname",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["apibaseurl",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["apiendpoint",{"_index":1768,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["app",{"_index":414,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["application/json",{"_index":882,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["applyfilter",{"_index":1434,"title":{},"body":{"components/TableComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1306,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["array",{"_index":45,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["array.from(new",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["array.isarray(this.data.errormsg",{"_index":1054,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["array.isarray(this.data.infomsg",{"_index":1392,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["array.isarray(value",{"_index":933,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["artifacts",{"_index":1759,"title":{},"body":{"index.html":{}}}],["assign",{"_index":225,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["asyncvalidatorfn",{"_index":1202,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["auf",{"_index":1231,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["aufgetreten",{"_index":1059,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["authentication",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":234,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["auto",{"_index":1493,"title":{},"body":{"components/TextInputComponent.html":{}}}],["autocomplete",{"_index":435,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete'},{'name",{"_index":622,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["autocompletecomponent",{"_index":621,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1749,"title":{},"body":{"index.html":{}}}],["autosearch",{"_index":397,"title":{"classes/AutoSearch.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["availableactions",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["availableactions.indexof(systemaction",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["base",{"_index":415,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent",{"_index":404,"title":{"components/BaseFieldComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basefieldcomponent:14",{"_index":704,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:15",{"_index":699,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:151",{"_index":695,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:155",{"_index":693,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:159",{"_index":698,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:16",{"_index":700,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:17",{"_index":701,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:18",{"_index":992,"title":{},"body":{"components/DateInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["basefieldcomponent:185",{"_index":694,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:189",{"_index":691,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:19",{"_index":1413,"title":{},"body":{"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["basefieldcomponent:192",{"_index":696,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:20",{"_index":1414,"title":{},"body":{"components/SelectComponent.html":{}}}],["basefieldcomponent:21",{"_index":1071,"title":{},"body":{"components/FileInputComponent.html":{},"components/SelectComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:22",{"_index":688,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SliderComponent.html":{}}}],["basefieldcomponent:23",{"_index":1426,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["basefieldcomponent:25",{"_index":991,"title":{},"body":{"components/DateInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:26",{"_index":682,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:28",{"_index":687,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:29",{"_index":683,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:30",{"_index":670,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:31",{"_index":681,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:32",{"_index":679,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:33",{"_index":680,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:34",{"_index":678,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:35",{"_index":684,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:36",{"_index":671,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:37",{"_index":668,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:38",{"_index":673,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:39",{"_index":672,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:40",{"_index":685,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:41",{"_index":675,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:42",{"_index":677,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:43",{"_index":676,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:44",{"_index":686,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:45",{"_index":669,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:46",{"_index":674,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:47",{"_index":666,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:49",{"_index":667,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:50",{"_index":703,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:51",{"_index":702,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:59",{"_index":689,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:63",{"_index":690,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:76",{"_index":692,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:97",{"_index":697,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basic",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["basierend",{"_index":1230,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["before",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["behaviorsubject",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataStoreService.html":{}}}],["behaviorsubject(true",{"_index":978,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["beträgt",{"_index":518,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["bitte",{"_index":1417,"title":{},"body":{"components/SelectComponent.html":{}}}],["bkuuser",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["bla",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["blob",{"_index":155,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blob([this.csv",{"_index":157,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blur",{"_index":1210,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["body",{"_index":57,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["body).pipe",{"_index":898,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["bom",{"_index":91,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/optionsConfig.html":{}}}],["boolean(input",{"_index":138,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["bootstrap",{"_index":1108,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["bottom",{"_index":1490,"title":{},"body":{"components/TableComponent.html":{}}}],["break",{"_index":1064,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["browse",{"_index":1767,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1116,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1118,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browseranimationsmodule",{"_index":1117,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browsermodule",{"_index":1114,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["btn",{"_index":614,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["btoa(credentials",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["buildfiletree",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildfiletree(obj",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree(config",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buttons",{"_index":1282,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["c",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["called",{"_index":223,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["categories",{"_index":879,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["center",{"_index":811,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["change",{"_index":436,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["changes",{"_index":1465,"title":{},"body":{"components/TableComponent.html":{}}}],["changes.data.currentvalue",{"_index":1353,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["changes['data",{"_index":1352,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["check",{"_index":70,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["checkbox",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox'},{'name",{"_index":625,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["checkbox.component.html",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":624,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkifuserisalreadyloggedin",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkkey",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkkey(ts",{"_index":1729,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["children",{"_index":399,"title":{},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/MenuNode.html":{}}}],["children.push(value.name",{"_index":759,"title":{},"body":{"injectables/ConfigService.html":{}}}],["choose",{"_index":1088,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"overview.html":{}}}],["classes/angular",{"_index":1265,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["classes/field",{"_index":705,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["clear",{"_index":1324,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["cli",{"_index":1739,"title":{},"body":{"index.html":{}}}],["cluster_formbuildermodule",{"_index":1097,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_bootstrap",{"_index":1098,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["cluster_formbuildermodule_declarations",{"_index":1099,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_exports",{"_index":1100,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["code",{"_index":1755,"title":{},"body":{"index.html":{}}}],["codetables",{"_index":1286,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumn.collumnkey",{"_index":1480,"title":{},"body":{"components/TableComponent.html":{}}}],["collumn.collumnname",{"_index":1481,"title":{},"body":{"components/TableComponent.html":{}}}],["collumnkey",{"_index":1253,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnname",{"_index":1254,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnstobedisplayed",{"_index":1293,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["color",{"_index":1423,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["column.collumnname",{"_index":1341,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnname",{"_index":1370,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames",{"_index":1381,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames.filter((el",{"_index":1382,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns",{"_index":1378,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns.filter((el",{"_index":1379,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["colums",{"_index":1458,"title":{},"body":{"components/TableComponent.html":{}}}],["commonmodule",{"_index":1169,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["component",{"_index":403,"title":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":620,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["components",{"_index":405,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"overview.html":{}}}],["components/autocomplete/autocomplete.component",{"_index":1160,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/autocomplete/autocomplete.component.ts",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component",{"_index":1161,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:13",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":984,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/confirm",{"_index":770,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/error",{"_index":1028,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/info",{"_index":1031,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["components/file",{"_index":1066,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component",{"_index":1162,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/radiobutton/radiobutton.component.ts",{"_index":1400,"title":{},"body":{"components/RadiobuttonComponent.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component.ts:14",{"_index":1404,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["components/select/select.component",{"_index":1156,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/select/select.component.ts",{"_index":1409,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:17",{"_index":1412,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/slider/slider.component",{"_index":1163,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slider/slider.component.ts",{"_index":1429,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["components/slider/slider.component.ts:14",{"_index":1433,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slidetoggle/slidetoggle.component",{"_index":1189,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slidetoggle/slidetoggle.component.ts",{"_index":1419,"title":{},"body":{"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:14",{"_index":1425,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:15",{"_index":1424,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/table/table.component",{"_index":1177,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/table/table.component.ts",{"_index":1252,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/table/table.component.ts:110",{"_index":1463,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:115",{"_index":1464,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:129",{"_index":1470,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:134",{"_index":1469,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:138",{"_index":1467,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:143",{"_index":1468,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:149",{"_index":1456,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:162",{"_index":1457,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:178",{"_index":1460,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:194",{"_index":1471,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:198",{"_index":1455,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:52",{"_index":1477,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:53",{"_index":1472,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:54",{"_index":1474,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:55",{"_index":1449,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:56",{"_index":1476,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:57",{"_index":1473,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:58",{"_index":1447,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:59",{"_index":1448,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:60",{"_index":1446,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:61",{"_index":1475,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:62",{"_index":1478,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:63",{"_index":1452,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:64",{"_index":1451,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:65",{"_index":1450,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:66",{"_index":1445,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:73",{"_index":1453,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:79",{"_index":1461,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:86",{"_index":1462,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:92",{"_index":1466,"title":{},"body":{"components/TableComponent.html":{}}}],["components/text",{"_index":1157,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["config",{"_index":127,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["config.disabled",{"_index":577,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hint",{"_index":567,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hintlabel",{"_index":569,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute",{"_index":593,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute.autocomplete",{"_index":594,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmltype",{"_index":590,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.icon",{"_index":592,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.name",{"_index":570,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators",{"_index":576,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.max",{"_index":581,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.maxlength",{"_index":585,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.min",{"_index":583,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.minlength",{"_index":587,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.required",{"_index":578,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.value",{"_index":588,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config[page",{"_index":751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[page][formn",{"_index":752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configdefaults",{"_index":112,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":711,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["configurable",{"_index":1283,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["confirm",{"_index":627,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["confirm(messagestring",{"_index":1007,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmdialogcomponent",{"_index":626,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connector.service.ts",{"_index":846,"title":{},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["connector.service.ts:17",{"_index":854,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:23",{"_index":857,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:31",{"_index":873,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:42",{"_index":866,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:69",{"_index":860,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:79",{"_index":869,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:83",{"_index":871,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:87",{"_index":862,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:91",{"_index":868,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["console.log(\"newtree",{"_index":763,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log('[authenticationservice",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('csv",{"_index":1389,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log('invalid",{"_index":153,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["console.log('saveallowedactions",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('saveuserprofile",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(`${key",{"_index":757,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(columnname",{"_index":1372,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(columns",{"_index":1384,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(config",{"_index":747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(data",{"_index":1371,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(e",{"_index":1083,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(form",{"_index":754,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(key",{"_index":1503,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(langpath",{"_index":1547,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(messagestring",{"_index":1040,"title":{},"body":{"injectables/DialogService.html":{}}}],["console.log(opt",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(reader",{"_index":1087,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.control",{"_index":1074,"title":{},"body":{"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["console.log(this.flatcontrolls",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(this.form",{"_index":1075,"title":{},"body":{"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["console.log(this.message",{"_index":800,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["console.log(this.name",{"_index":1073,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.options",{"_index":1405,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["console.log(this.required",{"_index":579,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.translate.data",{"_index":1505,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(tmpdata",{"_index":1386,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(translation",{"_index":1550,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(type",{"_index":551,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(value",{"_index":767,"title":{},"body":{"injectables/ConfigService.html":{}}}],["const",{"_index":111,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":778,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["constructor(datajson",{"_index":28,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["constructor(dialog",{"_index":1004,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{}}}],["constructor(fb",{"_index":455,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(http",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DialogService.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["constructor(public",{"_index":706,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(router",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["content",{"_index":807,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/searchObj.html":{}}}],["content#confirm",{"_index":822,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["content#error",{"_index":1065,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["content#info",{"_index":1398,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["control",{"_index":437,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["convet",{"_index":213,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["cookie",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["coverage",{"_index":1652,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":56,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{}}}],["create(post",{"_index":855,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["credentials",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["csv",{"_index":12,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["csv.ts",{"_index":7,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["csv.ts:142",{"_index":66,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:156",{"_index":64,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:170",{"_index":59,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:19",{"_index":843,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:191",{"_index":55,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:20",{"_index":828,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:218",{"_index":48,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:22",{"_index":830,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:23",{"_index":829,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:24",{"_index":836,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:25",{"_index":838,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:258",{"_index":63,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:26",{"_index":839,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:27",{"_index":831,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:28",{"_index":837,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:29",{"_index":840,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:30",{"_index":832,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:31",{"_index":835,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:32",{"_index":842,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:33",{"_index":841,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:34",{"_index":833,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:35",{"_index":834,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:56",{"_index":44,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:57",{"_index":46,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:58",{"_index":43,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:60",{"_index":40,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:61",{"_index":32,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:81",{"_index":69,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:88",{"_index":52,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csvconfigconsts",{"_index":88,"title":{"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["csvconfigconsts.bom",{"_index":142,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvconfigconsts.default_decimal_separator",{"_index":116,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_field_separator",{"_index":114,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_filename",{"_index":113,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_header",{"_index":121,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_no_download",{"_index":125,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_null_to_empty_string",{"_index":126,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_obj_header",{"_index":122,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_quote",{"_index":115,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_labels",{"_index":117,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_title",{"_index":118,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_title",{"_index":119,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_bom",{"_index":120,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_header",{"_index":124,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_obj_header",{"_index":123,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.eol",{"_index":186,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvexport",{"_index":1435,"title":{},"body":{"components/TableComponent.html":{}}}],["current",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdepth",{"_index":928,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["currently",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuser",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["currentuserroles",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuserroles.indexof(systemrole",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentvalue",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["customfilterbasedondisplaycolumns",{"_index":1436,"title":{},"body":{"components/TableComponent.html":{}}}],["customfilterbasedondisplaycolumns(data",{"_index":1369,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["customvalidation",{"_index":438,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["das",{"_index":507,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["data",{"_index":14,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["data.indexof",{"_index":205,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\n",{"_index":206,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\r",{"_index":207,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.replace(/\"/g",{"_index":203,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tolocalestring",{"_index":201,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tostring().replace",{"_index":202,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data:attachment/csv;charset=utf",{"_index":165,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data[columnname",{"_index":1373,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[columnname].tostring().trim().tolowercase().indexof(filter.tolowercase",{"_index":1374,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datachange",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataconnectorservice",{"_index":844,"title":{"injectables/DataConnectorService.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["dataflattnerservice",{"_index":741,"title":{"injectables/DataFlattnerService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["dataflattnerservice.flatten(tmpdata",{"_index":762,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataflattnerservice.isbuffer(value",{"_index":935,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataflattnerservice.unflatten(target[key",{"_index":955,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataimporterrors",{"_index":1034,"title":{},"body":{"injectables/DialogService.html":{}}}],["datajson",{"_index":38,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["datasource",{"_index":1295,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datastore",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["datastoreservice",{"_index":257,"title":{"injectables/DataStoreService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["date",{"_index":630,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dateadapter",{"_index":989,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(lang",{"_index":996,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(ts.lang",{"_index":994,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateinputcomponent",{"_index":629,"title":{"components/DateInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datumsformat",{"_index":532,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["de",{"_index":1191,"title":{},"body":{"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{}}}],["de'}.json",{"_index":1546,"title":{},"body":{"injectables/TranslationService.html":{}}}],["debug=express",{"_index":1753,"title":{},"body":{"index.html":{}}}],["decimalseparator",{"_index":77,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1106,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["decorators",{"_index":783,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default_decimal_separator",{"_index":94,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_field_separator",{"_index":93,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_filename",{"_index":100,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_header",{"_index":105,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_no_download",{"_index":109,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_null_to_empty_string",{"_index":110,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_obj_header",{"_index":106,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_quote",{"_index":95,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_labels",{"_index":102,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_title",{"_index":96,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_title",{"_index":98,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_bom",{"_index":103,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_header",{"_index":108,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_obj_header",{"_index":107,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":848,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"interfaces/searchObj.html":{}}}],["delete(id",{"_index":859,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["delete_forever",{"_index":1483,"title":{},"body":{"components/TableComponent.html":{}}}],["deletebulk",{"_index":1305,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["deletefield",{"_index":849,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["deletefield(id",{"_index":861,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["deleteuser",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(user",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["delimiter",{"_index":921,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dependencies",{"_index":1096,"title":{"dependencies.html":{}},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/AngularCsv.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1746,"title":{},"body":{"index.html":{}}}],["development",{"_index":1742,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":633,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["dialog'},{'name",{"_index":628,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dialog.component",{"_index":1027,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["dialog.component.html",{"_index":774,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.less",{"_index":773,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":772,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":788,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":786,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":781,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":785,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":782,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.service",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["dialog/confirm",{"_index":771,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["dialog_content",{"_index":823,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_message",{"_index":817,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_title",{"_index":803,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogdata",{"_index":1033,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":779,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogref.afterclosed().subscribe((result:any",{"_index":1036,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogservice",{"_index":997,"title":{"injectables/DialogService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["difference",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["difference(newobj",{"_index":1730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":1488,"title":{},"body":{"components/TableComponent.html":{}}}],["directive",{"_index":618,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directives",{"_index":651,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1758,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1761,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":439,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["display",{"_index":804,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["displayedcolumns",{"_index":1298,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["dist",{"_index":1760,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(link",{"_index":177,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.body.removechild(link",{"_index":179,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.createelement('a",{"_index":169,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.queryselector('#file",{"_index":1077,"title":{},"body":{"components/FileInputComponent.html":{}}}],["documentation",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":406,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["done",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["done.next(updateroleresp",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1082,"title":{},"body":{"components/FileInputComponent.html":{}}}],["e.target.result",{"_index":1085,"title":{},"body":{"components/FileInputComponent.html":{}}}],["edit",{"_index":1304,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["edituser",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(user",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles(user",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["eg",{"_index":1284,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ein",{"_index":509,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["eingeben",{"_index":516,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["eingehalten",{"_index":526,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["el",{"_index":1383,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["el.collumnname",{"_index":1380,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["element",{"_index":617,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["element[collumn.collumnname",{"_index":1482,"title":{},"body":{"components/TableComponent.html":{}}}],["elements",{"_index":1313,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["email",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["emailadresse",{"_index":529,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["encodeuri(this.csv",{"_index":167,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["entitytype",{"_index":1236,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entitäten",{"_index":1233,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entries",{"_index":748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entries.push(tmpdata",{"_index":761,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entriesperpage",{"_index":1769,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["entry",{"_index":1287,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enum",{"_index":1266,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enumerations",{"_index":1723,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eol",{"_index":89,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["errobj",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error",{"_index":544,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["errordataarray",{"_index":1018,"title":{},"body":{"injectables/DialogService.html":{}}}],["errordialogsimplecomponent",{"_index":632,"title":{"components/ErrorDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormsg",{"_index":775,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["es",{"_index":1057,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["event",{"_index":1215,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["event.target",{"_index":1308,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["eventemitter",{"_index":461,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["exists",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":73,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["exports",{"_index":1107,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["express",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["falsches",{"_index":531,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["false",{"_index":97,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["fb",{"_index":418,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["fehler",{"_index":1058,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["field",{"_index":416,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["field'},{'name",{"_index":623,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["fieldseparator",{"_index":75,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fieldtocheck",{"_index":1216,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["fieldtoupdate",{"_index":1217,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["fileinputcomponent",{"_index":635,"title":{"components/FileInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":15,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["filereader",{"_index":1078,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":1751,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1344,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtercontrol",{"_index":1297,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtereddatasource",{"_index":1365,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtervalue",{"_index":1454,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fixme",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["flag",{"_index":1763,"title":{},"body":{"index.html":{}}}],["flatcontrolls",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["flatten",{"_index":902,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flatten(target",{"_index":907,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flattner.service",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{}}}],["flattner.service.ts",{"_index":901,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["flattner.service.ts:10",{"_index":906,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:15",{"_index":914,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:26",{"_index":911,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:3",{"_index":1240,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["flattner.service.ts:31",{"_index":909,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:66",{"_index":917,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flex",{"_index":805,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["float",{"_index":71,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["focus",{"_index":1220,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["font",{"_index":818,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["for(const",{"_index":1555,"title":{},"body":{"injectables/TranslationService.html":{}}}],["foreignfieldcheck",{"_index":1229,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["forkjoin",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["forkjoin(this.edituser(user",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["form",{"_index":440,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["format",{"_index":49,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formatdata",{"_index":18,"title":{},"body":{"classes/AngularCsv.html":{}}}],["formatdata(data",{"_index":47,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formbuilder",{"_index":456,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder'},{'name",{"_index":638,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder.component",{"_index":1113,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["formbuildercomponent",{"_index":636,"title":{"components/FormbuilderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formbuildermodule",{"_index":1094,"title":{"modules/FormbuilderModule.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["formbuilderservice",{"_index":1195,"title":{"injectables/FormbuilderService.html":{}},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["formcontrol",{"_index":463,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formgroup",{"_index":468,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["formn",{"_index":750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formservice",{"_index":457,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["forroot",{"_index":1109,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["fs",{"_index":419,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["function",{"_index":215,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["functions",{"_index":1725,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":161,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generate",{"_index":53,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"index.html":{}}}],["generatecsv",{"_index":19,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generated",{"_index":1737,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1752,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1278,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["generic",{"_index":1268,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["get(itemtype",{"_index":863,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["get_app",{"_index":1484,"title":{},"body":{"components/TableComponent.html":{}}}],["getallowedactions",{"_index":958,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getasyncvalidation",{"_index":850,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["getasyncvalidation(url",{"_index":867,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getbody",{"_index":20,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getbodyaccordingheader",{"_index":21,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcontrolls",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcsvdata",{"_index":22,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcurrentuser",{"_index":959,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getdata",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdisplaydata",{"_index":1437,"title":{},"body":{"components/TableComponent.html":{}}}],["getdisplaydata(colums",{"_index":1375,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["getdisplayrepresentation",{"_index":1288,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["geterrormeesage",{"_index":424,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfieldconfig",{"_index":425,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfields",{"_index":851,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getfiltereddisplaydata",{"_index":1438,"title":{},"body":{"components/TableComponent.html":{}}}],["getfiltereddisplaydata(colums",{"_index":1459,"title":{},"body":{"components/TableComponent.html":{}}}],["getflatcontrolls",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getform",{"_index":1243,"title":{},"body":{"interfaces/IForm.html":{}}}],["getform(name",{"_index":1244,"title":{},"body":{"interfaces/IForm.html":{}}}],["getheaderfromobj",{"_index":23,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getheaders",{"_index":24,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getisloggedin",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getkey(split.shift",{"_index":945,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getkey(split[0",{"_index":947,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getmeesage",{"_index":426,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getmeesage(type",{"_index":494,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname",{"_index":427,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname()+'#label",{"_index":1406,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getname()+\\'#label",{"_index":1408,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getnavbarstate",{"_index":960,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["gets",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":1733,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseractions",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserdata",{"_index":1512,"title":{},"body":{"injectables/TranslationService.html":{}}}],["getuserprofile",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserroles",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalidators",{"_index":428,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getvalue",{"_index":429,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["groupby",{"_index":1770,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["h2",{"_index":815,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["hammerjs",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["handlesessiontimeout",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasavailableaction(systemresource",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasownproperty",{"_index":209,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasrole(systemrole",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["header",{"_index":62,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["header.collumnkey",{"_index":1376,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["header.collumnname",{"_index":1338,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["headerrow",{"_index":183,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["headers",{"_index":67,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["headers.reduce((headerrow",{"_index":182,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["height",{"_index":1397,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["helps",{"_index":1277,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["hidden",{"_index":175,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["hint",{"_index":441,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["hintlabel",{"_index":442,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["his.loadallowedactions",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["home_ui_new",{"_index":483,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["html",{"_index":616,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlattribute",{"_index":443,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1309,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["htmltype",{"_index":444,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["http",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["http://localhost:4200",{"_index":1748,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["httpclientmodule",{"_index":1154,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["httpheaders",{"_index":875,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["icodeentry",{"_index":1198,"title":{"interfaces/ICodeEntry.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["icon",{"_index":776,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["iconact",{"_index":430,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconaction",{"_index":445,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconbtn",{"_index":446,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["icustom",{"_index":1201,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["icustomvalidation",{"_index":465,"title":{"interfaces/ICustomValidation.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["id",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["identifier",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["idialogconfig",{"_index":1219,"title":{"interfaces/IDialogConfig.html":{}},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["if(key",{"_index":1504,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["if(this.field.disabled",{"_index":596,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.msgerrors[type](param",{"_index":552,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.userdata",{"_index":1557,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ifield",{"_index":410,"title":{"interfaces/IField.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["iflatobject",{"_index":915,"title":{"interfaces/IFlatObject.html":{}},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["iform",{"_index":1241,"title":{"interfaces/IForm.html":{}},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["iformobj",{"_index":1212,"title":{"interfaces/IFormObj.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["ihtmlattributes",{"_index":472,"title":{"interfaces/IHTMLAttributes.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["implements",{"_index":409,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["import",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["important",{"_index":825,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["imports",{"_index":1192,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["incoorect",{"_index":884,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1239,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["infodialogsimplecomponent",{"_index":639,"title":{"components/InfoDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infomsg",{"_index":1023,"title":{},"body":{"injectables/DialogService.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["information",{"_index":1395,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["informations",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inherited",{"_index":665,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["init",{"_index":420,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["initialcolumns",{"_index":1294,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["inject",{"_index":789,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["inject(mat_dialog_data",{"_index":784,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["injectable",{"_index":233,"title":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["injectables",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":72,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"interfaces/searchObj.html":{}}}],["input'},{'name",{"_index":631,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component",{"_index":1159,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["input.component.html",{"_index":988,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.scss",{"_index":987,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts",{"_index":986,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":990,"title":{},"body":{"components/DateInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:14",{"_index":1070,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":1072,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input/date",{"_index":985,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/file",{"_index":1067,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/text",{"_index":1158,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["inputnode",{"_index":1076,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputnode.files[0",{"_index":1079,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputs",{"_index":434,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["insert",{"_index":895,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["insertfield",{"_index":852,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["insertfield(field",{"_index":870,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["int",{"_index":1234,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["interface",{"_index":74,"title":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["interfaces",{"_index":1199,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{}}}],["interfaces/icustom",{"_index":536,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["interfaces/ifield",{"_index":535,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["interfaces/imenu",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interfaces/isliderconfig",{"_index":1427,"title":{},"body":{"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["interfaces/ivalidator",{"_index":538,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["inverted",{"_index":1248,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["isallselected",{"_index":1317,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["isarray",{"_index":931,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer",{"_index":903,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer(obj",{"_index":910,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfinite(input",{"_index":137,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isflat",{"_index":904,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["isflat(object",{"_index":913,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfloat",{"_index":26,"title":{},"body":{"classes/AngularCsv.html":{}}}],["isfloat(input",{"_index":68,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isliderconfig",{"_index":1246,"title":{"interfaces/ISliderConfig.html":{}},"body":{"interfaces/ISliderConfig.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"coverage.html":{}}}],["isloggedin",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isloggedin(value",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isobject",{"_index":936,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["ist",{"_index":508,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["itableheader",{"_index":1251,"title":{"interfaces/ITableHeader.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["itableviewoptions",{"_index":1269,"title":{"interfaces/ITableViewOptions.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["item",{"_index":881,"title":{},"body":{"injectables/DataConnectorService.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["item.error",{"_index":1062,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["item.info",{"_index":1396,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["item.key",{"_index":1407,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["item.name",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":810,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["itemtype",{"_index":856,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["ivalidator",{"_index":488,"title":{"interfaces/IValidator.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["ja",{"_index":802,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["json",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(datajson",{"_index":130,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["json.parse(localstorage.getitem(this.user_allowed_actions",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.parse(res",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(actions",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(rolesobject",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(userprofile",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":806,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["kat",{"_index":864,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["kat.length",{"_index":887,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["keine",{"_index":527,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["key",{"_index":755,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["key.split(delimiter",{"_index":943,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key1",{"_index":944,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key2",{"_index":946,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keya.length",{"_index":939,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keyb.length",{"_index":940,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keytosave",{"_index":1774,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["label",{"_index":600,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{}}}],["labels",{"_index":16,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["lang",{"_index":1509,"title":{},"body":{"injectables/TranslationService.html":{}}}],["langpath",{"_index":1544,"title":{},"body":{"injectables/TranslationService.html":{}}}],["left",{"_index":824,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["legend",{"_index":615,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["level",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib",{"_index":637,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["line",{"_index":191,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["link",{"_index":168,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.click",{"_index":178,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.download",{"_index":176,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.href",{"_index":170,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('target",{"_index":172,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('visibility",{"_index":174,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["list",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["literal",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/optionsConfig.html":{}}}],["loadafterpercentscrolled",{"_index":1771,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["loadallowedactions",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loaduserprofile",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locale",{"_index":199,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["localede",{"_index":1171,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["locally",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem(this.bla",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('txtbooth",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.user_allowed_actions",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('txtbooth",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.user_allowed_actions",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lodash",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["login(credentials",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["login(username",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpage",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["logout(navigatetologinpage",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["länge",{"_index":512,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["löschen",{"_index":1486,"title":{},"body":{"components/TableComponent.html":{}}}],["make",{"_index":1280,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map",{"_index":877,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["map((column",{"_index":1342,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map(value",{"_index":899,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["margin",{"_index":816,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["mastertoggle",{"_index":1325,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mat",{"_index":821,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TextInputComponent.html":{}}}],["mat_date_locale",{"_index":1151,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_dialog_data",{"_index":790,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matautocompletemodule",{"_index":1131,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matbuttonmodule",{"_index":1143,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcardmodule",{"_index":1152,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcheckboxmodule",{"_index":1135,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matches",{"_index":1314,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matching",{"_index":232,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1133,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdatepickerparse",{"_index":530,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["matdialog",{"_index":1005,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matdialogmodule",{"_index":1176,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdialogref",{"_index":780,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matexpansionmodule",{"_index":1145,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matformfieldmodule",{"_index":1123,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matgridlistmodule",{"_index":1147,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["maticonmodule",{"_index":1121,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matinputmodule",{"_index":1125,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matlistmodule",{"_index":1127,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matmomentdatemodule",{"_index":1164,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matpaginator",{"_index":1264,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matpaginatormodule",{"_index":1182,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matradiomodule",{"_index":1149,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matselectmodule",{"_index":1129,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsidenavmodule",{"_index":1119,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidermodule",{"_index":1184,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidetogglemodule",{"_index":1186,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsort",{"_index":1263,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matsortmodule",{"_index":1180,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsteppermodule",{"_index":1137,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattabledatasource",{"_index":1262,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mattablemodule",{"_index":1178,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattooltipmodule",{"_index":1139,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattreemodule",{"_index":1141,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["max",{"_index":447,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxdepth",{"_index":922,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["maximale",{"_index":511,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maximum",{"_index":517,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxlength",{"_index":448,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["menunode",{"_index":402,"title":{"interfaces/MenuNode.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["message",{"_index":777,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagecode",{"_index":1235,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagestring",{"_index":1011,"title":{},"body":{"injectables/DialogService.html":{}}}],["metadata",{"_index":412,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":449,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mindestens",{"_index":514,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minimum",{"_index":520,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minlength",{"_index":450,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["miscellaneous",{"_index":1722,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":1093,"title":{"modules/FormbuilderModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":1095,"title":{"modules.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{}}}],["moment",{"_index":1166,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["more",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ms",{"_index":1208,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["msg",{"_index":1237,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["msgerrors",{"_index":422,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mycsv.csv",{"_index":101,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navbarvisibility",{"_index":957,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["navigate",{"_index":1747,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigatetologinpage",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigator.mssaveblob",{"_index":159,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["navigator.mssaveblob(blob",{"_index":163,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["negativecallback",{"_index":1009,"title":{},"body":{"injectables/DialogService.html":{}}}],["nein",{"_index":801,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["new",{"_index":156,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["newkey",{"_index":937,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["newobj",{"_index":1732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["newvalidators",{"_index":601,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.email",{"_index":610,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.max",{"_index":603,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.maxlength",{"_index":605,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.min",{"_index":604,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.minlength",{"_index":606,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.pattern",{"_index":608,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.required",{"_index":602,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["next",{"_index":190,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["ng",{"_index":1757,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1346,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngmodule",{"_index":1111,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["ngonchanges",{"_index":1439,"title":{},"body":{"components/TableComponent.html":{}}}],["ngonchanges(changes",{"_index":1351,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngoninit",{"_index":431,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["nicht",{"_index":525,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["noaction",{"_index":1221,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["node",{"_index":768,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["node.name",{"_index":769,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodownload",{"_index":84,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1745,"title":{},"body":{"index.html":{}}}],["null",{"_index":218,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{}}}],["nulltoemptystring",{"_index":87,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":478,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{}}}],["numrows",{"_index":1320,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["numselected",{"_index":1318,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["obj",{"_index":61,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["obj.constructor",{"_index":918,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer",{"_index":919,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer(obj",{"_index":920,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj[key",{"_index":766,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object",{"_index":65,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object(val",{"_index":224,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.assign",{"_index":222,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{}}}],["object.assign(this.data",{"_index":1562,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.assign(txtfile",{"_index":1558,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(form",{"_index":756,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(actions).length",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object.keys(obj).reduce((accumulator",{"_index":765,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(object).foreach((key",{"_index":929,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.keys(this._options.objheader).foreach(key",{"_index":187,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(this._options.objheader).length",{"_index":147,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(value).length",{"_index":938,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.hasownproperty",{"_index":210,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.propertyisenumerable",{"_index":212,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.tostring.call(recipient[key1",{"_index":950,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.tostring.call(value",{"_index":934,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.values(roles",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object[key",{"_index":930,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["objectassign",{"_index":132,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectassign(target",{"_index":227,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["objheader",{"_index":83,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["ok",{"_index":1061,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["okaction",{"_index":1238,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["oncancel",{"_index":1222,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["onchanges",{"_index":1259,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onclose",{"_index":1223,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["ondatachange",{"_index":1536,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ondeleterecord",{"_index":1440,"title":{},"body":{"components/TableComponent.html":{}}}],["ondeleterecord(row",{"_index":1362,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondeleteselectedrecords",{"_index":1364,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondownload",{"_index":1441,"title":{},"body":{"components/TableComponent.html":{}}}],["ondownload(row",{"_index":1360,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onedit",{"_index":1442,"title":{},"body":{"components/TableComponent.html":{}}}],["onedit(row",{"_index":1358,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onfileselected",{"_index":1068,"title":{},"body":{"components/FileInputComponent.html":{}}}],["oninit",{"_index":411,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["onlangchange",{"_index":1535,"title":{},"body":{"injectables/TranslationService.html":{}}}],["operator",{"_index":1218,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["opt",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter(item",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt[0",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["options",{"_index":30,"title":{"interfaces/Options.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["optionsconfig",{"_index":1668,"title":{"interfaces/optionsConfig.html":{}},"body":{"coverage.html":{},"interfaces/optionsConfig.html":{}}}],["opts",{"_index":908,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.delimiter",{"_index":924,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.maxdepth",{"_index":925,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.object",{"_index":953,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.safe",{"_index":932,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["origobj",{"_index":1731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1323,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["out",{"_index":1104,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["output",{"_index":539,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["outputs",{"_index":1444,"title":{},"body":{"components/TableComponent.html":{}}}],["overview",{"_index":1775,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":951,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["package",{"_index":1697,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":812,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["page",{"_index":749,"title":{},"body":{"injectables/ConfigService.html":{}}}],["paginator",{"_index":1301,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["param",{"_index":135,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.max",{"_index":519,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.min",{"_index":521,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.pattern",{"_index":523,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredlength",{"_index":513,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":890,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["parser",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["path",{"_index":1520,"title":{},"body":{"injectables/TranslationService.html":{}}}],["path}${this.lang",{"_index":1545,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pattern",{"_index":522,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pflichtfeld",{"_index":510,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pipe",{"_index":1494,"title":{"pipes/TranslatePipe.html":{}},"body":{"pipes/TranslatePipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1495,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["pipetransform",{"_index":1500,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["placeholder",{"_index":451,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["position",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["positivecallback",{"_index":1008,"title":{},"body":{"injectables/DialogService.html":{}}}],["positivecallback(result",{"_index":1042,"title":{},"body":{"injectables/DialogService.html":{}}}],["post",{"_index":858,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["prefer",{"_index":192,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["prefix",{"_index":1534,"title":{},"body":{"injectables/TranslationService.html":{}}}],["prev",{"_index":927,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["previousvalue.concat(currentvalue",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1762,"title":{},"body":{"index.html":{}}}],["production",{"_index":1764,"title":{},"body":{"index.html":{}}}],["profile",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["project",{"_index":1736,"title":{},"body":{"index.html":{}}}],["projects/.../angular",{"_index":1728,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../autocomplete.component.ts",{"_index":1726,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form.service.ts",{"_index":1727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../table.component.ts",{"_index":1724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/formbuilder/src/lib/classes/angular",{"_index":6,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts",{"_index":408,"title":{},"body":{"components/BaseFieldComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:14",{"_index":533,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:151",{"_index":498,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:155",{"_index":496,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:159",{"_index":503,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:185",{"_index":497,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:189",{"_index":493,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:192",{"_index":499,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:26",{"_index":484,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:28",{"_index":490,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:29",{"_index":485,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:30",{"_index":467,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:31",{"_index":482,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:32",{"_index":480,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:33",{"_index":481,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:34",{"_index":479,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:35",{"_index":486,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:36",{"_index":469,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:37",{"_index":464,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:38",{"_index":471,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:39",{"_index":470,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:40",{"_index":487,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:41",{"_index":475,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:42",{"_index":477,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:43",{"_index":476,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:44",{"_index":489,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:45",{"_index":466,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:46",{"_index":473,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:47",{"_index":460,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:49",{"_index":462,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:50",{"_index":506,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:51",{"_index":459,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:54",{"_index":504,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:55",{"_index":505,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:56",{"_index":534,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:59",{"_index":491,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:63",{"_index":492,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:76",{"_index":495,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:84",{"_index":500,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:97",{"_index":502,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts",{"_index":1089,"title":{},"body":{"components/FormbuilderComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:13",{"_index":1091,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:17",{"_index":1092,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts",{"_index":1105,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts:127",{"_index":1110,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts",{"_index":1196,"title":{},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts:6",{"_index":1197,"title":{},"body":{"injectables/FormbuilderService.html":{}}}],["projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts",{"_index":1667,"title":{},"body":{"coverage.html":{},"interfaces/optionsConfig.html":{}}}],["projects/formbuilder/src/lib/interfaces/icustom",{"_index":1213,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ifield.ts",{"_index":1200,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts",{"_index":1242,"title":{},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts:8",{"_index":1245,"title":{},"body":{"interfaces/IForm.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts",{"_index":398,"title":{},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:7",{"_index":401,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:8",{"_index":400,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/isliderconfig.ts",{"_index":1247,"title":{},"body":{"interfaces/ISliderConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ivalidator.ts",{"_index":1390,"title":{},"body":{"interfaces/IValidator.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:111",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:127",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:13",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:138",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:14",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:154",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:158",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:16",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:163",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:185",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:189",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:193",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:200",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:22",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:72",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:89",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:12",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:13",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:14",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:21",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:52",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:59",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:83",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:87",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/data",{"_index":845,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts",{"_index":998,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:10",{"_index":1006,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:100",{"_index":1025,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:114",{"_index":1014,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:14",{"_index":1017,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:33",{"_index":1020,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:52",{"_index":1022,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:79",{"_index":1010,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/form.service.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts",{"_index":1496,"title":{},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts:11",{"_index":1499,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts",{"_index":1507,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:13",{"_index":1531,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:14",{"_index":1532,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:15",{"_index":1533,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:17",{"_index":1517,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:27",{"_index":1525,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:31",{"_index":1519,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:49",{"_index":1521,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:61",{"_index":1523,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:67",{"_index":1527,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:72",{"_index":1529,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:101",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:105",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:109",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:11",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:116",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:15",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:17",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:25",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:39",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:47",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:58",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:71",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:77",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:81",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:85",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:97",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/ui",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1530,"title":{},"body":{"injectables/TranslationService.html":{}}}],["promise((resolve",{"_index":1542,"title":{},"body":{"injectables/TranslationService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["propisenumerable",{"_index":211,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":1193,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["providedin",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["providers",{"_index":1112,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["public",{"_index":13,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pure",{"_index":1502,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["questionmark",{"_index":787,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["quotestrings",{"_index":76,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["r\\n",{"_index":90,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["r\\n\\n",{"_index":145,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["radiobutton",{"_index":1401,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton'},{'name",{"_index":641,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["radiobutton.component.html",{"_index":1403,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton.component.scss",{"_index":1402,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobuttoncomponent",{"_index":640,"title":{"components/RadiobuttonComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":1155,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reader",{"_index":1080,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.onload",{"_index":1081,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.readasarraybuffer(inputnode.files[0",{"_index":1086,"title":{},"body":{"components/FileInputComponent.html":{}}}],["readonly",{"_index":421,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["recipient",{"_index":948,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["recipient[key1",{"_index":952,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["reduce((previousvalue",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refresh",{"_index":1443,"title":{},"body":{"components/TableComponent.html":{}}}],["registerallowedactions",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registercurrentuser",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerlocaledata",{"_index":1168,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["registerlocaledata(localede",{"_index":1190,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reject",{"_index":1543,"title":{},"body":{"injectables/TranslationService.html":{}}}],["reload",{"_index":1750,"title":{},"body":{"index.html":{}}}],["removes",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replaysubject",{"_index":966,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":976,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["report",{"_index":99,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["required",{"_index":452,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["res",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["reset",{"_index":1103,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"overview.html":{}}}],["resolve(this.data",{"_index":1553,"title":{},"body":{"injectables/TranslationService.html":{}}}],["resp",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":949,"title":{},"body":{"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["results",{"_index":231,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["resultslength",{"_index":1296,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":1489,"title":{},"body":{"components/TableComponent.html":{}}}],["right",{"_index":826,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["roles",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["rolesobject",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["router",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["row",{"_index":181,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["row.slice(0",{"_index":185,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["rows",{"_index":1316,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["run",{"_index":1744,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["rxjs/operators",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["s",{"_index":230,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["safe",{"_index":923,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["saveallowedactions(actions",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile(userprofile",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["scaffolding",{"_index":1756,"title":{},"body":{"index.html":{}}}],["search",{"_index":885,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["search.categories",{"_index":888,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.id",{"_index":886,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.text",{"_index":889,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["searchable",{"_index":1270,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["searchafternthcharacter",{"_index":1772,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["searchobj",{"_index":878,"title":{"interfaces/searchObj.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["searchusers",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["searchusers(search",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["select",{"_index":1333,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{}}}],["select'},{'name",{"_index":643,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["select.component.html",{"_index":1411,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":1410,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":642,"title":{"components/SelectComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1312,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selection",{"_index":1291,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel",{"_index":1256,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel(true",{"_index":1292,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selector",{"_index":413,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["selects",{"_index":1322,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["server",{"_index":1743,"title":{},"body":{"index.html":{}}}],["server/app.js",{"_index":1754,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":1174,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/data",{"_index":1175,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/form.service",{"_index":541,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["services/translation.pipe",{"_index":1173,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["services/translation.service",{"_index":542,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["set",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["set('authorization",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["set('charset",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["set('content",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["set(allactionswithduplicates",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setallowedactions",{"_index":961,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setallowedactions(value",{"_index":969,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser",{"_index":962,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser(value",{"_index":971,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setisloggedin(value",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setlang",{"_index":1513,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setlang(lang",{"_index":1522,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath",{"_index":1514,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath(path",{"_index":1524,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setupconfig",{"_index":432,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setupconfig(config",{"_index":501,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setvalid",{"_index":999,"title":{},"body":{"injectables/DialogService.html":{}}}],["setvalid(positivecallback",{"_index":1013,"title":{},"body":{"injectables/DialogService.html":{}}}],["shouldnavbarbevisible",{"_index":975,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showactions",{"_index":1273,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showasobject",{"_index":1773,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["showcheckbox",{"_index":1272,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showcsvexport",{"_index":1274,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showdataimporterrordialog",{"_index":1000,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdataimporterrordialog(errordataarray",{"_index":1015,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdeleteallbutton",{"_index":1275,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showerrordialog",{"_index":1001,"title":{},"body":{"injectables/DialogService.html":{}}}],["showerrordialog(errormsg",{"_index":1019,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog",{"_index":1002,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog(infomsg",{"_index":1021,"title":{},"body":{"injectables/DialogService.html":{}}}],["showlabels",{"_index":78,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["shownavbar",{"_index":963,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["shownavbar(shouldnavbarbevisible",{"_index":973,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showpaginator",{"_index":1271,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showthumb",{"_index":1249,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showtitle",{"_index":80,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["sicher",{"_index":799,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["sie",{"_index":798,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["simple",{"_index":1046,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple'},{'name",{"_index":634,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["simple.component",{"_index":1030,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["simple.component.html",{"_index":1048,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.less",{"_index":1047,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts",{"_index":1045,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simple.component.ts:11",{"_index":1052,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:12",{"_index":1049,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:15",{"_index":1051,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:20",{"_index":1050,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple/error",{"_index":1029,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["simple/info",{"_index":1032,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simplechanges",{"_index":1260,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sind",{"_index":797,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["size",{"_index":819,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["slide",{"_index":1428,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slider",{"_index":1430,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":645,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slider.component.html",{"_index":1432,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider.component.scss",{"_index":1431,"title":{},"body":{"components/SliderComponent.html":{}}}],["slidercomponent",{"_index":644,"title":{"components/SliderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slidetoggle",{"_index":1420,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle'},{'name",{"_index":647,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slidetoggle.component.html",{"_index":1422,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle.component.scss",{"_index":1421,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetogglecomponent",{"_index":646,"title":{"components/SlideToggleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort",{"_index":1303,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sortkeys.foreach((key",{"_index":941,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["split",{"_index":942,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["split.length",{"_index":954,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["src",{"_index":1204,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["srcresult",{"_index":1069,"title":{},"body":{"components/FileInputComponent.html":{}}}],["start",{"_index":808,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"index.html":{}}}],["started",{"_index":1734,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["statischen",{"_index":1225,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["step",{"_index":1205,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{}}}],["step(object",{"_index":926,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["store.service",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store.service.ts",{"_index":956,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:11",{"_index":977,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:12",{"_index":964,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:17",{"_index":974,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":968,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:25",{"_index":967,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:29",{"_index":972,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:33",{"_index":965,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:37",{"_index":970,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:9",{"_index":979,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["stored",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["storedallowedactions",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["storeduserprofile",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["string(this.data.errormsg",{"_index":1056,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["string(this.data.infomsg",{"_index":1394,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["structure",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["styles",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["styleurls",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["sub",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl",{"_index":753,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl.push(value.name",{"_index":758,"title":{},"body":{"injectables/ConfigService.html":{}}}],["submit",{"_index":1211,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["subtask.name",{"_index":710,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["successful",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["super(fb",{"_index":707,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["super.ngoninit",{"_index":708,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["support",{"_index":1765,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1012,"title":{},"body":{"injectables/DialogService.html":{}}}],["svg",{"_index":1766,"title":{},"body":{"modules.html":{}}}],["symbols",{"_index":229,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["synchronizevalidator",{"_index":433,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["systemaction",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemresource",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemrole",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1279,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":649,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["table.component.html",{"_index":1289,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1290,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tablecomponent",{"_index":648,"title":{"components/TableComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["tabletype",{"_index":1267,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tap",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(resp",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["target",{"_index":226,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":417,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["templateurl",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["test",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["text",{"_index":474,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["text/csv;charset=utf8",{"_index":158,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["textinputcomponent",{"_index":650,"title":{"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this._isloggedin",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._options",{"_index":131,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.decimalseparator",{"_index":198,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.fieldseparator",{"_index":184,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename",{"_index":133,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename.replace",{"_index":160,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers",{"_index":194,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers.length",{"_index":180,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nodownload",{"_index":154,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nulltoemptystring",{"_index":208,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.objheader[key",{"_index":188,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.quotestrings",{"_index":204,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.showtitle",{"_index":143,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.title",{"_index":144,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.usebom",{"_index":140,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.useobjheader",{"_index":146,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._path",{"_index":1541,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this._path}${lang",{"_index":1563,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.adduser(user).subscribe(adduserres",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["this.allowedactions",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.allowedactions.next(value",{"_index":983,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.allowedactions[systemresource",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.apibaseurl",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.autocomplete",{"_index":595,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.collumnstobedisplayed",{"_index":1336,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.control",{"_index":543,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.dirty",{"_index":548,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.disable",{"_index":597,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors",{"_index":545,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors.hasownproperty(error",{"_index":546,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors[error",{"_index":550,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.touched",{"_index":547,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.valuechanges.subscribe(val",{"_index":564,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.csv",{"_index":141,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.currentuser",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.currentuser.next(value",{"_index":982,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.currentuser.roles",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.customfilterbasedondisplaycolumns(data",{"_index":1345,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data",{"_index":128,"title":{},"body":{"classes/AngularCsv.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.data.errormsg",{"_index":1053,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.data.icon",{"_index":793,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.data.infomsg",{"_index":1391,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.data.length",{"_index":1355,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data.message",{"_index":795,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.data[i",{"_index":196,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[i][index",{"_index":197,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[key",{"_index":1559,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.datachange.value",{"_index":764,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.datasource.data",{"_index":1329,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filter",{"_index":1307,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.filter(item",{"_index":1366,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.foreach(row",{"_index":1327,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.length",{"_index":1321,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1343,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator",{"_index":1347,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":1357,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sort",{"_index":1349,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datastore.getallowedactions().subscribe((actions",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.getcurrentuser().subscribe((user",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(actionresp['actions",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(null",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(storedallowedactions",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(null",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(profile",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(storeduserprofile",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.delete.emit(row",{"_index":1363,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.deletebulk.emit(filtereddatasource",{"_index":1368,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1041,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(errordialogsimplecomponent",{"_index":1038,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(infodialogsimplecomponent",{"_index":1039,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(matdialog",{"_index":1035,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogref.disableclose",{"_index":792,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.dialogservice.showerrordialog('error",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.disabled",{"_index":574,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.displayedcolumns.filter((column",{"_index":1340,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.map(header",{"_index":1337,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.push({collumnname",{"_index":1335,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.unshift({collumnname",{"_index":1332,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.download.emit(row",{"_index":1361,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.edit.emit(row",{"_index":1359,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.errormsg",{"_index":1055,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.field",{"_index":554,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.filtercontrol.patchvalue",{"_index":1356,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.flatcontrolls",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.form",{"_index":559,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.formatdata(this.data[i][index",{"_index":195,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.formatdata(this.data[i][key",{"_index":193,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.fs.addfield(this",{"_index":562,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname",{"_index":555,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname(this.name).options",{"_index":1416,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.fs.getform(this.field.name",{"_index":560,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getformcontrol(this.field",{"_index":561,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.generatecsv",{"_index":134,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbody",{"_index":152,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbodyaccordingheader",{"_index":150,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getdisplaydata(columns",{"_index":1385,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getfiltereddisplaydata(columns",{"_index":1387,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getheaderfromobj",{"_index":149,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getheaders",{"_index":151,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getmeesage(error",{"_index":549,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getname",{"_index":612,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getuseractions",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuserprofile",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getvalue",{"_index":613,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.headers",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["this.headers.set('usemockup",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hint",{"_index":566,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.hintlabel",{"_index":568,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.htmltype",{"_index":589,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.http.delete('/api",{"_index":892,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete('/api/logout",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(`/api/user/${user.id",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.url",{"_index":896,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get('/api",{"_index":891,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get('/api/user",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/user",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/user/${userid",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(langpath).subscribe",{"_index":1548,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.http.get(this.apibaseurl",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.url",{"_index":893,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post",{"_index":880,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post('/api/login",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post('/api/user",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.url",{"_index":894,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(url",{"_index":897,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put",{"_index":883,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put(`/api/user/${user.id",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`/api/user//${user.id",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["this.icon",{"_index":794,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.iconaction.emit",{"_index":611,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.iconbtn",{"_index":591,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.infomsg",{"_index":1393,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.init",{"_index":563,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.initialcolumns",{"_index":1339,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isallselected",{"_index":1326,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isloggedin",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.lang",{"_index":1540,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.loadallowedactions",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loaduserprofile",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.max",{"_index":580,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.maxlength",{"_index":584,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.message",{"_index":796,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.min",{"_index":582,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.minlength",{"_index":586,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.msgerrors[type](param",{"_index":553,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.name",{"_index":557,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.navbarvisibility",{"_index":981,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navbarvisibility.next(shouldnavbarbevisible",{"_index":980,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navigatetologinpage",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ondatachange.emit(this.data",{"_index":1552,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.ondatachange.subscribe(val",{"_index":1537,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.emit(this.lang",{"_index":1561,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.subscribe(val",{"_index":1539,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.options",{"_index":1415,"title":{},"body":{"components/SelectComponent.html":{},"injectables/UserService.html":{}}}],["this.paginator",{"_index":1348,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.placeholder",{"_index":556,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.registerallowedactions",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.registercurrentuser",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.required",{"_index":573,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.resultslength",{"_index":1354,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.router.navigate(['login",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveallowedactions(actions",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveuserprofile(user",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.selection.clear",{"_index":1310,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.select(row",{"_index":1328,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.indexof(item",{"_index":1367,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.length",{"_index":1319,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.setupconfig(this.field",{"_index":558,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.sort",{"_index":1350,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.srcresult",{"_index":1084,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.synchronizevalidator",{"_index":598,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.translate.data[key",{"_index":1506,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.ts.data[this.value",{"_index":599,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.ts.transform(header.collumnkey",{"_index":1377,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.updatedata(translation",{"_index":1551,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updatedata(val",{"_index":1538,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updateroles(user",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateroles(user).subscribe(updateroleresp",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["this.use(this.lang",{"_index":1560,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userdata",{"_index":1556,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userservice.getuserprofile().subscribe((profile:any",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.getuserroles().subscribe((actionresp",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.login(usernameandpassword).pipe",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.logout().subscribe(null",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validators",{"_index":575,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.email",{"_index":609,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.pattern",{"_index":607,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.value",{"_index":565,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.viewoptions.showactions",{"_index":1334,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showcheckbox",{"_index":1331,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showdeleteallbutton",{"_index":1330,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["throw",{"_index":220,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["throwerror",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throwerror(errobj",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["timer",{"_index":876,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["timer(2000).pipe",{"_index":900,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["title",{"_index":81,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["tmpdata",{"_index":760,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tmpdis",{"_index":572,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["tmpreq",{"_index":571,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["todo",{"_index":1276,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["toggle",{"_index":1188,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["toobject",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toobject(target",{"_index":228,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["toobject(val",{"_index":216,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":453,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["tooltipdelay",{"_index":1207,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["tooltipposition",{"_index":1206,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["total",{"_index":1315,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["transform",{"_index":1497,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["transform(key",{"_index":1498,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translate",{"_index":709,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{}}}],["translatepipe",{"_index":1101,"title":{"pipes/TranslatePipe.html":{}},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["translation",{"_index":1549,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translation.service",{"_index":1501,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translationservice",{"_index":458,"title":{"injectables/TranslationService.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":407,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["ts",{"_index":423,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"miscellaneous/functions.html":{}}}],["ts.onlangchange.subscribe(lang",{"_index":995,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ts:translationservice",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":189,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["txt",{"_index":865,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["txtbooth",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["txtfile",{"_index":1554,"title":{},"body":{"injectables/TranslationService.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["typeerror",{"_index":221,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["typeof",{"_index":129,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ufeff",{"_index":92,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["ui",{"_index":1026,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"pipes/TranslatePipe.html":{},"miscellaneous/functions.html":{}}}],["unflatten",{"_index":905,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["unflatten(target",{"_index":916,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["update",{"_index":853,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["update(id",{"_index":872,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["updatedata",{"_index":1515,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updatedata(data",{"_index":1526,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updateon",{"_index":1209,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["updateroles",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(user",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":1485,"title":{},"body":{"components/TableComponent.html":{}}}],["uri",{"_index":164,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["url",{"_index":847,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["url.createobjecturl(blob",{"_index":171,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["use",{"_index":1516,"title":{},"body":{"injectables/TranslationService.html":{},"index.html":{}}}],["use(lang",{"_index":1528,"title":{},"body":{"injectables/TranslationService.html":{}}}],["usebom",{"_index":82,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":912,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["useful",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["useheader",{"_index":86,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["useobjheader",{"_index":85,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user.id",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user/profile",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["user/role",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata",{"_index":1510,"title":{},"body":{"injectables/TranslationService.html":{}}}],["userid",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usernameandpassword",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userprofile",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":255,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":1194,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["utf",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["util",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":217,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["val:any",{"_index":214,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["valid",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validation",{"_index":537,"title":{},"body":{"components/BaseFieldComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validation.ts",{"_index":1214,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["validatorfn",{"_index":1203,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validators",{"_index":454,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["valide",{"_index":528,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value['actions",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["var",{"_index":619,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["variable",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1777,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1740,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1250,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["vertical_align_bottom",{"_index":1479,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild",{"_index":1261,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matpaginator",{"_index":1300,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matsort",{"_index":1302,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewoptions",{"_index":1299,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["von",{"_index":1224,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["werten",{"_index":1226,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["whether",{"_index":1311,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["width",{"_index":1043,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["widthinpercentage",{"_index":1255,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["withcredentials",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["word",{"_index":1063,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["works",{"_index":1090,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["wurde",{"_index":524,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["wählen",{"_index":1418,"title":{},"body":{"components/SelectComponent.html":{}}}],["xmlexport",{"_index":1003,"title":{},"body":{"injectables/DialogService.html":{}}}],["xmlexport(positivecallback",{"_index":1024,"title":{},"body":{"injectables/DialogService.html":{}}}],["yes",{"_index":39,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{}}}],["zeichen",{"_index":515,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["zone.js",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1102,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AngularCsv.html":{"url":"classes/AngularCsv.html","title":"class - AngularCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                labels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Private\n                                generateCsv\n                            \n                            \n                                getBody\n                            \n                            \n                                getBodyAccordingHeader\n                            \n                            \n                                getCsvData\n                            \n                            \n                                getHeaderFromObj\n                            \n                            \n                                getHeaders\n                            \n                            \n                                    Static\n                                isFloat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(DataJSON: any, filename: string, options?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DataJSON\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:218\n                \n            \n\n\n            \n                \n                    Format Data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCsv\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCsv()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:88\n                \n            \n\n\n            \n                \n                    Generate and Download Csv\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:191\n                \n            \n\n\n            \n                \n                    Create Body\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBodyAccordingHeader\n                        \n                    \n                \n            \n            \n                \ngetBodyAccordingHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:170\n                \n            \n\n\n            \n                \n                    Create Body according to obj header\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCsvData\n                        \n                    \n                \n            \n            \n                \ngetCsvData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaderFromObj\n                        \n                    \n                \n            \n            \n                \ngetHeaderFromObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:156\n                \n            \n\n\n            \n                \n                    Create Header from Object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:142\n                \n            \n\n\n            \n                \n                    Create Headers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFloat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFloat(input: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:81\n                \n            \n\n\n            \n                \n                    Check if is Float\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isLoggedIn\n                            \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                bla\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfUserIsAlreadyLoggedIn\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                    Public\n                                handleSessionTimeout\n                            \n                            \n                                loadUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                navigateToLoginPage\n                            \n                            \n                                registerAllowedActions\n                            \n                            \n                                registerCurrentUser\n                            \n                            \n                                saveUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, dataStore: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataStore\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAlreadyLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAlreadyLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:138\n                \n            \n\n\n            \n                \n                    Checks currently only if the userProfile is stored locally\nFIXME: An additional test for a valid cookie would be more useful.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleSessionTimeout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSessionTimeout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:127\n                \n            \n\n\n            \n                \n                    Removes Authentication Informations from Localstorage\nand navigates to the loginpage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserProfile\n                        \n                    \n                \n            \n            \n                \nloadUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(navigateToLoginpage: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    navigateToLoginpage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLoginPage\n                        \n                    \n                \n            \n            \n                \nnavigateToLoginPage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAllowedActions\n                        \n                    \n                \n            \n            \n                \nregisterAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerCurrentUser\n                        \n                    \n                \n            \n            \n                \nregisterCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(userProfile: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bla\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'txtBooth-user'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:185\n                                \n                            \n\n                \n                    \n                        setisLoggedIn(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:189\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DataStoreService } from './data-store.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private _isLoggedIn = false;\n  bla = 'txtBooth-user';\n\n  private currentUser: {\n    id?: string;\n    name?: string;\n    email?: string;\n\n  };\n  private allowedActions: Object;\n\n  constructor(private router: Router,\n    private userService: UserService,\n    private dataStore: DataStoreService\n  ) {\n\n    this.registerCurrentUser();\n    this.registerAllowedActions();\n\n    const storedUserProfile = this.loadUserProfile();\n   //const storedAllowedActions = this.loadAllowedActions();\n\n    if (!!storedUserProfile) {\n      this.dataStore.setCurrentUser(storedUserProfile);\n    }\n/*\n    if (!!storedAllowedActions) {\n      this.dataStore.setAllowedActions(storedAllowedActions);\n    }\n*/\n  }\n/*\n  hasAvailableAction(systemResource: SystemResource, systemAction: SystemAction) {\n    if (systemResource && systemAction && this.allowedActions && systemResource in this.allowedActions) {\n      const roles: Object = this.allowedActions[systemResource];\n      const allActionsWithDuplicates = Object.values(roles)\n        .reduce((previousValue, currentValue) => {\n          return previousValue.concat(currentValue);\n        });\n      const availableActions = Array.from(new Set(allActionsWithDuplicates)); // [C, C, R, R, U] => [C, R, U]\n      if (!!availableActions && availableActions.indexOf(systemAction) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasRole(systemRole: SystemRole) {\n    if (!systemRole || !this.currentUser) {\n      return false;\n    }\n\n    const currentUserRoles: string[] = this.currentUser.roles;\n    if (currentUserRoles.indexOf(systemRole) >= 0) {\n      return true;\n    }\n    return false;\n  }\n*/\n  login(username: string, password: string): Observable {\n    const usernameAndPassword = username + ':' + password;\n\n    return this.userService.login(usernameAndPassword).pipe(\n      tap(resp => {\n        // console.log('[authenticationService] - login successful', resp);\n        this.isLoggedIn = true;\n      }),\n      tap(() => {\n        this.getUserProfile();\n      }),\n      tap(() => {\n        //this.getUserActions();\n      })\n    );\n  }\n\n  getUserProfile() {\n    this.userService.getUserProfile().subscribe((profile:any) => {\n      // console.log('[AuthenticationService] - getUserProfile', profile);\n      this.dataStore.setCurrentUser(profile);\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n/*\n  getUserActions() {\n    this.userService.getUserRoles().subscribe((actionResp: Object) => {\n      if (actionResp.hasOwnProperty('actions')) {\n        // console.log('[AuthenticationService] - getUserActions', actionResp);\n        this.dataStore.setAllowedActions(actionResp['actions']);\n      } else {\n        this.dataStore.setAllowedActions(null);\n      }\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n*/\n  public logout(navigateToLoginpage: boolean = true): void {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n\n    this.userService.logout().subscribe(null, null, () => {\n      if (navigateToLoginpage) {\n        this.navigateToLoginPage();\n      }\n    });\n  }\n\n  /**\n   * Removes Authentication Informations from Localstorage\n   * and navigates to the loginpage.\n   */\n  public handleSessionTimeout() {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    this.navigateToLoginPage();\n  }\n\n  /**\n   * Checks currently only if the userProfile is stored locally\n   * FIXME: An additional test for a valid cookie would be more useful.\n   */\n  checkIfUserIsAlreadyLoggedIn(): boolean {\n    const storedUserProfile = this.loadUserProfile();\n    const storedAllowedActions = true ; //his.loadAllowedActions();\n\n    if (!!storedUserProfile && !!storedAllowedActions) {\n      this.isLoggedIn = true;\n      this.dataStore.setCurrentUser(storedUserProfile);\n      // this.dataStore.setAllowedActions(storedAllowedActions);\n      return true;\n    }\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    return false;\n  }\n\n  navigateToLoginPage() {\n    this.router.navigate(['login']);\n  }\n\n  loadUserProfile(): any {\n    let res = localStorage.getItem(this.bla);\n      return JSON.parse(res != null? res : '') as any;\n  }\n\n  saveUserProfile(userProfile: any): void {\n    // console.log('saveUserProfile', userProfile);\n    if (!!userProfile) {\n      localStorage.setItem('txtBooth-user', JSON.stringify(userProfile));\n    } else {\n      localStorage.removeItem('txtBooth-user');\n    }\n  }\n/*\n  loadAllowedActions(): any {\n    return JSON.parse(localStorage.getItem(this.USER_ALLOWED_ACTIONS));\n  }\n\n  saveAllowedActions(actions: any): void {\n    // console.log('saveAllowedActions', actions);\n    if (!!actions && Object.keys(actions).length > 0) {\n      localStorage.setItem(this.USER_ALLOWED_ACTIONS, JSON.stringify(actions));\n    } else {\n      localStorage.removeItem(this.USER_ALLOWED_ACTIONS);\n    }\n  }\n*/\n  get isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n\n  set isLoggedIn(value: boolean) {\n    this._isLoggedIn = value;\n  }\n\n  registerCurrentUser() {\n    this.dataStore.getCurrentUser().subscribe((user: any) => {\n      this.currentUser = user;\n      this.saveUserProfile(user);\n    });\n  }\n\n  registerAllowedActions() {\n    this.dataStore.getAllowedActions().subscribe((actions: Object) => {\n      this.allowedActions = actions;\n      //this.saveAllowedActions(actions);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoSearch.html":{"url":"classes/AutoSearch.html","title":"class - AutoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoSearch[] | string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFieldComponent.html":{"url":"components/BaseFieldComponent.html","title":"component - BaseFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/classes/field.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    IField\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                field\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                            \n                                    Public\n                                ts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { IField, IHTMLAttributes } from '../interfaces/ifield';\nimport { ICustomValidation } from '../interfaces/icustom-validation';\nimport { IValidator } from '../interfaces/ivalidator';\nimport { EventEmitter, Input, OnInit, Component, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { FormService } from '../services/form.service';\nimport { TranslationService } from '../services/translation.service';\n\n@Component({\n  selector: 'app-base-field',\n  template: ''\n})\nexport class BaseFieldComponent implements IField, OnInit {\n  private readonly MSGerrors = {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  };\n\n  @Input() name = 'home_ui_new';\n\n  @Input() value = '';\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() minLength: number;\n  @Input() maxLength: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() required: boolean;\n  @Input() form: FormGroup;\n  @Input() control: FormControl;\n  @Input() hintlabel = '';\n  @Input() hint = '';\n  @Input() tooltip = '';\n  @Input() htmlType = 'text';\n  @Input() iconBtn: string;\n  @Input() iconAction: EventEmitter = new EventEmitter();\n  @Input() validators: IValidator;\n  @Input() customValidation: ICustomValidation[];\n  @Input() htmlAttribute: IHTMLAttributes;\n  @Input() autocomplete = 'on';\n\n  @Input() change: EventEmitter = new EventEmitter();\n  init = true;\n  field: IField;\n\n  constructor(\n    public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService\n  ) {}\n\n  get(): BaseFieldComponent {\n    return this;\n  }\n\n  getErrorMeesage() {\n    if (this.control) {\n      for (const error in this.control.errors) {\n        if (\n          (this.control.errors.hasOwnProperty(error) && this.control.touched) ||\n          this.control.dirty\n        ) {\n          return this.getMeesage(error, this.control.errors[error]);\n        }\n      }\n    }\n  }\n\n  getMeesage(type: string, param: any) {\n    console.log(type);\n\n    if(this.MSGerrors[type](param)) {\n      return this.MSGerrors[type](param);\n    }\n  }\n\n  ngOnInit(): void {\n    this.field = this.fs.getConfigByName(\n      this.placeholder ? this.placeholder : this.name\n    );\n\n    this.setUpConfig(this.field);\n    this.form = this.fs.getForm(this.field.name);\n    this.control = this.fs.getFormControl(this.field);\n    this.fs.addField(this);\n    this.init = false;\n    this.control.valueChanges.subscribe(val => (this.value = val));\n  }\n\n  public setUpConfig(config: IField) {\n    this.hint = config.hint;\n    this.hintlabel = config.hintlabel;\n\n    if (!this.hintlabel) {\n      this.hintlabel = config.name + '#hintlabel';\n    }\n\n    let tmpReq = false;\n    let tmpDis = false;\n\n    if (this.init) {\n      tmpReq = this.required ? this.required : null;\n      tmpDis = this.disabled ? this.disabled : null;\n    }\n\n    this.validators = config.validators;\n    this.disabled = config.disabled ? config.disabled : tmpDis;\n    this.required = config.validators ? config.validators.required : tmpReq;\n    // console.log(this.required);\n\n    this.max = config.validators\n      ? config.validators.max\n      : this.max\n      ? this.max\n      : null;\n    this.min = config.validators\n      ? config.validators.min\n      : this.min\n      ? this.min\n      : null;\n    this.maxLength = config.validators\n      ? config.validators.maxLength\n      : this.maxLength\n      ? this.maxLength\n      : null;\n    this.minLength = config.validators\n      ? config.validators.minLength\n      : this.minLength\n      ? this.minLength\n      : null;\n    this.value = config.value || '';\n    this.htmlType = config.htmlType ? config.htmlType : this.htmlType;\n    this.iconBtn = config.icon? config.icon: this.iconBtn;\n\n    if (config.htmlAttribute && config.htmlAttribute.autocomplete) {\n      this.autocomplete = config.htmlAttribute.autocomplete;\n    }\n    if(this.field.disabled) {\n      this.control.disable();\n    }\n    this.synchronizeValidator();\n  }\n\n  getValue() {\n    return this.ts.data[this.value + '#label'] || this.value;\n  }\n\n  getName() {\n    return this.placeholder ? this.placeholder : this.name;\n  }\n\n  synchronizeValidator() {\n    const newValidators: IValidator = {};\n    if (this.required) {\n      newValidators.required = this.required;\n    }\n    if (this.max) {\n      newValidators.max = this.max;\n    }\n    if (this.min) {\n      newValidators.min = this.min;\n    }\n    if (this.maxLength) {\n      newValidators.maxLength = this.maxLength;\n    }\n    if (this.minLength) {\n      newValidators.minLength = this.minLength;\n    }\n    if (this.validators && this.validators.pattern) {\n      newValidators.pattern = this.validators.pattern;\n    }\n    if (this.validators && this.validators.email) {\n      newValidators.email = this.validators.email;\n    }\n    this.validators = newValidators;\n  }\n\n  getValidators() {\n    return this.validators;\n  }\n\n  getFieldConfig() {\n    return this as IField;\n  }\n  iconAct() {\n    this.iconAction.emit(\n      {\n        name: this.getName(),\n        value: this.getValue(),\n        btn: this.iconBtn\n      }\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'before'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseFieldComponent implements OnInit {\n  @Input() position = 'before';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService\n  ) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ getName() + \"#label\" | translate }}\n  \n\n\n\n  \n    {{ getName() + \"#label\" | translate }}\n  \n  \n    \n      \n        {{ subtask.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getName() + \"#label\" | translate }}        {{ getName() + \"#label\" | translate }}                      {{ subtask.name }}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configs\n                            \n                            \n                                dataChange\n                            \n                            \n                                flatControlls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                buildTree\n                            \n                            \n                                getControlls\n                            \n                            \n                                getFlatControlls\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildFileTree\n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: literal type, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:59\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of AutoSearch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AutoSearch[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTree\n                        \n                    \n                \n            \n            \n                \nbuildTree(config: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlls\n                        \n                    \n                \n            \n            \n                \ngetControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFlatControlls\n                        \n                    \n                \n            \n            \n                \ngetFlatControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatControlls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/config.service.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataFlattnerService } from './data-flattner.service';\nimport { IField } from '../interfaces/ifield';\nimport { MenuNode, AutoSearch } from '../interfaces/imenu';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  flatControlls: any[];\n  dataChange = new BehaviorSubject([]);\n  configs: any;\n\n  constructor(private http: HttpClient) {\n    this.flatControlls = [];\n    // console.log(this.flatControlls);\n  }\n\n  buildTree(config: any) {\n    // console.log(config);\n    const entries = [];\n    for (const page in config) {\n      if (page) {\n        for (const formN in config[page]) {\n          if (config[page][formN]) {\n            const subLvl = [];\n            const form: IField[] = config[page][formN];\n            // console.log(form);\n            for (const [key, value] of Object.entries(form)) {\n              // console.log(`${key}: ${value}`);\n              subLvl.push(value.name);\n              // children.push(value.name);\n            }\n            const tmpData = [\n              {\n                name: formN,\n                children: subLvl\n              }\n            ];\n            entries.push(tmpData);\n          }\n        }\n      }\n    }\n    // DataFlattnerService.flatten(tmpData)\n    // this.flatControlls = tmpData;\n    // console.log(\"newtree\", this.flatControlls);\n  }\n\n  get data(): AutoSearch[] {\n    return this.dataChange.value;\n  }\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `AutoSearch`.\n   */\n  buildFileTree(obj: { [key: string]: any }, level: number): AutoSearch[] {\n    return Object.keys(obj).reduce((accumulator, key) => {\n      const value = obj[key];\n      // console.log(value);\n\n      const node = new AutoSearch();\n      node.name = key;\n      if (value != null) {\n        if (typeof value === 'object' && level \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.less\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'questionmark'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  public icon = 'questionmark';\n  public errorMsg: string[] = [];\n  public message: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.message) {\n      this.message = this.data.message;\n    } else {\n      this.message = 'Sind Sie sicher?';\n    }\n    console.log(this.message);\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Sind Sie sicher?\n\n\n\n\n  {{message | translate}}\n\n\n\n\n  Nein\n  \n  \n  \n    Ja\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.less\n                \n                #confirm-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#confirm-dialog_title > h2 {\n  margin: 0;\n}\n\n#confirm-dialog_message {\n  font-size: 14px;\n}\n\nmat-dialog-content#confirm-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Sind Sie sicher?  {{message | translate}}  Nein          Ja  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvConfigConsts.html":{"url":"classes/CsvConfigConsts.html","title":"class - CsvConfigConsts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvConfigConsts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BOM\n                            \n                            \n                                    Static\n                                DEFAULT_DECIMAL_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FIELD_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FILENAME\n                            \n                            \n                                    Static\n                                DEFAULT_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_NO_DOWNLOAD\n                            \n                            \n                                    Static\n                                DEFAULT_NULL_TO_EMPTY_STRING\n                            \n                            \n                                    Static\n                                DEFAULT_OBJ_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_QUOTE\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_LABELS\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_USE_BOM\n                            \n                            \n                                    Static\n                                DEFAULT_USE_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_USE_OBJ_HEADER\n                            \n                            \n                                    Static\n                                EOL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BOM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\ufeff'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_DECIMAL_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FIELD_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ','\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mycsv.csv'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NO_DOWNLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NULL_TO_EMPTY_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_QUOTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\"'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_LABELS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'My Report'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_BOM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\r\\n'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataConnectorService.html":{"url":"injectables/DataConnectorService.html","title":"injectable - DataConnectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataConnectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteField\n                            \n                            \n                                get\n                            \n                            \n                                getAsyncValidation\n                            \n                            \n                                getFields\n                            \n                            \n                                insertField\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(id)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(itemType: string, id: string, kat: string[], txt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"0\"\n                                    \n\n                                \n                                \n                                    kat\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    txt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsyncValidation\n                        \n                    \n                \n            \n            \n                \ngetAsyncValidation(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFields\n                        \n                    \n                \n            \n            \n                \ngetFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertField\n                        \n                    \n                \n            \n            \n                \ninsertField(field: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataFlattnerService.html":{"url":"injectables/DataFlattnerService.html","title":"injectable - DataFlattnerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataFlattnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flatten\n                            \n                            \n                                    Static\n                                isBuffer\n                            \n                            \n                                    Static\n                                isFlat\n                            \n                            \n                                    Static\n                                unflatten\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    flatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBuffer(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:26\n                \n            \n\n\n            \n                \n                    isBuffer\nused for flatten unflatten\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFlat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFlat(object: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unflatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    unflatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                navbarVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllowedActions\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getNavbarState\n                            \n                            \n                                    Public\n                                setAllowedActions\n                            \n                            \n                                    Public\n                                setCurrentUser\n                            \n                            \n                                    Public\n                                showNavbar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNavbarState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavbarState()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllowedActions(value: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentUser(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showNavbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    showNavbar(shouldNavbarBeVisible: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shouldNavbarBeVisible\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        navbarVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n\n  private navbarVisibility: BehaviorSubject = new BehaviorSubject(true);\n\n  private currentUser: ReplaySubject = new ReplaySubject(1);\n  private allowedActions: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n  }\n\n  public showNavbar(shouldNavbarBeVisible: boolean): void {\n    this.navbarVisibility.next(shouldNavbarBeVisible);\n  }\n\n  public getNavbarState(): BehaviorSubject {\n    return this.navbarVisibility;\n  }\n\n  public getCurrentUser(): ReplaySubject {\n    return this.currentUser;\n  }\n\n  public setCurrentUser(value: any) {\n    this.currentUser.next(value);\n  }\n\n  public getAllowedActions(): ReplaySubject {\n    return this.allowedActions;\n  }\n\n  public setAllowedActions(value: Object): void {\n    this.allowedActions.next(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateInputComponent.html":{"url":"components/DateInputComponent.html","title":"component - DateInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-input\n            \n\n            \n                styleUrls\n                ./date-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, dateAdapter: DateAdapter, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateAdapter\n                                                  \n                                                        \n                                                                    DateAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { DateAdapter } from '@angular/material/core';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss']\n})\nexport class DateInputComponent extends BaseFieldComponent implements OnInit {\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    private dateAdapter: DateAdapter,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n    dateAdapter.setLocale(ts.lang);\n\n    ts.onLangChange.subscribe(lang => dateAdapter.setLocale(lang));\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./date-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                setValid\n                            \n                            \n                                    Public\n                                showDataImportErrorDialog\n                            \n                            \n                                    Public\n                                showErrorDialog\n                            \n                            \n                                    Public\n                                showInfoDialog\n                            \n                            \n                                    Public\n                                xmlExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/dialog.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:79\n                \n            \n\n\n            \n                \n                    messageString may also be an html String like:\nAre you sure?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    setValid(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showDataImportErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDataImportErrorDialog(errorDataArray: any[], afterDialogCallback: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorDataArray\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showErrorDialog(errorMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showInfoDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInfoDialog(infoMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        xmlExport\n                        \n                    \n                \n            \n            \n                \n                    \n                    xmlExport(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from '../ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from '../ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  public showDataImportErrorDialog(errorDataArray: any[],\n    afterDialogCallback: Function\n  ): MatDialogRef {\n\n    const dialogData = {\n      dataImportErrors: errorDataArray\n    };\n\n    const dialogRef = this.dialog.open(MatDialog, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      afterDialogCallback(result);\n    });\n\n    return dialogRef;\n  }\n\n  public showErrorDialog(errorMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      errorMsg: errorMsg\n    };\n\n    const dialogRef = this.dialog.open(ErrorDialogSimpleComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  public showInfoDialog(infoMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      infoMsg: infoMsg\n    };\n\n    const dialogRef = this.dialog.open(InfoDialogSimpleComponent, {\n      data: dialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  /**\n   * messageString may also be an html String like:\n   * Are you sure?\n   *\n   * @param {string} messageString\n   * @param {Function} positiveCallback\n   * @param {Function} negativeCallback\n   */\n  public confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function): void {\n    console.log(messageString);\n\n    const dialogData = {\n      message: messageString\n    };\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result === true) {\n        positiveCallback();\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public xmlExport(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog);\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public setValid(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog, {width: '350px'});\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogSimpleComponent.html":{"url":"components/ErrorDialogSimpleComponent.html","title":"component - ErrorDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-simple\n            \n\n            \n                styleUrls\n                ./error-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog-simple',\n  templateUrl: './error-dialog-simple.component.html',\n  styleUrls: ['./error-dialog-simple.component.less']\n})\nexport class ErrorDialogSimpleComponent implements OnInit {\n\n  public icon = 'error';\n  public errorMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.errorMsg && Array.isArray(this.data.errorMsg)) {\n      this.errorMsg = this.data.errorMsg;\n    } else {\n      this.errorMsg = [String(this.data.errorMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Es ist ein Fehler aufgetreten!\n   1\">Es sind Fehler aufgetreten!\n\n\n\n\n  \n    {{errorMsg | translate}}\n  \n\n\n\n\n  \n    OK\n  \n\n\n    \n\n    \n                \n                    ./error-dialog-simple.component.less\n                \n                \n#error-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#error-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.error-dialog_message {\n  font-size: 14px;\n  word-break: break-all;\n}\n\nmat-dialog-content#error-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Es ist ein Fehler aufgetreten!   1\">Es sind Fehler aufgetreten!      {{errorMsg | translate}}        OK  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-input\n            \n\n            \n                styleUrls\n                ./file-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcResult\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        srcResult\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.scss']\n})\nexport class FileInputComponent extends BaseFieldComponent implements OnInit {\n\n  @Input() srcResult: any;\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.name);\n    // console.log(this.control);\n    // console.log(this.form);\n  }\n\n  onFileSelected() {\n    const inputNode: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined' && typeof (inputNode.files[0]) !== 'undefined') {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        // console.log(e);\n\n        this.srcResult = e.target.result;\n      };\n\n      reader.readAsArrayBuffer(inputNode.files[0]);\n      // console.log(reader);\n\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Choose File\n  \n  \n\n    \n\n    \n                \n                    ./file-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose File    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormbuilderComponent.html":{"url":"components/FormbuilderComponent.html","title":"component - FormbuilderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormbuilderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/formbuilder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-formbuilder\n            \n\n\n\n            \n                template\n                \n  formbuilder works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-formbuilder',\n  template: `\n    \n      formbuilder works!\n    \n  `,\n  styles: [\n  ]\n})\nexport class FormbuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  formbuilder works!'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormbuilderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormbuilderModule.html":{"url":"modules/FormbuilderModule.html","title":"module - FormbuilderModule","body":"\n                   \n\n\n\n\n    Modules\n    FormbuilderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_bootstrap\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            BaseFieldComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            ErrorDialogSimpleComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            InfoDialogSimpleComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            FormbuilderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.module.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { ngModule: typeof FormbuilderModule; providers: {}; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormbuilderComponent } from './formbuilder.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectComponent } from './ui-components/select/select.component';\nimport { TextInputComponent } from './ui-components/text-input/text-input.component';\nimport { DateInputComponent } from './ui-components/date-input/date-input.component';\nimport { FileInputComponent } from './ui-components/file-input/file-input.component';\nimport { AutocompleteComponent } from './ui-components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './ui-components/checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './ui-components/radiobutton/radiobutton.component';\nimport { SliderComponent } from './ui-components/slider/slider.component';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { BaseFieldComponent } from './classes/field';\nimport { TranslatePipe } from './services/translation.pipe';\nimport { TranslationService } from './services/translation.service';\nimport { ConfigService } from './services/config.service';\nimport { DataFlattnerService } from './services/data-flattner.service';\nimport { ConfirmDialogComponent } from './ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from './ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from './ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TableComponent } from './ui-components/table/table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { SlideToggleComponent } from './ui-components/slideToggle/slideToggle.component';\n\nregisterLocaleData(localeDe, 'de');\n\n@NgModule({\n  declarations: [\n    FormbuilderComponent,\n    BaseFieldComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TranslatePipe,\n    ConfirmDialogComponent,\n    ErrorDialogSimpleComponent,\n    InfoDialogSimpleComponent,\n    TableComponent,\n    SlideToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSliderModule,\n    MatSlideToggleModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'de' }\n  ],\n  bootstrap: [FormbuilderComponent],\n  exports: [\n    FormbuilderComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TableComponent,\n    SlideToggleComponent\n  ]\n})\n\nexport class FormbuilderModule {\n\n  static forRoot() {\n    return {\n      ngModule: FormbuilderModule,\n      providers: [\n        TranslationService,\n        ConfigService,\n        DataFlattnerService\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormbuilderService.html":{"url":"injectables/FormbuilderService.html","title":"injectable - FormbuilderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormbuilderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormbuilderService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeEntry.html":{"url":"interfaces/ICodeEntry.html","title":"interface - ICodeEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomValidation.html":{"url":"interfaces/ICustomValidation.html","title":"interface - ICustomValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICustomValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToCheck\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToUpdate\n                                        \n                                \n                                \n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         IDialogConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDialogConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToCheck\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToCheck:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDialogConfig.html":{"url":"interfaces/IDialogConfig.html","title":"interface - IDialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            okAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onCancel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        okAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        okAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onCancel:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IField.html":{"url":"interfaces/IField.html","title":"interface - IField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customValidation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hintlabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlAttribute\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconAction\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipdelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipposition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidatorFn:         AsyncValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AsyncValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customValidation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customValidation:         ICustomValidation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICustomValidation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintlabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hintlabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlAttribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlAttribute:         IHTMLAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHTMLAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconAction:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ICodeEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICodeEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipdelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipdelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipposition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateOn:     \"change\" | \"blur\" | \"submit\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"change\" | \"blur\" | \"submit\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validatorFn:         ValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:         IValidator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IValidator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlatObject.html":{"url":"interfaces/IFlatObject.html","title":"interface - IFlatObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlatObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForm.html":{"url":"interfaces/IForm.html","title":"interface - IForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iform.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            form\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getForm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/interfaces/iform.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        form:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\nimport { IField, IFormObj } from './ifield';\n\nexport interface IForm {\n  form: FormGroup;\n  name: string;\n\n  getForm(name: string): FormGroup;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormObj.html":{"url":"interfaces/IFormObj.html","title":"interface - IFormObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     IFormObj[] | IField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormObj[] | IField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHTMLAttributes.html":{"url":"interfaces/IHTMLAttributes.html","title":"interface - IHTMLAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHTMLAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autocomplete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autocomplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autocomplete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISliderConfig.html":{"url":"interfaces/ISliderConfig.html","title":"interface - ISliderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISliderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inverted\n                                        \n                                \n                                \n                                        \n                                            showThumb\n                                        \n                                \n                                \n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            vertical\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inverted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inverted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showThumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showThumb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertical\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertical:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISliderConfig {\n    step: number;\n    showThumb: boolean;\n    vertical: boolean;\n    inverted: boolean;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableHeader.html":{"url":"interfaces/ITableHeader.html","title":"interface - ITableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collumnKey\n                                        \n                                \n                                \n                                        \n                                            collumnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            widthInPercentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collumnKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collumnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthInPercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widthInPercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableViewOptions.html":{"url":"interfaces/ITableViewOptions.html","title":"interface - ITableViewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableViewOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            searchable\n                                        \n                                \n                                \n                                        \n                                            showActions\n                                        \n                                \n                                \n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                        \n                                            showCSVExport\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDeleteAllButton\n                                        \n                                \n                                \n                                        \n                                            showPaginator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        searchable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showActions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCSVExport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCSVExport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeleteAllButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDeleteAllButton:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidator.html":{"url":"interfaces/IValidator.html","title":"interface - IValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ivalidator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IValidator {\n  required?: boolean;\n  maxLength?: number;\n  minLength?: number;\n  max?: number;\n  min?: number;\n  pattern?: string;\n  email?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogSimpleComponent.html":{"url":"components/InfoDialogSimpleComponent.html","title":"component - InfoDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog-simple\n            \n\n            \n                styleUrls\n                ./info-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                infoMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'info'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-info-dialog-simple',\n  templateUrl: './info-dialog-simple.component.html',\n  styleUrls: ['./info-dialog-simple.component.less']\n})\nexport class InfoDialogSimpleComponent implements OnInit {\n\n  public icon = 'info';\n  public infoMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.infoMsg && Array.isArray(this.data.infoMsg)) {\n      this.infoMsg = this.data.infoMsg;\n    } else {\n      this.infoMsg = [String(this.data.infoMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Information\n\n\n\n\n  \n    \n                   {{infoMsg | translate}}\n    \n  \n\n\n\n\n  OK\n\n\n    \n\n    \n                \n                    ./info-dialog-simple.component.less\n                \n                \n#info-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#info-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.info-dialog_message {\n  font-size: 14px;\n  height: 20px;\n  padding: 0;\n  word-break: break-all;\n}\n\nmat-dialog-content#info-dialog_content {\n  padding-left: 50px !important;\n  padding-right: 50px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Information                         {{infoMsg | translate}}        OK'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuNode.html":{"url":"interfaces/MenuNode.html","title":"interface - MenuNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MenuNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decimalseparator\n                                        \n                                \n                                \n                                        \n                                            fieldSeparator\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            noDownload\n                                        \n                                \n                                \n                                        \n                                            nullToEmptyString\n                                        \n                                \n                                \n                                        \n                                            objHeader\n                                        \n                                \n                                \n                                        \n                                            quoteStrings\n                                        \n                                \n                                \n                                        \n                                            showLabels\n                                        \n                                \n                                \n                                        \n                                            showTitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            useBom\n                                        \n                                \n                                \n                                        \n                                            useHeader\n                                        \n                                \n                                \n                                        \n                                            useObjHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decimalseparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimalseparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldSeparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldSeparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullToEmptyString\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nullToEmptyString:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objHeader:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quoteStrings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quoteStrings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTitle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useBom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useObjHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useObjHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadiobuttonComponent.html":{"url":"components/RadiobuttonComponent.html","title":"component - RadiobuttonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadiobuttonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-radiobutton\n            \n\n            \n                styleUrls\n                ./radiobutton.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radiobutton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  styleUrls: ['./radiobutton.component.scss']\n})\nexport class RadiobuttonComponent extends BaseFieldComponent implements OnInit {\n  @Input() options: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n  {{ getName()+'#label' | translate }}\n    \n    \n      \n        {{item.key}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./radiobutton.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ getName()+\\'#label\\' | translate }}                      {{item.key}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadiobuttonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { TranslationService } from '../../services/translation.service';\n\n\n\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent extends BaseFieldComponent implements OnInit {\n  @Input() options?: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.options = this.fs.getConfigByName(this.name).options? this.fs.getConfigByName(this.name).options : this.options;\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Bitte Wählen...\n      \n        {{item.key | translate}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitte Wählen...              {{item.key | translate}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideToggleComponent.html":{"url":"components/SlideToggleComponent.html","title":"component - SlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slidetoggle\n            \n\n            \n                styleUrls\n                ./slideToggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slideToggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slidetoggle',\n  templateUrl: './slideToggle.component.html',\n  styleUrls: ['./slideToggle.component.scss']\n})\nexport class SlideToggleComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n  @Input() color: string;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n        Slide me!\n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slideToggle.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Slide me!            {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider\n            \n\n            \n                styleUrls\n                ./slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slider.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collumnsToBeDisplayed\n                            \n                            \n                                filterControl\n                            \n                            \n                                initialColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                resultsLength\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                csvExport\n                            \n                            \n                                customFilterBasedOnDisplayColumns\n                            \n                            \n                                getDisplayData\n                            \n                            \n                                getFilteredDisplayData\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteRecord\n                            \n                            \n                                onDeleteSelectedRecords\n                            \n                            \n                                onDownload\n                            \n                            \n                                onEdit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                viewOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                delete\n                            \n                            \n                                deleteBulk\n                            \n                            \n                                download\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ts: TranslatePipe)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         ITableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewOptions\n                    \n                \n                \n                    \n                        Type :         ITableViewOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:59\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteBulk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        csvExport\n                        \n                    \n                \n            \n            \n                \ncsvExport()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFilterBasedOnDisplayColumns\n                        \n                    \n                \n            \n            \n                \ncustomFilterBasedOnDisplayColumns(data: any, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayData\n                        \n                    \n                \n            \n            \n                \ngetDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredDisplayData\n                        \n                    \n                \n            \n            \n                \ngetFilteredDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:79\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:86\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteRecord\n                        \n                    \n                \n            \n            \n                \nonDeleteRecord(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteSelectedRecords\n                        \n                    \n                \n            \n            \n                \nonDeleteSelectedRecords()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDownload\n                        \n                    \n                \n            \n            \n                \nonDownload(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collumnsToBeDisplayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    vertical_align_bottom\n  \n  \n  \n\n\n  \n    \n      \n        {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}\n      \n      \n        {{ element[collumn.collumnName] }}\n      \n    \n  \n\n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n    \n    \n      \n        delete_forever\n      \n      \n        edit\n      \n      \n        get_app\n      \n    \n  \n\n  \n  \n\n\n\n  \n    File Upload\n  \n\n  \n  \n    Löschen\n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                table {\n  width: 100%;\n}\n.row {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-bottom: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              vertical_align_bottom                          {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}                    {{ element[collumn.collumnName] }}                                                                                delete_forever                    edit                    get_app                      File Upload          Löschen  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputComponent.html":{"url":"components/TextInputComponent.html","title":"component - TextInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-input\n            \n\n            \n                styleUrls\n                ./text-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rows\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent extends BaseFieldComponent implements OnInit {\n  @Input() rows = 3;\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.control);\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n      \n        {{ iconBtn }}\n      \n    \n      {{iconBtn}}\n     -->\n    {{ hint }}\n    \n      {{ getErrorMeesage() }}\n    \n  \n  \n    \n      \n  {{ hint }}\n  \n    {{ getErrorMeesage() }}\n  \n\n\n\n    \n\n    \n                \n                    ./text-input.component.scss\n                \n                mat-form-field {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ iconBtn }}                {{iconBtn}}     -->    {{ hint }}          {{ getErrorMeesage() }}                    {{ hint }}      {{ getErrorMeesage() }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TranslatePipe.html":{"url":"pipes/TranslatePipe.html","title":"pipe - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        translate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(key: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: TranslationService) { }\n  transform(key: any): any {\n    // console.log(key);\n    if(key !== 'undefined') {\n// console.log(this.translate.data);\n\n      return this.translate.data[key] || '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _path\n                            \n                            \n                                data\n                            \n                            \n                                lang\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTxtFile\n                            \n                            \n                                getUserData\n                            \n                            \n                                setLang\n                            \n                            \n                                setPath\n                            \n                            \n                                updateData\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTxtFile\n                        \n                    \n                \n            \n            \n                \naddTxtFile(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPath\n                        \n                    \n                \n            \n            \n                \nsetPath(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'de'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onLangChange: EventEmitter = new EventEmitter();\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onDataChange: EventEmitter = new EventEmitter();\n\n  data: any = {};\n  lang = 'de';\n  userData = {};\n\n  private _path = '';\n  constructor(private http: HttpClient) {\n    this.onDataChange.subscribe(val => {\n      this.updateData(val);\n    });\n    this.onLangChange.subscribe(val => {\n      this.lang = val;\n    });\n  }\n\n  setPath(path: string) {\n    this._path = path;\n  }\n\n  addTxtFile(path: string) {\n    return new Promise((resolve, reject) => {\n      const langPath = `${path}${this.lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.updateData(translation);\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          resolve(this.data);\n        }\n      );\n    });\n  }\n\n  getUserData() {\n    let txtFile = {};\n    for(const key in this.userData) {\n      if(this.userData) {\n        Object.assign(txtFile, {\n          [key]: this.data[key]\n        });\n      }\n    }\n    return txtFile;\n  }\n\n  setLang(lang: string) {\n    this.lang = lang;\n    this.use(this.lang);\n    this.onLangChange.emit(this.lang);\n  }\n\n  updateData(data: any) {\n    Object.assign(this.data, data);\n    // this.onDataChange.emit(this.data);\n  }\n\n  use(lang: string): Promise {\n    return new Promise((resolve, reject) => {\n      const langPath = `${this._path}${lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.data = Object.assign({}, translation || {});\n          this.lang = lang;\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiBaseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                headers\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                addUserAndRoles\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                editUserAndRoles\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                searchUsers\n                            \n                            \n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogService: DialogService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserAndRoles\n                        \n                    \n                \n            \n            \n                \naddUserAndRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReplaySubject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserAndRoles\n                        \n                    \n                \n            \n            \n                \neditUserAndRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets current users profile.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the allowed actions of the current user\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:71\n                \n            \n\n\n            \n                \n                    get all users\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(search: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRoles\n                        \n                    \n                \n            \n            \n                \nupdateRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {headers: this.headers}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { DialogService } from './dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8');\n\n  private options: Object = {headers: this.headers};\n\n  private readonly apiBaseUrl: string;\n\n  constructor(private http: HttpClient,\n    private dialogService: DialogService\n  ) {\n    this.apiBaseUrl = '/api';\n  }\n\n  login(credentials: any): Observable {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Charset', 'UTF-8')\n      .set('Authorization', 'Basic ' + btoa(credentials));\n\n    const options: Object = {\n      headers: headers,\n      observe: 'response',\n      withCredentials: true\n    };\n    return this.http.post('/api/login', null, options);\n  }\n\n  logout(): Observable {\n    this.options = {headers: this.headers};\n    return this.http.delete('/api/logout', this.options);\n  }\n\n  /**\n   * Gets current users profile.\n   */\n  getUserProfile(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/profile`, options);\n\n    return this.http.get(`/api/user`, this.options);\n  }\n\n  /**\n   * Get the allowed actions of the current user\n   */\n  getUserRoles(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/role`, options)\n    //   .pipe(\n    //     map(value => value['actions'])\n    //   );\n    return this.http.get('/api/user', this.options);\n  }\n\n  /**\n   * get all users\n   */\n  getUsers(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    return this.http.get('/api/user', this.options);\n  }\n\n  getUser(userId: number): Observable {\n    return this.http.get(`/api/user/${userId}`, this.options);\n  }\n\n  addUser(user: any): Observable {\n    return this.http.post('/api/user/', JSON.stringify(user), this.options);\n  }\n\n  addUserAndRoles(user: any): ReplaySubject {\n    // check if bkuUser already exists\n    const done = new ReplaySubject(1);\n    this.addUser(user).subscribe(addUserRes => {\n      user.id = addUserRes.id;\n      this.updateRoles(user).subscribe(updateRoleResp => done.next(updateRoleResp));\n    }, error => {\n      this.dialogService.showErrorDialog('Error');\n    });\n    return done;\n  }\n\n  editUser(user: any): Observable {\n    return this.http.put(`/api/user/${user.id}`, JSON.stringify(user), this.options);\n  }\n\n  editUserAndRoles(user: any): Observable {\n    return forkJoin(this.editUser(user), this.updateRoles(user));\n  }\n\n  deleteUser(user: any): Observable {\n    return this.http.delete(`/api/user/${user.id}`, this.options);\n  }\n\n  updateRoles(user: any) {\n    const rolesObject = {\n      'roles': user.roles\n    };\n    return this.http.put(`/api/user//${user.id}`, JSON.stringify(rolesObject), this.options);\n  }\n\n  searchUsers(search: string) {\n    return this.http.get(\n      '/api/user?partlastname=' + search,\n      this.options\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            AngularCsv\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            CsvConfigConsts\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            objectAssign\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            toObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            ConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            hasOwnProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            propIsEnumerable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/field.ts\n            \n            component\n            BaseFieldComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.component.ts\n            \n            component\n            FormbuilderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.service.ts\n            \n            injectable\n            FormbuilderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n            \n            interface\n            optionsConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            ICustomValidation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            IDialogConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            ICodeEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IField\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IFormObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IHTMLAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iform.ts\n            \n            interface\n            IForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            class\n            AutoSearch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            interface\n            MenuNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n            \n            interface\n            ISliderConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ivalidator.ts\n            \n            interface\n            IValidator\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            injectable\n            DataConnectorService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            interface\n            searchObj\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            injectable\n            DataFlattnerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            interface\n            IFlatObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            function\n            difference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.pipe.ts\n            \n            pipe\n            TranslatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            function\n            checkKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            variable\n            _filter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n            \n            component\n            DateInputComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n            \n            component\n            ErrorDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n            \n            component\n            InfoDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n            \n            component\n            RadiobuttonComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n            \n            component\n            SlideToggleComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableViewOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n            \n            component\n            TextInputComponent\n            \n                0 %\n                (0/42)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.9\n        \n            @angular/cdk : ~12.2.9\n        \n            @angular/common : ~12.2.9\n        \n            @angular/compiler : ^12.2.9\n        \n            @angular/core : ~12.2.9\n        \n            @angular/forms : ~12.2.9\n        \n            @angular/localize : ^12.2.9\n        \n            @angular/material : ^12.2.9\n        \n            @angular/material-moment-adapter : ^12.2.9\n        \n            @angular/platform-browser : ~12.2.9\n        \n            @angular/platform-browser-dynamic : ~12.2.9\n        \n            @angular/router : ~12.2.9\n        \n            @types/pouchdb : ^6.4.0\n        \n            body-parser : ^1.19.0\n        \n            express : ^4.17.1\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.1\n        \n            util : ^0.12.4\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableType   (projects/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TableType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : FILE\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkKey   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            difference   (projects/.../form.service.ts)\n                        \n                        \n                            objectAssign   (projects/.../angular-csv.ts)\n                        \n                        \n                            toObject   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkKey\n                        \n                    \n                \n            \n            \n                \ncheckKey(ts: TranslationService, item: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ts\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/services/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        difference\n                        \n                    \n                \n            \n            \n                \ndifference(newObj: any, origObj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    origObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        objectAssign\n                        \n                    \n                \n            \n            \n                \nobjectAssign(target: any, ...source: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Assign data  to new Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toObject\n                        \n                    \n                \n            \n            \n                \ntoObject(val: any)\n                \n            \n\n\n\n\n            \n                \n                    Convet to Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularFormbuilder\nThis project was generated with Angular CLI version 10.\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nTo start the generating server run DEBUG=express:* node ./server/app.js\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FormbuilderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/optionsConfig.html":{"url":"interfaces/optionsConfig.html","title":"interface - optionsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  optionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entriesPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadAfterPercentscrolled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchAfterNthCharacter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showAsObject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entriesPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entriesPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupBy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadAfterPercentscrolled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadAfterPercentscrolled:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAfterNthCharacter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchAfterNthCharacter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAsObject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAsObject:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface optionsConfig {\n    showAsObject?: {\n        KeyToSave: string | null\n    };\n    groupBy?: boolean;\n    apiEndpoint?: URL;\n    entriesPerPage?: number;\n    searchAfterNthCharacter?: number;\n    loadAfterPercentscrolled?: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/searchObj.html":{"url":"interfaces/searchObj.html","title":"interface - searchObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  searchObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _filter   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            ConfigDefaults   (projects/.../angular-csv.ts)\n                        \n                        \n                            hasOwnProperty   (projects/.../angular-csv.ts)\n                        \n                        \n                            propIsEnumerable   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (opt: any[], value: string, ts:TranslationService): string[] => {\n  const filterValue = value.toLowerCase();\n  console.log(opt);\n\n  if (typeof opt[0] === 'string') {\n    return opt.filter(item => checkKey(ts, item, filterValue));\n  } else {\n    return opt.filter(\n      item => checkKey(ts, item.name, filterValue)\n    );\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOwnProperty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.hasOwnProperty\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propIsEnumerable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.propertyIsEnumerable\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
