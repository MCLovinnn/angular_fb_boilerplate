var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AngularCsv.html",[0,0.274,1,1.865]],["body/classes/AngularCsv.html",[0,0.276,1,1.876,2,1.648,3,0.117,4,0.163,5,0.087,6,4.005,7,1.402,8,0.218,9,0.355,10,1.502,11,3.389,12,3.478,13,1.727,14,2.558,15,4.49,16,3.389,17,0.711,18,3.654,19,3.801,20,3.801,21,3.801,22,3.801,23,3.801,24,3.801,25,4.12,26,3.654,27,0.438,28,2.786,29,0.513,30,1.8,31,1.045,32,3.654,33,0.912,34,0.021,35,0.5,36,0.307,37,0.399,38,3.389,39,1.816,40,2.382,41,0.573,42,0.307,43,2.382,44,2.382,45,2.322,46,2.382,47,2.786,48,2.382,49,2.786,50,2.151,51,1.185,52,2.382,53,2.528,54,2.151,55,2.382,56,4.217,57,2.935,58,1.42,59,2.382,60,2.786,61,2.151,62,4.326,63,2.382,64,2.382,65,1.292,66,2.382,67,2.442,68,2.786,69,2.382,70,2.528,71,2.786,72,1.198,73,0.244,74,0.196,75,2.004,76,2.004,77,2.004,78,2.004,79,1.061,80,2.004,81,2.004,82,2.004,83,2.528,84,2.004,85,2.528,86,2.528,87,2.528,88,1.514,89,1.816,90,1.816,91,1.816,92,1.816,93,1.816,94,1.816,95,1.816,96,1.816,97,1.657,98,1.816,99,1.816,100,1.816,101,1.816,102,1.816,103,1.816,104,0.75,105,1.816,106,1.816,107,1.816,108,1.816,109,1.816,110,1.816,111,1.632,112,2.322,113,1.648,114,1.648,115,1.648,116,1.648,117,1.648,118,1.648,119,1.648,120,1.648,121,1.648,122,1.648,123,1.648,124,1.648,125,1.648,126,1.648,127,1.402,128,1.082,129,2.144,130,1.816,131,2.786,132,1.514,133,2.786,134,1.816,135,2.063,136,1.538,137,1.816,138,1.816,139,3.68,140,1.816,141,4.765,142,1.816,143,1.816,144,1.816,145,1.816,146,1.816,147,2.786,148,2.038,149,1.816,150,1.816,151,1.816,152,1.816,153,1.816,154,1.816,155,1.816,156,0.962,157,1.816,158,1.816,159,1.816,160,2.786,161,2.786,162,2.786,163,1.816,164,1.816,165,1.816,166,1.648,167,1.816,168,1.816,169,1.816,170,1.816,171,1.816,172,1.816,173,1.816,174,1.816,175,1.816,176,1.816,177,1.816,178,1.816,179,1.816,180,1.816,181,4.662,182,1.816,183,1.816,184,4.099,185,3.801,186,3.801,187,2.786,188,1.816,189,2.004,190,2.004,191,2.004,192,2.151,193,1.816,194,1.816,195,2.786,196,1.816,197,1.816,198,3.389,199,1.816,200,2.786,201,1.816,202,1.816,203,1.816,204,3.389,205,1.816,206,1.816,207,1.816,208,1.816,209,1.514,210,1.648,211,1.514,212,1.648,213,1.648,214,1.816,215,1.876,216,1.648,217,2.151,218,1.481,219,1.876,220,1.816,221,1.816,222,1.648,223,1.816,224,1.816,225,1.648,226,1.514,227,1.648,228,1.816,229,1.816,230,2.786,231,0.01,232,0.01]],["title/injectables/AuthenticationService.html",[233,0.919,234,2.77]],["body/injectables/AuthenticationService.html",[0,0.206,3,0.134,4,0.1,5,0.1,8,0.134,9,0.393,10,1.611,13,1.437,14,0.993,17,0.788,27,0.503,29,0.506,31,1.095,33,1.171,34,0.021,35,0.672,36,0.318,37,0.512,41,1.161,42,0.734,51,1.303,58,1.611,65,1.372,73,0.134,79,1.13,97,1.821,104,1.305,111,2.126,136,1.548,148,1.666,218,1.642,231,0.011,232,0.011,233,1.026,234,3.089,235,1.241,236,2.341,237,4.831,238,4.139,239,4.831,240,4.139,241,5.344,242,4.89,243,5.344,244,5.344,245,4.139,246,3.472,247,5.979,248,5.344,249,5.344,250,4.053,251,3.472,252,4.831,253,2.732,254,5.979,255,4.282,256,4.831,257,3.697,258,4.053,259,2.732,260,4.053,261,4.053,262,5.708,263,3.472,264,4.053,265,4.053,266,4.053,267,4.053,268,4.053,269,4.053,270,4.053,271,4.053,272,2.732,273,2.732,274,4.053,275,4.053,276,4.053,277,4.053,278,4.053,279,4.053,280,2.732,281,4.053,282,5.344,283,2.732,284,4.053,285,4.139,286,4.053,287,2.732,288,2.732,289,2.732,290,2.732,291,4.053,292,2.732,293,2.732,294,4.053,295,3.36,296,2.732,297,1.89,298,2.732,299,2.732,300,2.732,301,2.732,302,2.732,303,0.72,304,0.329,305,2.341,306,2.732,307,1.499,308,4.831,309,2.083,310,2.732,311,2.732,312,1.171,313,1.171,314,2.083,315,1.171,316,1.403,317,2.732,318,2.732,319,5.344,320,4.053,321,5.344,322,2.732,323,4.053,324,4.053,325,2.732,326,4.831,327,4.831,328,4.139,329,2.341,330,2.732,331,2.732,332,2.732,333,2.732,334,2.732,335,2.732,336,4.053,337,2.732,338,2.732,339,4.831,340,4.831,341,4.053,342,2.732,343,2.732,344,4.053,345,3.472,346,2.732,347,2.732,348,2.732,349,2.732,350,2.732,351,2.732,352,4.831,353,2.732,354,2.732,355,5.708,356,2.732,357,2.732,358,2.732,359,2.341,360,2.732,361,4.053,362,4.053,363,4.053,364,2.732,365,2.732,366,2.732,367,2.732,368,5.344,369,4.831,370,2.732,371,4.053,372,2.732,373,2.732,374,3.089,375,2.732,376,2.732,377,2.732,378,2.732,379,2.732,380,2.732,381,2.732,382,2.732,383,2.732,384,2.732,385,3.07,386,2.732,387,2.732,388,2.732,389,2.732,390,4.053,391,1.89,392,2.732,393,2.732,394,2.732,395,2.732,396,2.732]],["title/classes/AutoSearch.html",[0,0.274,397,2.309]],["body/classes/AutoSearch.html",[0,0.416,2,3.815,3,0.27,4,0.202,5,0.202,8,0.27,9,0.628,29,0.546,31,1.004,34,0.02,35,0.797,36,0.318,37,0.581,73,0.318,74,0.455,231,0.017,232,0.017,397,4.508,398,4.204,399,3.891,400,5.514,401,5.514,402,4.115]],["title/components/BaseFieldComponent.html",[403,0.498,404,1.073]],["body/components/BaseFieldComponent.html",[0,0.158,3,0.162,4,0.077,5,0.121,8,0.103,9,0.321,10,0.984,13,1.534,17,0.643,27,0.608,29,0.5,31,1.138,33,0.84,34,0.021,35,0.676,36,0.353,37,0.367,41,1.534,42,0.861,51,1.22,58,1.217,65,0.503,72,1.691,73,0.103,79,0.713,97,1.42,104,0.678,111,1.082,127,0.803,135,2.484,136,1.285,156,1.006,217,1.232,218,2.18,231,0.009,232,0.009,303,0.678,304,0.252,315,1.416,403,0.562,404,1.588,405,1.14,406,0.761,407,0.722,408,1.793,409,1.027,410,1.868,411,1.34,412,0.722,413,2.21,414,2.081,415,1.489,416,2.051,417,1.202,418,2.242,419,2.441,420,1.974,421,1.859,422,1.974,423,1.942,424,2.242,425,2.242,426,1.594,427,2.242,428,2.242,429,2.242,430,2.242,431,1.522,432,1.594,433,2.242,434,1.501,435,1.571,436,1.34,437,1.974,438,1.412,439,1.34,440,1.755,441,1.571,442,1.784,443,1.571,444,1.571,445,1.571,446,1.974,447,2.299,448,2.299,449,2.299,450,2.299,451,1.571,452,2.299,453,1.571,454,1.571,455,1.009,456,1.841,457,2.299,458,1.746,459,3.305,460,2.093,461,1.868,462,2.093,463,1.571,464,2.093,465,1.273,466,2.093,467,2.093,468,1.859,469,2.093,470,2.093,471,2.093,472,1.412,473,2.093,474,1.34,475,2.093,476,2.093,477,2.093,478,1.332,479,2.093,480,2.093,481,2.093,482,2.093,483,1.594,484,2.093,485,2.093,486,2.093,487,2.093,488,1.522,489,2.093,490,2.093,491,2.093,492,2.093,493,2.093,494,1.594,495,2.093,496,2.093,497,2.093,498,2.093,499,2.093,500,2.093,501,1.594,502,2.093,503,2.093,504,2.093,505,2.093,506,2.093,507,2.242,508,1.501,509,1.501,510,1.594,511,1.594,512,1.594,513,2.242,514,1.594,515,1.594,516,1.594,517,1.594,518,2.242,519,1.594,520,1.594,521,1.594,522,2.112,523,1.594,524,1.594,525,1.594,526,1.594,527,1.594,528,1.594,529,1.594,530,1.594,531,1.594,532,1.594,533,2.093,534,2.093,535,1.448,536,2.093,537,1.148,538,2.093,539,1.148,540,0.587,541,1.009,542,0.951,543,3.305,544,0.976,545,2.093,546,2.093,547,2.093,548,2.093,549,2.093,550,2.093,551,2.093,552,2.093,553,2.093,554,2.093,555,2.093,556,4.65,557,3.305,558,2.093,559,2.093,560,2.093,561,2.093,562,2.093,563,3.305,564,2.093,565,4.094,566,2.093,567,2.093,568,4.094,569,2.093,570,2.093,571,4.094,572,4.094,573,5.062,574,4.094,575,5.062,576,5.38,577,3.305,578,2.093,579,2.093,580,5.062,581,2.093,582,5.062,583,2.093,584,5.062,585,2.093,586,5.062,587,2.093,588,2.093,589,3.305,590,3.305,591,4.094,592,3.305,593,2.093,594,3.305,595,2.093,596,2.093,597,2.093,598,2.093,599,2.093,600,1.793,601,3.305,602,2.093,603,2.093,604,2.093,605,2.093,606,2.093,607,3.305,608,2.093,609,3.305,610,2.093,611,2.093,612,2.093,613,2.093,614,2.093,615,0.761,616,1.14,617,1.202,618,0.761,619,1.691,620,0.761,621,0.651,622,0.761,623,0.761,624,0.618,625,0.761,626,0.587,627,0.722,628,0.761,629,0.618,630,0.761,631,1.202,632,0.587,633,0.836,634,1.202,635,0.618,636,0.618,637,0.761,638,0.761,639,0.587,640,0.618,641,0.761,642,0.618,643,0.761,644,0.618,645,0.761,646,0.618,647,0.761,648,0.558,649,0.761,650,0.618,651,0.761,652,0.761]],["title/components/CheckboxComponent.html",[403,0.498,624,1.073]],["body/components/CheckboxComponent.html",[0,0.195,3,0.191,4,0.095,5,0.143,8,0.127,9,0.378,10,0.936,13,1.567,17,0.757,27,0.477,29,0.512,31,1.158,33,0.961,34,0.021,35,0.684,36,0.362,37,0.42,41,1.631,42,0.889,51,1.288,58,1.251,65,0.623,72,1.125,73,0.127,79,0.678,97,0.727,104,0.532,127,0.994,135,2.333,156,0.843,231,0.01,232,0.01,303,0.672,304,0.312,315,1.11,403,0.642,404,2.214,405,1.343,406,0.942,407,0.894,409,1.211,410,1.455,411,1.532,412,0.894,413,2.294,414,2.164,415,0.942,416,1.578,417,0.942,418,2.51,419,2.827,420,1.878,421,1.769,422,1.878,423,2.249,424,2.257,425,2.257,426,1.878,427,2.933,428,2.257,429,2.257,430,2.257,431,1.704,432,1.878,433,2.257,434,1.769,435,1.494,436,1.275,437,1.878,438,1.343,439,1.275,440,1.669,441,1.494,442,1.494,443,1.494,444,1.494,445,1.494,446,1.878,447,2.125,448,2.125,449,2.125,450,2.125,451,1.494,452,2.125,453,1.494,454,1.494,455,1.249,456,2.029,457,2.534,458,1.925,461,1.618,463,0.994,465,0.805,468,1.177,472,0.894,474,1.275,478,1.187,483,1.249,488,0.848,494,1.249,501,1.249,507,1.878,508,1.177,509,1.177,510,1.249,511,1.249,512,1.249,513,1.878,514,1.249,515,1.249,516,1.249,517,1.249,518,1.878,519,1.249,520,1.249,521,1.249,522,1.769,523,1.249,524,1.249,525,1.249,526,1.249,527,1.249,528,1.249,529,1.249,530,1.249,531,1.249,532,1.249,540,0.727,541,1.249,542,1.177,544,0.765,600,4.459,615,0.942,616,1.343,617,1.416,618,0.942,619,1.892,620,0.942,621,0.805,622,0.942,623,0.942,624,1.537,625,0.942,626,0.727,627,0.894,628,0.942,629,0.765,630,0.942,631,1.416,632,0.727,633,0.986,634,1.416,635,0.765,636,0.765,637,0.942,638,0.942,639,0.727,640,0.765,641,0.942,642,0.765,643,0.942,644,0.765,645,0.942,646,0.765,647,0.942,648,0.69,649,0.942,650,0.765,651,0.942,652,0.942,653,0.994,654,1.382,655,2.22,656,2,657,3.895,658,1.416,659,4.68,660,1.416,661,3.895,662,4.68,663,3.895,664,3.895,665,3.828,666,1.33,667,1.33,668,1.33,669,1.33,670,1.33,671,1.33,672,1.33,673,1.33,674,1.33,675,1.33,676,1.33,677,1.33,678,1.33,679,1.33,680,1.33,681,1.33,682,1.33,683,1.33,684,1.33,685,1.33,686,1.33,687,1.33,688,1.975,689,1.33,690,1.33,691,1.33,692,1.33,693,1.33,694,1.33,695,1.33,696,1.33,697,1.33,698,1.33,699,1.792,700,1.525,701,1.525,702,1.33,703,1.33,704,1.33,705,1.249,706,1.33,707,1.33,708,1.33,709,2.672,710,3.895]],["title/injectables/ConfigService.html",[233,0.919,711,2.513]],["body/injectables/ConfigService.html",[0,0.293,3,0.191,4,0.143,5,0.215,8,0.191,9,0.505,14,2.273,17,1.011,27,0.716,29,0.293,31,1.092,33,1.202,34,0.021,35,0.703,36,0.336,37,0.525,41,0.934,42,0.916,51,1.216,58,0.934,61,2.289,65,1.566,73,0.191,111,2.307,127,1.994,129,1.875,136,1.427,156,1.268,218,1.576,231,0.014,232,0.014,233,1.316,235,1.766,251,4.454,297,3.597,303,0.808,304,0.468,307,2.133,312,1.666,313,1.666,316,1.996,397,4.352,399,2.133,402,2.471,407,2.156,410,1.616,440,1.666,478,1.336,535,2.69,711,3.597,712,3.331,713,5.857,714,5.857,715,5.857,716,5.199,717,5.199,718,5.857,719,5.857,720,2.69,721,3.974,722,5.199,723,3.304,724,5.199,725,6.253,726,3.888,727,4.454,728,3.597,729,6.253,730,5.199,731,3.597,732,5.199,733,3.888,734,3.888,735,3.888,736,5.018,737,3.888,738,3.888,739,3.888,740,3.888,741,2.289,742,3.331,743,3.888,744,2.289,745,5.857,746,3.888,747,3.888,748,3.888,749,5.199,750,5.199,751,3.888,752,5.199,753,5.199,754,3.888,755,3.015,756,3.888,757,3.888,758,3.888,759,3.888,760,3.597,761,3.888,762,3.888,763,3.888,764,3.888,765,3.888,766,3.888,767,3.888,768,3.331,769,3.888]],["title/components/ConfirmDialogComponent.html",[403,0.498,626,1.019]],["body/components/ConfirmDialogComponent.html",[0,0.273,3,0.243,4,0.133,5,0.182,8,0.178,9,0.481,10,0.871,13,1.718,14,2.208,17,0.964,27,0.912,29,0.48,31,1.018,33,0.744,34,0.02,35,0.635,36,0.312,37,0.325,41,1.191,42,0.638,51,0.704,58,0.871,72,0.871,73,0.178,104,0.744,128,1.645,136,0.827,148,1.709,231,0.013,232,0.013,303,0.597,304,0.436,403,0.775,404,1.07,405,1.709,406,1.317,407,1.249,409,1.541,411,1.849,412,1.249,413,2.403,414,2.272,415,1.317,417,1.317,431,1.988,474,1.186,544,1.07,615,1.317,616,1.709,617,1.802,618,1.317,619,2.208,620,1.317,621,1.126,622,1.317,623,1.317,624,1.07,625,1.317,626,1.704,627,2.446,628,1.317,629,1.07,630,1.317,631,1.802,632,1.016,633,1.61,634,1.802,635,1.07,636,1.07,637,1.317,638,1.317,639,1.016,640,1.07,641,1.317,642,1.07,643,1.317,644,1.07,645,1.317,646,1.07,647,1.317,648,0.965,649,1.317,650,1.07,651,1.317,652,1.317,653,1.39,654,1.985,658,1.802,660,1.802,709,2.545,770,4.652,771,4.652,772,3.104,773,5.649,774,4.956,775,4.307,776,3.603,777,4.401,778,2.762,779,3.908,780,4.202,781,4.956,782,3.623,783,2.506,784,3.778,785,3.623,786,3.623,787,4.956,788,3.623,789,2.762,790,2.762,791,1.86,792,2.762,793,3.778,794,2.762,795,4.956,796,4.956,797,4.84,798,5.649,799,5.649,800,3.623,801,4.956,802,4.956,803,3.778,804,2.506,805,3.429,806,2.762,807,2.302,808,2.506,809,2.762,810,2.762,811,2.762,812,4.307,813,2.762,814,4.63,815,2.762,816,3.429,817,2.762,818,2.762,819,2.762,820,2.762,821,3.429,822,3.623,823,2.762,824,2.762,825,3.778,826,3.778,827,2.762]],["title/classes/CsvConfigConsts.html",[0,0.274,88,2.309]],["body/classes/CsvConfigConsts.html",[0,0.273,1,1.206,2,1.625,3,0.115,4,0.162,5,0.086,6,4.058,7,1.383,8,0.216,9,0.351,10,1.059,11,1.791,12,2.913,13,1.678,14,2.488,15,4.067,16,1.791,19,1.791,20,1.791,21,1.791,22,1.791,23,1.791,24,1.791,25,4.406,28,1.791,29,0.516,30,1.578,31,1.061,34,0.021,36,0.312,38,2.756,41,1.645,42,0.881,45,1.493,47,1.791,49,1.791,53,1.625,54,1.383,56,3.424,57,2.128,58,1.059,60,1.791,61,1.383,62,3.773,65,1.284,67,2.248,68,1.791,70,1.625,71,1.791,72,1.059,73,0.243,74,0.194,75,1.983,76,1.983,77,1.983,78,1.983,79,1.056,80,1.983,81,1.983,82,1.983,83,2.501,84,1.983,85,2.501,86,2.501,87,2.501,88,2.298,89,3.36,90,2.756,91,3.36,92,2.756,93,3.36,94,3.36,95,3.36,96,3.36,97,1.864,98,3.36,99,2.756,100,3.36,101,2.756,102,3.36,103,3.36,104,0.905,105,3.36,106,3.36,107,3.36,108,3.36,109,3.36,110,3.36,111,1.62,112,2.298,113,1.625,114,1.625,115,1.625,116,1.625,117,1.625,118,1.625,119,1.625,120,1.625,121,1.625,122,1.625,123,1.625,124,1.625,125,1.625,126,1.625,127,1.387,128,1.067,129,2.125,130,1.791,131,2.756,132,1.493,133,2.756,134,1.791,135,2.05,136,1.533,137,1.791,138,1.791,139,3.665,140,1.791,141,4.746,142,1.791,143,1.791,144,1.791,145,1.791,146,1.791,147,2.756,148,2.027,149,1.791,150,1.791,151,1.791,152,1.791,153,1.791,154,1.791,155,1.791,156,0.954,157,1.791,158,1.791,159,1.791,160,2.756,161,2.756,162,2.756,163,1.791,164,1.791,165,1.791,166,1.625,167,1.791,168,1.791,169,1.791,170,1.791,171,1.791,172,1.791,173,1.791,174,1.791,175,1.791,176,1.791,177,1.791,178,1.791,179,1.791,180,1.791,181,4.649,182,1.791,183,1.791,184,4.073,185,3.773,186,3.773,187,2.756,188,1.791,189,1.983,190,1.983,191,1.983,192,2.128,193,1.791,194,1.791,195,2.756,196,1.791,197,1.791,198,3.36,199,1.791,200,2.756,201,1.791,202,1.791,203,1.791,204,3.36,205,1.791,206,1.791,207,1.791,208,1.791,209,1.493,210,1.625,211,1.493,212,1.625,213,1.625,214,1.791,215,1.856,216,1.625,217,2.128,218,1.465,219,1.856,220,1.791,221,1.791,222,1.625,223,1.791,224,1.791,225,1.625,226,1.493,227,1.625,228,1.791,229,1.791,230,2.756,231,0.01,232,0.01,828,2.349,829,2.349,830,2.349,831,2.349,832,2.349,833,2.349,834,2.349,835,2.349,836,2.349,837,2.349,838,2.349,839,2.349,840,2.349,841,2.349,842,2.349,843,2.349]],["title/injectables/DataConnectorService.html",[233,0.919,844,2.513]],["body/injectables/DataConnectorService.html",[0,0.256,3,0.166,4,0.125,5,0.125,8,0.166,9,0.46,17,0.921,27,0.625,29,0.57,30,1.399,31,1.075,33,1.383,34,0.021,35,0.758,36,0.347,37,0.604,41,1.139,42,0.76,51,1.31,56,3.278,57,3.213,67,2.822,72,0.816,73,0.232,74,0.28,104,0.697,136,1.625,148,2.038,156,0.735,231,0.013,232,0.013,233,1.199,235,1.542,303,0.712,304,0.409,307,1.862,309,2.588,312,1.455,313,1.455,314,5.467,316,1.743,374,3.612,416,1.92,474,1.111,544,1.002,720,2.349,721,3.755,723,3.012,744,1.999,807,3.755,844,3.278,845,4.125,846,2.588,847,4.504,848,3.469,849,4.739,850,4.739,851,5.061,852,4.739,853,4.739,854,4.739,855,4.06,856,6.144,857,3.395,858,5.66,859,4.06,860,3.395,861,4.06,862,3.395,863,4.06,864,5.324,865,5.324,866,3.395,867,4.06,868,3.395,869,3.395,870,4.06,871,3.395,872,4.06,873,3.395,874,4.504,875,4.161,876,2.909,877,4.06,878,3.278,879,2.909,880,2.909,881,3.278,882,4.504,883,2.909,884,2.909,885,3.612,886,2.909,887,2.909,888,2.909,889,2.909,890,4.677,891,2.909,892,2.909,893,2.909,894,2.909,895,2.909,896,2.909,897,2.909,898,2.909,899,2.588,900,2.909]],["title/injectables/DataFlattnerService.html",[233,0.919,741,2.139]],["body/injectables/DataFlattnerService.html",[0,0.273,3,0.177,4,0.133,5,0.133,8,0.177,13,1.357,17,0.963,25,4.174,27,1.039,29,0.374,31,0.986,33,1.246,34,0.021,35,0.683,36,0.353,37,0.544,39,3.776,42,0.466,45,3.148,51,1.181,61,3.324,65,1.688,73,0.243,74,0.298,79,0.63,97,1.015,104,0.743,111,2.34,129,2.928,136,1.498,139,2.13,148,1.248,215,2.543,218,2.288,219,2.543,226,3.148,231,0.013,232,0.013,233,1.254,235,1.644,297,4.2,303,0.436,304,0.436,312,1.551,313,1.551,478,1.13,539,1.985,741,2.915,755,2.723,845,3.865,901,2.759,902,5.201,903,5.625,904,4.953,905,5.201,906,3.619,907,4.243,908,5.863,909,3.619,910,4.243,911,3.619,912,4.243,913,4.243,914,3.619,915,3.906,916,3.619,917,3.619,918,3.1,919,3.1,920,3.1,921,4.837,922,4.243,923,3.1,924,3.1,925,4.243,926,3.1,927,4.837,928,5.201,929,3.1,930,3.1,931,4.243,932,3.1,933,3.1,934,3.1,935,3.1,936,5.447,937,3.1,938,3.1,939,3.1,940,3.1,941,3.1,942,3.1,943,3.1,944,4.243,945,4.243,946,5.201,947,4.243,948,4.243,949,2.915,950,3.1,951,4.837,952,5.447,953,3.1,954,3.1,955,3.1]],["title/injectables/DataStoreService.html",[233,0.919,257,2.513]],["body/injectables/DataStoreService.html",[0,0.32,3,0.208,4,0.156,5,0.156,8,0.208,9,0.535,10,1.723,13,1.8,17,1.071,27,1.126,31,1.121,33,1.255,34,0.02,35,0.688,36,0.337,37,0.548,41,1.47,42,0.863,51,1.336,58,1.612,65,1.47,73,0.208,79,1.064,136,1.395,156,1.488,231,0.015,232,0.015,233,1.395,235,1.929,238,5.24,240,5.24,257,3.812,303,0.664,304,0.512,307,2.33,312,1.82,313,1.82,328,3.639,345,3.639,736,5.746,845,4.287,956,3.639,957,6.117,958,6.473,959,6.473,960,6.473,961,5.51,962,5.51,963,5.51,964,5.51,965,4.247,966,6.141,967,4.247,968,4.247,969,5.51,970,4.247,971,5.51,972,4.247,973,5.51,974,4.247,975,4.247,976,5.545,977,4.247,978,5.51,979,4.247,980,4.247,981,4.247,982,4.247,983,4.247]],["title/components/DateInputComponent.html",[403,0.498,629,1.073]],["body/components/DateInputComponent.html",[0,0.198,3,0.193,4,0.096,5,0.144,8,0.129,9,0.382,10,1.134,13,1.572,17,0.765,27,0.483,29,0.508,31,1.158,33,0.968,34,0.02,35,0.687,36,0.361,37,0.423,41,1.617,42,0.884,51,1.292,58,1.259,65,0.631,72,1.134,73,0.129,79,0.684,97,0.736,104,0.539,127,1.007,135,2.343,156,0.851,231,0.01,232,0.01,303,0.709,304,0.316,315,1.125,403,0.647,404,2.215,405,1.357,406,0.954,407,0.905,409,1.223,410,1.466,411,1.544,412,0.905,413,2.298,414,2.168,415,0.954,416,1.594,417,0.954,418,2.526,419,2.841,420,1.897,421,1.786,422,1.897,423,2.26,424,2.706,425,2.275,426,1.897,427,2.275,428,2.275,429,2.275,430,2.275,431,1.715,432,1.897,433,2.275,434,1.786,435,1.509,436,1.288,437,1.897,438,1.357,439,1.288,440,1.686,441,2.01,442,1.509,443,1.509,444,1.509,445,1.509,446,1.897,447,2.142,448,2.142,449,2.142,450,2.142,451,1.509,452,2.142,453,1.509,454,1.509,455,1.266,456,2.04,457,2.548,458,1.935,461,1.628,463,1.007,465,0.816,468,1.192,472,0.905,474,1.288,478,1.195,483,1.266,488,0.859,494,1.266,501,1.266,507,1.897,508,1.192,509,1.192,510,1.266,511,1.266,512,1.266,513,1.897,514,1.266,515,1.266,516,1.266,517,1.266,518,1.897,519,1.266,520,1.266,521,1.266,522,1.786,523,1.266,524,1.266,525,1.266,526,1.266,527,1.266,528,1.266,529,1.266,530,1.266,531,1.266,532,1.266,540,0.736,541,1.266,542,1.192,544,0.775,615,0.954,616,1.357,617,1.43,618,0.954,619,1.905,620,0.954,621,0.816,622,0.954,623,0.954,624,0.775,625,0.954,626,0.736,627,0.905,628,0.954,629,1.547,630,2.284,631,1.43,632,0.736,633,0.995,634,1.43,635,0.775,636,0.775,637,0.954,638,0.954,639,0.736,640,0.775,641,0.954,642,0.775,643,0.954,644,0.775,645,0.954,646,0.775,647,0.954,648,0.699,649,0.954,650,0.775,651,0.954,652,0.954,653,1.007,654,1.161,656,2.019,658,1.43,660,1.43,665,3.831,666,1.348,667,1.348,668,1.348,669,1.348,670,1.348,671,1.348,672,1.348,673,1.348,674,1.348,675,1.348,676,1.348,677,1.348,678,1.348,679,1.348,680,1.348,681,1.348,682,1.348,683,1.348,684,1.348,685,1.348,686,1.348,687,1.348,689,1.348,690,1.348,691,1.348,692,1.348,693,1.348,694,1.348,695,1.348,696,1.348,697,1.348,698,1.348,699,1.816,700,1.545,702,1.348,703,1.348,704,1.348,705,1.266,706,1.348,707,1.348,708,1.348,984,2.998,985,2.998,986,1.816,987,3.596,988,2.998,989,6.108,990,2.249,991,2.249,992,1.816,993,2.249,994,2.625,995,2.625,996,2.625]],["title/injectables/DialogService.html",[233,0.919,997,2.513]],["body/injectables/DialogService.html",[0,0.258,3,0.168,4,0.126,5,0.126,8,0.168,13,1.759,14,2.156,17,0.927,27,0.63,29,0.487,31,1.026,33,1.359,34,0.021,35,0.744,36,0.325,37,0.594,39,4.751,51,1.255,58,1.551,73,0.168,104,0.702,111,2.274,135,2.103,136,1.251,215,3.855,231,0.013,232,0.013,233,1.206,235,1.554,303,0.751,304,0.412,312,1.467,313,1.467,316,1.757,616,1.643,626,0.96,627,1.643,632,0.96,633,1.633,639,0.96,770,2.368,771,2.368,775,4.179,777,2.368,779,4.745,780,4.581,791,1.757,949,3.227,997,3.297,998,2.932,999,4.765,1000,4.765,1001,4.765,1002,4.765,1003,4.765,1004,2.932,1005,4.101,1006,3.422,1007,4.765,1008,6.621,1009,7.257,1010,3.422,1011,6.233,1012,4.765,1013,4.765,1014,3.422,1015,4.765,1016,7.019,1017,3.422,1018,4.765,1019,4.765,1020,3.422,1021,4.765,1022,3.422,1023,4.697,1024,4.765,1025,3.422,1026,4.179,1027,2.932,1028,2.368,1029,2.368,1030,4.082,1031,2.368,1032,2.368,1033,6.752,1034,3.422,1035,5.482,1036,6.453,1037,5.482,1038,3.422,1039,3.422,1040,3.422,1041,3.422,1042,4.765,1043,2.609,1044,3.422]],["title/components/ErrorDialogSimpleComponent.html",[403,0.498,632,1.019]],["body/components/ErrorDialogSimpleComponent.html",[0,0.268,3,0.24,4,0.13,5,0.18,8,0.174,9,0.475,10,0.854,13,1.662,14,2.191,17,0.951,27,0.9,29,0.422,31,0.979,33,0.73,34,0.02,35,0.629,36,0.295,37,0.319,41,1.176,42,0.63,51,0.691,58,0.854,72,0.854,73,0.174,104,0.73,128,1.614,136,0.811,148,1.687,231,0.013,232,0.013,303,0.589,304,0.428,403,0.767,404,1.05,405,1.687,406,1.292,407,1.226,409,1.521,411,1.831,412,1.226,413,2.397,414,2.267,415,1.292,417,1.292,431,1.972,474,1.164,508,2.222,509,2.222,544,2.104,615,1.292,616,1.687,617,1.779,618,1.292,619,2.191,620,1.292,621,1.105,622,1.292,623,1.292,624,1.05,625,1.292,626,0.997,627,1.226,628,1.292,629,1.05,630,1.292,631,1.779,632,1.69,633,1.882,634,1.779,635,1.05,636,1.05,637,1.292,638,1.292,639,0.997,640,1.05,641,1.292,642,1.05,643,1.292,644,1.05,645,1.292,646,1.05,647,1.292,648,0.947,649,1.292,650,1.05,651,1.292,652,1.292,653,1.364,654,1.928,658,1.779,660,1.779,709,2.512,731,2.459,775,4.817,776,3.582,778,2.71,779,3.87,780,4.169,783,2.459,784,3.729,789,2.71,790,2.71,791,1.825,792,2.71,793,3.729,794,2.71,797,4.191,803,3.729,804,2.459,805,3.384,806,2.71,807,2.259,808,2.459,809,2.71,810,2.71,811,2.71,812,4.264,813,2.71,814,4.593,815,2.71,816,3.384,817,2.71,818,2.71,819,2.71,820,2.71,821,3.87,823,2.71,824,2.71,825,3.729,826,3.729,827,2.71,1028,4.517,1029,4.517,1045,2.71,1046,4.191,1047,4.792,1048,4.191,1049,4.191,1050,3.045,1051,3.045,1052,3.045,1053,4.892,1054,3.555,1055,4.892,1056,3.555,1057,4.892,1058,6.026,1059,6.026,1060,4.892,1061,4.191,1062,3.555,1063,3.045,1064,4.191,1065,3.555]],["title/components/FileInputComponent.html",[403,0.498,635,1.073]],["body/components/FileInputComponent.html",[0,0.191,3,0.188,4,0.093,5,0.242,8,0.124,9,0.372,10,0.921,13,1.559,17,0.745,27,0.467,29,0.504,31,1.158,33,0.948,34,0.02,35,0.679,36,0.361,37,0.414,41,1.605,42,0.878,51,1.298,58,1.329,65,0.609,72,1.329,73,0.124,79,0.667,97,0.711,104,0.52,111,1.254,127,0.972,129,1.847,135,2.316,156,1,219,1.967,231,0.01,232,0.01,303,0.666,304,0.305,315,1.086,403,0.634,404,2.21,405,1.321,406,0.922,407,0.874,409,1.191,410,1.436,411,1.512,412,0.874,413,2.286,414,2.156,415,0.922,416,1.553,417,0.922,418,2.482,419,2.803,420,1.847,421,1.74,422,1.847,423,2.23,424,2.227,425,2.227,426,1.847,427,2.227,428,2.227,429,2.227,430,2.227,431,1.685,432,1.847,433,2.227,434,1.74,435,1.47,436,1.254,437,1.847,438,1.321,439,1.254,440,1.642,441,1.47,442,1.47,443,1.47,444,1.47,445,1.47,446,1.847,447,2.098,448,2.098,449,2.098,450,2.098,451,1.47,452,2.098,453,1.47,454,1.47,455,1.222,456,2.01,457,2.51,458,1.906,461,1.6,463,0.972,465,0.788,468,1.151,472,0.874,474,1.254,478,1.174,483,1.222,488,0.83,494,1.222,501,1.222,507,1.847,508,1.151,509,1.151,510,1.222,511,1.222,512,1.222,513,1.847,514,1.222,515,1.222,516,1.222,517,1.222,518,1.847,519,1.222,520,1.222,521,1.222,522,1.74,523,1.222,524,1.222,525,1.222,526,1.222,527,1.222,528,1.222,529,1.222,530,1.222,531,1.222,532,1.222,540,0.711,541,1.222,542,1.151,544,0.748,615,0.922,616,1.321,617,1.393,618,0.922,619,1.872,620,0.922,621,0.788,622,0.922,623,0.922,624,0.748,625,0.922,626,0.711,627,0.874,628,0.922,629,0.748,630,0.922,631,1.393,632,0.711,633,0.97,634,1.393,635,1.52,636,0.748,637,0.922,638,0.922,639,0.711,640,0.748,641,0.922,642,0.748,643,0.922,644,0.748,645,0.922,646,0.748,647,0.922,648,0.675,649,0.922,650,0.748,651,0.922,652,0.922,653,0.972,654,1.52,656,1.967,658,1.393,660,1.393,665,3.821,666,1.301,667,1.301,668,1.301,669,1.301,670,1.301,671,1.301,672,1.301,673,1.301,674,1.301,675,1.301,676,1.301,677,1.301,678,1.301,679,1.301,680,1.301,681,1.301,682,1.301,683,1.301,684,1.301,685,1.301,686,1.301,687,1.301,689,1.301,690,1.301,691,1.301,692,1.301,693,1.301,694,1.301,695,1.301,696,1.301,697,1.301,698,1.301,699,1.754,700,1.492,701,1.492,702,1.301,703,1.301,704,1.301,705,1.222,706,1.301,707,1.301,708,1.301,986,1.754,987,3.521,988,2.921,1066,3.924,1067,3.924,1068,5.148,1069,4.619,1070,3.831,1071,1.932,1072,2.535,1073,2.535,1074,2.172,1075,1.611,1076,2.535,1077,2.535,1078,3.831,1079,2.535,1080,2.535,1081,2.535,1082,2.535,1083,2.535,1084,2.535,1085,2.535,1086,2.535,1087,2.535,1088,3.831]],["title/components/FormbuilderComponent.html",[403,0.498,636,1.073]],["body/components/FormbuilderComponent.html",[0,0.352,3,0.287,4,0.171,5,0.215,8,0.229,17,1.137,27,1.176,31,0.906,34,0.02,35,0.657,51,0.906,58,1.405,72,1.12,73,0.229,231,0.016,232,0.016,303,0.561,304,0.561,403,0.876,404,1.376,405,2.016,406,1.695,407,1.607,409,1.817,411,2.091,412,1.607,413,2.468,414,2.324,415,1.695,417,2.126,431,2.193,456,2.509,474,1.526,544,1.376,615,1.695,616,2.016,617,2.126,618,1.695,619,2.436,620,1.695,621,1.449,622,1.695,623,1.695,624,1.376,625,1.695,626,1.307,627,1.607,628,1.695,629,1.376,630,1.695,631,2.126,632,1.307,633,1.48,634,2.126,635,1.376,636,1.978,637,2.323,638,1.695,639,1.307,640,1.376,641,1.695,642,1.376,643,1.695,644,1.376,645,1.695,646,1.376,647,1.695,648,1.242,649,1.695,650,1.376,651,1.695,652,1.695,653,1.788,1089,3.993,1090,6.389,1091,4.661,1092,4.661]],["title/modules/FormbuilderModule.html",[1093,3.112,1094,2.513]],["body/modules/FormbuilderModule.html",[0,0.215,3,0.14,4,0.105,5,0.105,17,0.555,25,2.463,31,0.442,34,0.021,51,0.555,73,0.14,129,1.376,136,0.651,231,0.011,232,0.011,303,0.913,304,0.344,404,1.793,416,1.156,458,1.443,540,0.8,542,1.296,621,2.128,624,2.021,626,1.703,629,2.021,632,1.703,633,1.381,635,2.021,636,2.087,639,1.703,640,2.021,642,2.021,644,2.021,646,2.021,648,1.824,650,2.021,705,1.376,711,2.895,731,1.974,741,2.463,742,2.445,744,1.68,770,1.974,771,1.974,791,1.465,984,2.176,985,2.176,993,2.445,1026,5.27,1027,2.445,1028,1.974,1029,1.974,1030,3.585,1031,1.974,1032,1.974,1066,2.176,1067,2.176,1094,5.242,1095,2.176,1096,2.895,1097,2.445,1098,2.854,1099,2.445,1100,2.445,1101,3.222,1102,3.585,1103,1.974,1104,2.445,1105,2.854,1106,4.185,1107,4.185,1108,4.185,1109,4.955,1110,2.854,1111,5.458,1112,4.955,1113,2.854,1114,4.185,1115,3.585,1116,2.176,1117,4.185,1118,2.854,1119,4.185,1120,2.854,1121,4.185,1122,2.854,1123,4.185,1124,2.854,1125,4.185,1126,2.854,1127,4.185,1128,2.854,1129,4.185,1130,2.854,1131,4.185,1132,2.854,1133,4.185,1134,2.854,1135,4.185,1136,2.854,1137,4.185,1138,2.854,1139,4.185,1140,2.854,1141,4.185,1142,2.854,1143,4.185,1144,2.854,1145,4.185,1146,2.854,1147,4.185,1148,2.854,1149,4.185,1150,2.854,1151,4.185,1152,4.185,1153,2.854,1154,4.185,1155,4.185,1156,2.854,1157,2.176,1158,2.176,1159,4.955,1160,2.854,1161,2.854,1162,2.854,1163,2.854,1164,4.185,1165,2.445,1166,2.445,1167,2.445,1168,2.854,1169,4.185,1170,2.445,1171,2.854,1172,2.854,1173,1.974,1174,2.854,1175,2.854,1176,4.185,1177,2.854,1178,4.185,1179,1.974,1180,4.185,1181,1.974,1182,4.185,1183,1.974,1184,4.185,1185,2.854,1186,4.185,1187,2.854,1188,2.854,1189,2.854,1190,2.854,1191,3.585,1192,2.854,1193,2.854,1194,2.854]],["title/injectables/FormbuilderService.html",[233,0.919,1195,2.77]],["body/injectables/FormbuilderService.html",[0,0.43,3,0.279,4,0.209,5,0.209,27,1.283,31,0.883,34,0.02,73,0.279,231,0.018,232,0.018,233,1.671,235,2.588,303,0.686,304,0.686,312,2.443,313,2.443,1195,5.032,1196,4.883,1197,5.699]],["title/interfaces/ICodeEntry.html",[74,0.3,1198,1.865]],["body/interfaces/ICodeEntry.html",[3,0.236,4,0.176,5,0.176,8,0.236,9,0.578,29,0.572,30,1.419,34,0.02,35,0.728,36,0.318,37,0.534,42,0.896,50,3.987,73,0.332,74,0.559,79,1.037,231,0.016,232,0.016,303,0.816,304,0.579,399,2.636,410,1.852,435,1.844,436,1.951,438,1.657,439,1.951,441,1.844,442,1.844,443,1.844,444,1.844,445,1.844,451,1.844,453,1.844,454,1.844,461,2.014,465,1.852,472,2.055,478,1.36,488,2.12,537,2.636,540,1.348,755,3.266,776,2.636,1198,3.326,1199,1.494,1200,3.054,1201,3.324,1202,4.482,1203,4.482,1204,3.324,1205,3.054,1206,3.324,1207,3.324,1208,3.324,1209,3.324,1210,2.829,1211,3.324,1212,3.269]],["title/interfaces/ICustomValidation.html",[74,0.3,465,1.129]],["body/interfaces/ICustomValidation.html",[0,0.438,3,0.226,4,0.169,5,0.169,8,0.226,9,0.564,13,1.761,29,0.565,34,0.021,35,0.653,36,0.344,37,0.647,42,0.593,65,1.108,73,0.226,74,0.38,79,1.106,218,2.353,231,0.015,232,0.015,391,4.988,436,1.509,438,1.59,465,1.805,537,3.185,633,1.609,777,3.189,1103,4.616,1199,1.433,1210,2.714,1213,3.514,1214,3.514,1215,5.717,1216,6.357,1217,6.357,1218,5.892,1219,4.017,1220,3.949,1221,3.949,1222,3.949,1223,3.949,1224,3.949,1225,3.949,1226,3.949,1227,3.949,1228,3.949,1229,5.446,1230,3.949,1231,3.949,1232,3.949,1233,3.949,1234,3.949,1235,3.949,1236,3.949]],["title/interfaces/IDialogConfig.html",[74,0.3,1219,2.513]],["body/interfaces/IDialogConfig.html",[0,0.435,3,0.223,4,0.167,5,0.167,8,0.223,9,0.559,13,1.758,29,0.555,34,0.021,35,0.648,36,0.349,37,0.656,42,0.586,65,1.095,73,0.223,74,0.376,79,1.1,215,3.693,218,2.335,231,0.015,232,0.015,391,4.977,436,1.491,438,1.571,465,1.416,537,3.161,633,1.6,777,3.151,1103,4.596,1199,1.416,1210,2.681,1213,3.472,1214,3.472,1215,3.902,1218,4.937,1219,3.151,1220,3.902,1221,5.692,1222,5.692,1223,5.692,1224,3.902,1225,3.902,1226,3.902,1227,3.902,1228,3.902,1229,5.416,1230,3.902,1231,3.902,1232,3.902,1233,3.902,1234,3.902,1235,3.902,1236,3.902,1237,6.321,1238,6.321]],["title/interfaces/IField.html",[74,0.3,410,1.129]],["body/interfaces/IField.html",[3,0.192,4,0.143,5,0.143,8,0.192,9,0.506,29,0.573,30,1.85,34,0.02,35,0.755,36,0.366,37,0.685,42,0.84,50,2.299,73,0.307,74,0.517,79,1.09,231,0.014,232,0.014,303,0.754,304,0.47,399,2.142,410,1.825,435,1.498,436,2.244,438,2.16,439,2.137,441,2.403,442,2.403,443,2.403,444,2.403,445,2.403,451,2.403,453,2.403,454,2.403,461,2.131,465,1.947,472,2.16,478,1.429,488,2.137,537,2.142,540,1.096,755,1.883,776,3.436,1198,3.216,1199,1.214,1200,2.482,1201,2.702,1202,4.819,1203,4.819,1204,2.702,1205,2.482,1206,4.334,1207,4.334,1208,2.702,1209,4.334,1210,3.456,1211,4.061,1212,2.86]],["title/interfaces/IFlatObject.html",[74,0.3,915,2.513]],["body/interfaces/IFlatObject.html",[0,0.3,3,0.195,4,0.146,5,0.146,13,1.424,25,3.488,27,0.732,29,0.447,31,0.617,34,0.021,36,0.331,42,0.512,45,3.355,61,3.108,65,1.701,73,0.259,74,0.328,79,0.692,97,1.116,104,0.817,111,2.375,129,3.043,136,1.54,139,2.342,148,1.372,215,2.711,218,2.401,219,2.711,231,0.014,232,0.014,233,1.336,303,0.479,304,0.479,312,1.705,313,1.705,478,1.204,539,2.183,741,2.342,755,3.043,845,3.108,901,3.033,902,3.409,903,5.076,905,3.409,907,3.409,908,5.406,910,3.409,912,3.409,913,3.409,915,4.099,918,3.409,919,3.409,920,3.409,921,5.076,922,4.523,923,3.409,924,3.409,925,4.523,926,3.409,927,5.076,928,5.406,929,3.409,930,3.409,931,4.523,932,3.409,933,3.409,934,3.409,935,3.409,936,5.626,937,3.409,938,3.409,939,3.409,940,3.409,941,3.409,942,3.409,943,3.409,944,4.523,945,4.523,946,5.406,947,4.523,948,4.523,949,3.108,950,3.409,951,5.076,952,5.626,953,3.409,954,3.409,955,3.409,1199,1.237,1239,3.979,1240,3.979]],["title/interfaces/IForm.html",[74,0.3,1241,2.77]],["body/interfaces/IForm.html",[3,0.263,4,0.197,5,0.197,8,0.263,9,0.618,17,1.238,29,0.549,31,0.831,33,1.1,34,0.02,35,0.818,36,0.333,37,0.48,51,1.042,73,0.263,74,0.442,231,0.017,232,0.017,303,0.767,410,1.979,440,3.012,463,2.056,468,3.306,540,1.503,1199,1.665,1212,2.939,1241,4.853,1242,4.59,1243,6.366,1244,6.366,1245,5.358]],["title/interfaces/IFormObj.html",[74,0.3,1212,1.993]],["body/interfaces/IFormObj.html",[3,0.237,4,0.177,5,0.177,8,0.237,9,0.58,29,0.57,30,1.425,34,0.02,35,0.798,36,0.293,42,0.769,50,2.841,73,0.333,74,0.559,79,1.04,231,0.016,232,0.016,303,0.817,304,0.581,399,3.72,410,2.108,435,1.851,436,1.956,438,1.664,439,1.956,441,1.851,442,1.851,443,1.851,444,1.851,445,1.851,451,1.851,453,1.851,454,1.851,461,2.017,465,1.857,472,2.061,478,1.363,488,2.125,537,2.647,540,1.354,755,2.327,776,2.647,1198,3.068,1199,1.5,1200,3.067,1201,3.339,1202,4.49,1203,4.49,1204,3.339,1205,3.067,1206,3.339,1207,3.339,1208,3.339,1209,3.339,1210,2.841,1211,3.339,1212,3.824]],["title/interfaces/IHTMLAttributes.html",[74,0.3,472,1.253]],["body/interfaces/IHTMLAttributes.html",[3,0.228,4,0.171,5,0.171,8,0.228,9,0.566,29,0.572,30,1.372,34,0.02,35,0.791,36,0.338,37,0.658,42,0.751,50,2.736,73,0.328,74,0.552,79,1.165,231,0.016,232,0.016,303,0.806,304,0.56,399,2.549,410,1.814,435,2.568,436,1.911,438,1.603,439,2.257,441,1.783,442,1.783,443,1.783,444,1.783,445,1.783,451,1.783,453,1.783,454,1.783,461,1.983,465,1.814,472,2.201,478,1.527,488,2.089,537,2.549,540,1.304,755,2.241,776,2.549,1198,2.997,1199,1.445,1200,2.954,1201,3.215,1202,4.414,1203,4.414,1204,4.63,1205,4.253,1206,3.215,1207,3.215,1208,3.215,1209,3.215,1210,2.736,1211,3.215,1212,3.202]],["title/interfaces/ISliderConfig.html",[74,0.3,1246,2.309]],["body/interfaces/ISliderConfig.html",[3,0.269,4,0.201,5,0.201,8,0.269,9,0.627,34,0.02,36,0.347,73,0.269,74,0.453,79,1.303,231,0.017,232,0.017,478,1.565,1199,1.706,1205,4.501,1246,4.104,1247,4.701,1248,7.083,1249,7.083,1250,7.083]],["title/interfaces/ITableHeader.html",[74,0.3,1251,2.309]],["body/interfaces/ITableHeader.html",[0,0.232,1,1.576,3,0.151,4,0.113,5,0.22,8,0.151,9,0.428,10,1.061,12,1.807,14,1.878,27,0.565,29,0.519,30,1.303,34,0.021,36,0.253,37,0.506,54,1.807,67,1.394,72,1.357,73,0.277,74,0.364,75,1.684,76,1.684,77,1.684,78,1.684,79,1.084,80,1.684,81,1.684,82,1.684,84,1.684,97,1.584,104,1.159,111,2.189,128,2.346,136,1.365,148,1.948,156,1.421,189,1.684,190,1.684,191,1.684,192,1.807,231,0.012,232,0.012,295,2.598,303,0.805,304,0.37,385,3.283,403,0.605,409,0.954,411,1.445,413,1.005,414,0.954,423,1.178,431,1.005,439,1.005,456,1.605,461,2.079,463,1.693,478,1.365,539,3.417,540,0.861,633,0.777,648,0.818,654,0.906,658,1.116,660,1.116,728,2.124,760,2.124,791,1.576,848,1.951,949,1.807,1005,3.053,1101,2.266,1173,2.124,1179,2.124,1181,2.124,1183,2.124,1199,0.954,1251,3.283,1252,1.951,1253,4.305,1254,4.305,1255,4.305,1256,2.341,1257,2.341,1258,3.364,1259,3.364,1260,3.364,1261,2.341,1262,3.364,1263,3.364,1264,3.364,1265,2.341,1266,2.341,1267,2.124,1268,3.053,1269,2.805,1270,2.341,1271,2.341,1272,2.341,1273,2.341,1274,2.341,1275,2.341,1276,3.938,1277,2.341,1278,2.341,1279,3.053,1280,2.341,1281,2.341,1282,2.341,1283,2.341,1284,2.341,1285,2.341,1286,2.341,1287,2.341,1288,2.341,1289,2.341,1290,2.341,1291,3.364,1292,2.341,1293,2.341,1294,2.341,1295,2.341,1296,2.341,1297,2.341,1298,2.341,1299,2.341,1300,2.341,1301,2.341,1302,2.341,1303,2.341,1304,2.341,1305,2.341,1306,2.341,1307,3.364,1308,2.341,1309,2.341,1310,4.561,1311,2.341,1312,3.364,1313,2.341,1314,2.341,1315,2.341,1316,3.053,1317,2.341,1318,3.364,1319,2.341,1320,3.364,1321,2.341,1322,2.341,1323,2.341,1324,2.341,1325,2.341,1326,2.341,1327,2.341,1328,2.341,1329,3.364,1330,3.364,1331,2.341,1332,2.341,1333,3.574,1334,2.341,1335,2.341,1336,2.341,1337,2.341,1338,3.364,1339,3.364,1340,2.341,1341,3.364,1342,2.341,1343,2.341,1344,3.938,1345,2.341,1346,2.341,1347,2.341,1348,3.364,1349,2.341,1350,2.341,1351,2.341,1352,2.341,1353,2.341,1354,2.341,1355,2.341,1356,2.341,1357,2.341,1358,2.341,1359,2.341,1360,2.341,1361,2.341,1362,2.341,1363,2.341,1364,2.341,1365,2.341,1366,2.341,1367,2.341,1368,2.341,1369,2.341,1370,2.341,1371,2.341,1372,2.341,1373,2.341,1374,2.341,1375,2.341,1376,2.341,1377,2.341,1378,3.364,1379,2.341,1380,3.938,1381,3.364,1382,2.341,1383,3.938,1384,3.364,1385,2.341,1386,2.341,1387,2.341,1388,2.341,1389,2.341]],["title/interfaces/ITableViewOptions.html",[74,0.3,1269,2.309]],["body/interfaces/ITableViewOptions.html",[0,0.228,1,1.55,3,0.148,4,0.111,5,0.218,8,0.148,9,0.423,10,1.048,12,1.777,14,1.86,27,0.556,29,0.482,30,1.287,34,0.021,36,0.304,37,0.391,54,1.777,67,1.371,72,1.347,73,0.275,74,0.36,75,1.656,76,1.656,77,1.656,78,1.656,79,1.254,80,1.656,81,1.656,82,1.656,84,1.656,97,1.572,104,1.15,111,2.18,128,2.324,136,1.356,148,1.933,156,1.415,189,1.656,190,1.656,191,1.656,192,1.777,231,0.012,232,0.012,295,2.566,303,0.802,304,0.364,385,3.252,403,0.598,409,0.938,411,1.427,413,0.988,414,0.938,423,1.158,431,0.988,439,0.988,456,1.585,461,2.07,463,1.672,478,1.167,539,3.397,540,0.847,633,0.764,648,0.804,654,0.891,658,1.097,660,1.097,728,2.088,760,2.088,791,1.55,848,1.918,949,1.777,1005,3.016,1101,2.238,1173,2.088,1179,2.088,1181,2.088,1183,2.088,1199,0.938,1251,2.77,1252,1.918,1253,2.301,1254,2.301,1255,2.301,1256,2.301,1257,2.301,1258,3.323,1259,3.323,1260,3.323,1261,2.301,1262,3.323,1263,3.323,1264,3.323,1265,2.301,1266,2.301,1267,2.088,1268,3.016,1269,3.252,1270,4.272,1271,4.272,1272,4.272,1273,4.272,1274,4.272,1275,4.272,1276,3.901,1277,2.301,1278,2.301,1279,3.016,1280,2.301,1281,2.301,1282,2.301,1283,2.301,1284,2.301,1285,2.301,1286,2.301,1287,2.301,1288,2.301,1289,2.301,1290,2.301,1291,3.323,1292,2.301,1293,2.301,1294,2.301,1295,2.301,1296,2.301,1297,2.301,1298,2.301,1299,2.301,1300,2.301,1301,2.301,1302,2.301,1303,2.301,1304,2.301,1305,2.301,1306,2.301,1307,3.323,1308,2.301,1309,2.301,1310,4.53,1311,2.301,1312,3.323,1313,2.301,1314,2.301,1315,2.301,1316,3.016,1317,2.301,1318,3.323,1319,2.301,1320,3.323,1321,2.301,1322,2.301,1323,2.301,1324,2.301,1325,2.301,1326,2.301,1327,2.301,1328,2.301,1329,3.323,1330,3.323,1331,2.301,1332,2.301,1333,3.54,1334,2.301,1335,2.301,1336,2.301,1337,2.301,1338,3.323,1339,3.323,1340,2.301,1341,3.323,1342,2.301,1343,2.301,1344,3.901,1345,2.301,1346,2.301,1347,2.301,1348,3.323,1349,2.301,1350,2.301,1351,2.301,1352,2.301,1353,2.301,1354,2.301,1355,2.301,1356,2.301,1357,2.301,1358,2.301,1359,2.301,1360,2.301,1361,2.301,1362,2.301,1363,2.301,1364,2.301,1365,2.301,1366,2.301,1367,2.301,1368,2.301,1369,2.301,1370,2.301,1371,2.301,1372,2.301,1373,2.301,1374,2.301,1375,2.301,1376,2.301,1377,2.301,1378,3.323,1379,2.301,1380,3.901,1381,3.323,1382,2.301,1383,3.901,1384,3.323,1385,2.301,1386,2.301,1387,2.301,1388,2.301,1389,2.301]],["title/interfaces/IValidator.html",[74,0.3,488,1.189]],["body/interfaces/IValidator.html",[3,0.252,4,0.189,5,0.189,8,0.252,9,0.603,29,0.504,34,0.02,36,0.358,37,0.678,73,0.252,74,0.424,79,1.255,231,0.017,232,0.017,315,2.972,447,3.149,448,3.149,449,3.149,450,3.149,452,3.149,478,1.714,488,2.035,522,3.149,1199,1.6,1390,4.41]],["title/components/InfoDialogSimpleComponent.html",[403,0.498,639,1.019]],["body/components/InfoDialogSimpleComponent.html",[0,0.272,3,0.353,4,0.132,5,0.181,8,0.177,9,0.479,10,0.866,13,1.667,14,2.204,17,0.96,27,0.909,29,0.425,31,0.984,33,0.74,34,0.02,35,0.633,36,0.297,37,0.323,41,1.187,42,0.635,51,0.701,58,0.866,72,0.866,73,0.177,104,0.74,128,1.637,136,0.822,148,1.943,231,0.013,232,0.013,303,0.595,304,0.434,403,0.773,404,1.064,405,1.703,406,1.31,407,1.243,409,1.535,411,1.844,412,1.243,413,2.401,414,2.271,415,1.31,417,1.31,431,1.984,474,1.18,544,1.064,615,1.31,616,1.703,617,1.796,618,1.31,619,2.204,620,1.31,621,1.12,622,1.31,623,1.31,624,1.064,625,1.31,626,1.011,627,1.243,628,1.31,629,1.064,630,1.31,631,1.796,632,1.011,633,1.884,634,1.796,635,1.064,636,1.064,637,1.31,638,1.31,639,1.7,640,1.064,641,1.31,642,1.064,643,1.31,644,1.064,645,1.31,646,1.064,647,1.31,648,0.96,649,1.31,650,1.064,651,1.31,652,1.31,653,1.383,654,1.936,658,1.796,660,1.796,709,2.535,731,2.493,776,3.597,778,2.747,779,3.898,780,4.193,783,2.493,784,3.765,789,2.747,790,2.747,791,1.85,792,2.747,793,3.765,794,2.747,803,3.765,804,2.493,805,3.416,806,2.747,807,2.29,808,2.493,809,2.747,810,2.747,811,2.747,812,4.62,813,2.747,814,3.765,815,2.747,816,3.416,817,2.747,818,2.747,819,2.747,820,2.747,821,3.898,823,2.747,824,2.747,825,3.765,826,3.765,827,3.765,1023,5.439,1031,4.536,1032,4.536,1045,2.747,1046,4.231,1047,4.826,1048,4.231,1049,4.231,1050,3.087,1051,3.087,1052,3.087,1061,4.231,1063,3.087,1064,4.231,1391,4.938,1392,3.604,1393,4.938,1394,3.604,1395,4.938,1396,3.604,1397,3.604,1398,3.604,1399,4.938]],["title/interfaces/MenuNode.html",[74,0.3,402,2.309]],["body/interfaces/MenuNode.html",[0,0.417,3,0.271,4,0.203,5,0.203,8,0.271,9,0.63,29,0.546,34,0.02,35,0.814,36,0.318,37,0.582,73,0.318,74,0.456,231,0.017,232,0.017,397,4.123,398,4.217,399,3.97,402,4.6,1199,1.72]],["title/interfaces/Options.html",[30,1.073,74,0.3]],["body/interfaces/Options.html",[0,0.289,1,1.301,3,0.124,4,0.17,5,0.093,6,1.492,7,1.492,8,0.226,9,0.372,10,1.11,11,1.932,12,3.03,13,1.698,14,2.522,15,4.486,16,1.932,19,1.932,20,1.932,21,1.932,22,1.932,23,1.932,24,1.932,25,4.11,28,1.932,29,0.538,30,1.716,34,0.021,36,0.337,38,2.921,45,1.611,47,1.932,49,1.932,53,1.754,54,1.492,56,3.561,57,2.255,58,1.11,60,1.932,61,1.492,62,3.924,65,1.237,67,2.742,68,1.932,70,1.754,71,1.932,72,1.11,73,0.252,74,0.209,75,3.032,76,3.032,77,3.032,78,3.032,79,1.246,80,3.032,81,3.032,82,3.032,83,3.824,84,3.032,85,3.824,86,3.824,87,3.824,88,1.611,89,1.932,90,1.932,91,1.932,92,1.932,93,1.932,94,1.932,95,1.932,96,1.932,97,1.693,98,1.932,99,1.932,100,1.932,101,1.932,102,1.932,103,1.932,104,0.786,105,1.932,106,1.932,107,1.932,108,1.932,109,1.932,110,1.932,111,1.685,112,2.435,113,1.754,114,1.754,115,1.754,116,1.754,117,1.754,118,1.754,119,1.754,120,1.754,121,1.754,122,1.754,123,1.754,124,1.754,125,1.754,126,1.754,127,1.47,128,1.151,129,2.227,130,1.932,131,2.921,132,1.611,133,2.921,134,1.932,135,2.121,136,1.556,137,1.932,138,1.932,139,3.745,140,1.932,141,4.85,142,1.932,143,1.932,144,1.932,145,1.932,146,1.932,147,2.921,148,2.082,149,1.932,150,1.932,151,1.932,152,1.932,153,1.932,154,1.932,155,1.932,156,1,157,1.932,158,1.932,159,1.932,160,2.921,161,2.921,162,2.921,163,1.932,164,1.932,165,1.932,166,1.754,167,1.932,168,1.932,169,1.932,170,1.932,171,1.932,172,1.932,173,1.932,174,1.932,175,1.932,176,1.932,177,1.932,178,1.932,179,1.932,180,1.932,181,4.72,182,1.932,183,1.932,184,4.214,185,3.924,186,3.924,187,2.921,188,1.932,189,2.102,190,2.102,191,2.102,192,2.255,193,1.932,194,1.932,195,2.921,196,1.932,197,1.932,198,3.521,199,1.932,200,2.921,201,1.932,202,1.932,203,1.932,204,3.521,205,1.932,206,1.932,207,1.932,208,1.932,209,1.611,210,1.754,211,1.611,212,1.754,213,1.754,214,1.932,215,1.967,216,1.754,217,2.255,218,1.553,219,1.967,220,1.932,221,1.932,222,1.754,223,1.932,224,1.932,225,1.754,226,1.611,227,1.754,228,1.932,229,1.932,230,2.921,231,0.01,232,0.01,1199,0.788]],["title/components/RadiobuttonComponent.html",[403,0.498,640,1.073]],["body/components/RadiobuttonComponent.html",[0,0.197,3,0.192,4,0.096,5,0.144,8,0.128,9,0.38,10,0.942,13,1.571,17,0.762,27,0.481,29,0.507,30,1.389,31,1.159,33,0.965,34,0.02,35,0.686,36,0.362,37,0.422,41,1.615,42,0.883,51,1.29,58,1.256,65,0.628,72,1.131,73,0.128,79,0.682,97,0.733,104,0.536,127,1.002,135,2.34,156,0.848,231,0.01,232,0.01,303,0.708,304,0.315,315,1.12,403,0.645,404,2.215,405,1.352,406,0.95,407,0.901,409,1.218,410,1.462,411,1.54,412,0.901,413,2.297,414,2.167,415,0.95,416,1.588,417,0.95,418,2.52,419,2.836,420,1.89,421,1.78,422,1.89,423,2.256,424,2.701,425,2.268,426,1.89,427,2.268,428,2.268,429,2.268,430,2.268,431,1.711,432,1.89,433,2.268,434,1.78,435,1.504,436,1.283,437,1.89,438,1.352,439,1.283,440,1.68,441,2.005,442,1.504,443,1.504,444,1.504,445,1.504,446,1.89,447,2.136,448,2.136,449,2.136,450,2.136,451,1.504,452,2.136,453,1.504,454,1.504,455,1.26,456,2.036,457,2.543,458,1.932,461,1.625,463,1.002,465,0.812,468,1.187,472,0.901,474,1.283,478,1.192,483,1.26,488,0.855,494,1.26,501,1.26,507,1.89,508,1.187,509,1.187,510,1.26,511,1.26,512,1.26,513,1.89,514,1.26,515,1.26,516,1.26,517,1.26,518,1.89,519,1.26,520,1.26,521,1.26,522,1.78,523,1.26,524,1.26,525,1.26,526,1.26,527,1.26,528,1.26,529,1.26,530,1.26,531,1.26,532,1.26,535,1.808,540,0.733,541,1.26,542,1.187,544,0.771,615,0.95,616,1.352,617,1.425,618,0.95,619,1.9,620,0.95,621,0.812,622,0.95,623,0.95,624,0.771,625,0.95,626,0.733,627,0.901,628,0.95,629,0.771,630,0.95,631,1.425,632,0.733,633,0.992,634,1.425,635,0.771,636,0.771,637,0.95,638,0.95,639,0.733,640,1.543,641,0.95,642,0.771,643,0.95,644,0.771,645,0.95,646,0.771,647,0.95,648,0.696,649,0.95,650,0.771,651,0.95,652,0.95,653,1.002,654,1.389,656,2.012,658,1.425,660,1.425,665,3.83,666,1.341,667,1.341,668,1.341,669,1.341,670,1.341,671,1.341,672,1.341,673,1.341,674,1.341,675,1.341,676,1.341,677,1.341,678,1.341,679,1.341,680,1.341,681,1.341,682,1.341,683,1.341,684,1.341,685,1.341,686,1.341,687,1.341,688,1.992,689,1.341,690,1.341,691,1.341,692,1.341,693,1.341,694,1.341,695,1.341,696,1.341,697,1.341,698,1.341,700,1.538,701,1.538,702,1.341,703,1.341,704,1.341,705,1.26,706,1.341,707,1.341,708,1.341,709,2.012,992,1.808,1075,1.66,1198,2.415,1400,2.238,1401,3.92,1402,4.704,1403,3.92,1404,3.92,1405,1.808,1406,2.613,1407,3.358,1408,2.613]],["title/components/SelectComponent.html",[403,0.498,642,1.073]],["body/components/SelectComponent.html",[0,0.197,3,0.192,4,0.096,5,0.144,8,0.128,9,0.38,10,0.94,13,1.569,17,0.76,27,0.479,29,0.507,30,1.386,31,1.159,33,0.964,34,0.02,35,0.685,36,0.362,37,0.421,41,1.614,42,0.882,51,1.289,58,1.254,65,0.626,72,1.128,73,0.128,79,0.681,97,0.731,104,0.535,127,0.999,135,2.337,156,0.846,231,0.01,232,0.01,303,0.707,304,0.314,315,1.116,403,0.644,404,2.214,405,1.349,406,0.947,407,0.898,409,1.216,410,1.459,411,1.537,412,0.898,413,2.296,414,2.166,415,0.947,416,1.585,417,0.947,418,2.517,419,2.832,420,1.886,421,1.776,422,1.886,423,2.253,424,2.697,425,2.264,426,1.886,427,2.264,428,2.264,429,2.264,430,2.264,431,1.708,432,1.886,433,2.264,434,1.776,435,1.5,436,1.28,437,1.886,438,1.349,439,1.28,440,1.676,441,2.002,442,1.5,443,1.5,444,1.5,445,1.5,446,1.886,447,2.132,448,2.132,449,2.132,450,2.132,451,1.5,452,2.132,453,1.5,454,1.5,455,1.256,456,2.034,457,2.54,458,1.929,461,1.622,463,0.999,465,0.81,468,1.183,472,0.898,474,1.28,478,1.191,483,1.256,488,0.853,494,1.256,501,1.256,507,1.886,508,1.183,509,1.183,510,1.256,511,1.256,512,1.256,513,1.886,514,1.256,515,1.256,516,1.256,517,1.256,518,1.886,519,1.256,520,1.256,521,1.256,522,1.776,523,1.256,524,1.256,525,1.256,526,1.256,527,1.256,528,1.256,529,1.256,530,1.256,531,1.256,532,1.256,535,1.802,540,0.731,541,1.256,542,1.183,544,0.769,615,0.947,616,1.349,617,1.422,618,0.947,619,1.898,620,0.947,621,0.81,622,0.947,623,0.947,624,0.769,625,0.947,626,0.731,627,0.898,628,0.947,629,0.769,630,0.947,631,1.422,632,0.731,633,0.99,634,1.422,635,0.769,636,0.769,637,0.947,638,0.947,639,0.731,640,0.769,641,0.947,642,1.541,643,0.947,644,0.769,645,0.947,646,0.769,647,0.947,648,0.694,649,0.947,650,0.769,651,0.947,652,0.947,653,0.999,654,1.386,656,2.008,658,1.422,660,1.422,665,3.829,666,1.337,667,1.337,668,1.337,669,1.337,670,1.337,671,1.337,672,1.337,673,1.337,674,1.337,675,1.337,676,1.337,677,1.337,678,1.337,679,1.337,680,1.337,681,1.337,682,1.337,683,1.337,684,1.337,685,1.337,686,1.337,687,1.337,689,1.337,690,1.337,691,1.337,692,1.337,693,1.337,694,1.337,695,1.337,696,1.337,697,1.337,698,1.337,702,1.337,703,1.337,704,1.337,705,1.256,706,1.337,707,1.337,708,1.337,709,2.008,991,2.231,1071,1.986,1075,1.655,1198,2.411,1333,2.705,1405,1.802,1407,3.35,1409,2.231,1410,4.695,1411,3.911,1412,3.911,1413,2.231,1414,2.605,1415,3.35,1416,3.911,1417,3.911,1418,3.911]],["title/components/SlideToggleComponent.html",[403,0.498,646,1.073]],["body/components/SlideToggleComponent.html",[0,0.197,3,0.192,4,0.096,5,0.144,8,0.128,9,0.38,10,0.942,13,1.57,17,0.762,27,0.48,29,0.518,31,1.16,33,0.965,34,0.02,35,0.685,36,0.363,37,0.422,41,1.615,42,0.883,51,1.29,58,1.256,65,0.627,72,1.256,73,0.128,79,0.682,97,0.732,104,0.536,127,2.004,135,2.339,156,0.848,231,0.01,232,0.01,303,0.708,304,0.314,315,1.119,403,0.645,404,2.215,405,1.351,406,0.949,407,0.9,409,1.218,410,1.461,411,1.539,412,0.9,413,2.297,414,2.166,415,0.949,416,1.587,417,0.949,418,2.52,419,2.835,420,1.889,421,1.779,422,1.889,423,2.255,424,2.7,425,2.267,426,1.889,427,2.267,428,2.267,429,2.267,430,2.267,431,1.71,432,1.889,433,2.267,434,1.779,435,1.503,436,1.282,437,1.889,438,1.351,439,1.282,440,1.679,441,2.004,442,1.503,443,1.503,444,1.503,445,1.503,446,1.889,447,2.135,448,2.135,449,2.135,450,2.135,451,1.503,452,2.135,453,1.503,454,1.503,455,1.259,456,2.036,457,2.543,458,1.931,461,1.624,463,1.002,465,0.812,468,1.186,472,0.9,474,1.282,478,1.192,483,1.259,488,0.855,494,1.259,501,1.259,507,1.889,508,1.186,509,1.186,510,1.259,511,1.259,512,1.259,513,1.889,514,1.259,515,1.259,516,1.259,517,1.259,518,1.889,519,1.259,520,1.259,521,1.259,522,1.779,523,1.259,524,1.259,525,1.259,526,1.259,527,1.259,528,1.259,529,1.259,530,1.259,531,1.259,532,1.259,540,0.732,541,1.259,542,1.186,544,0.771,615,0.949,616,1.351,617,1.424,618,0.949,619,1.9,620,0.949,621,0.812,622,0.949,623,0.949,624,0.771,625,0.949,626,0.732,627,0.9,628,0.949,629,0.771,630,0.949,631,1.424,632,0.732,633,0.991,634,1.424,635,0.771,636,0.771,637,0.949,638,0.949,639,0.732,640,0.771,641,0.949,642,0.771,643,0.949,644,0.771,645,0.949,646,1.543,647,0.949,648,0.696,649,0.949,650,0.771,651,0.949,652,0.949,653,1.002,654,1.543,656,2.011,658,1.424,660,1.424,665,3.83,666,1.34,667,1.34,668,1.34,669,1.34,670,1.34,671,1.34,672,1.34,673,1.34,674,1.34,675,1.34,676,1.34,677,1.34,678,1.34,679,1.34,680,1.34,681,1.34,682,1.34,683,1.34,684,1.34,685,1.34,686,1.34,687,1.34,689,1.34,690,1.34,691,1.34,692,1.34,693,1.34,694,1.34,695,1.34,696,1.34,697,1.34,698,1.34,701,1.537,702,1.34,703,1.34,704,1.34,705,1.259,706,1.34,707,1.34,708,1.34,992,1.806,1075,1.659,1246,2.988,1405,1.806,1413,2.237,1419,2.237,1420,3.917,1421,4.702,1422,3.917,1423,4.702,1424,3.917,1425,2.611,1426,2.611,1427,2.237,1428,3.917]],["title/components/SliderComponent.html",[403,0.498,644,1.073]],["body/components/SliderComponent.html",[0,0.199,3,0.194,4,0.097,5,0.145,8,0.129,9,0.383,10,0.949,13,1.574,17,0.767,27,0.485,29,0.508,31,1.16,33,0.971,34,0.02,35,0.688,36,0.362,37,0.424,41,1.619,42,0.885,51,1.293,58,1.262,65,0.634,72,1.137,73,0.129,79,0.687,97,0.74,104,0.541,127,2.015,135,2.347,156,0.854,231,0.01,232,0.01,303,0.711,304,0.318,315,1.13,403,0.649,404,2.216,405,1.361,406,0.959,407,0.909,409,1.227,410,1.47,411,1.548,412,0.909,413,2.3,414,2.17,415,0.959,416,1.599,417,0.959,418,2.532,419,2.846,420,1.903,421,1.792,422,1.903,423,2.264,424,2.711,425,2.281,426,1.903,427,2.281,428,2.281,429,2.281,430,2.281,431,1.719,432,1.903,433,2.281,434,1.792,435,1.514,436,1.292,437,1.903,438,1.361,439,1.292,440,1.692,441,2.015,442,1.514,443,1.514,444,1.514,445,1.514,446,1.903,447,2.148,448,2.148,449,2.148,450,2.148,451,1.514,452,2.148,453,1.514,454,1.514,455,1.272,456,2.044,457,2.553,458,1.939,461,1.632,463,1.012,465,0.82,468,1.198,472,0.909,474,1.292,478,1.198,483,1.272,488,0.863,494,1.272,501,1.272,507,1.903,508,1.198,509,1.198,510,1.272,511,1.272,512,1.272,513,1.903,514,1.272,515,1.272,516,1.272,517,1.272,518,1.903,519,1.272,520,1.272,521,1.272,522,1.792,523,1.272,524,1.272,525,1.272,526,1.272,527,1.272,528,1.272,529,1.272,530,1.272,531,1.272,532,1.272,540,0.74,541,1.272,542,1.198,544,0.779,615,0.959,616,1.361,617,1.435,618,0.959,619,1.909,620,0.959,621,0.82,622,0.959,623,0.959,624,0.779,625,0.959,626,0.74,627,0.909,628,0.959,629,0.779,630,0.959,631,1.435,632,0.74,633,0.999,634,1.435,635,0.779,636,0.779,637,0.959,638,0.959,639,0.74,640,0.779,641,0.959,642,0.779,643,0.959,644,1.55,645,0.959,646,0.779,647,0.959,648,0.703,649,0.959,650,0.779,651,0.959,652,0.959,653,1.012,654,1.397,656,2.026,658,1.435,660,1.435,665,3.833,666,1.354,667,1.354,668,1.354,669,1.354,670,1.354,671,1.354,672,1.354,673,1.354,674,1.354,675,1.354,676,1.354,677,1.354,678,1.354,679,1.354,680,1.354,681,1.354,682,1.354,683,1.354,684,1.354,685,1.354,686,1.354,687,1.354,688,2.01,689,1.354,690,1.354,691,1.354,692,1.354,693,1.354,694,1.354,695,1.354,696,1.354,697,1.354,698,1.354,700,1.552,701,1.552,702,1.354,703,1.354,704,1.354,705,1.272,706,1.354,707,1.354,708,1.354,992,1.824,1075,1.676,1246,3.006,1405,1.824,1427,2.259,1429,2.259,1430,3.947,1431,4.73,1432,3.947,1433,3.947]],["title/components/TableComponent.html",[403,0.498,648,0.968]],["body/components/TableComponent.html",[0,0.158,1,1.075,3,0.162,4,0.077,5,0.214,8,0.103,9,0.321,10,0.795,12,1.233,14,1.957,17,0.643,27,0.609,29,0.489,30,0.976,31,1.117,33,1.233,34,0.021,35,0.706,36,0.338,37,0.539,41,1.354,42,0.725,51,1.289,54,2.411,58,1.509,67,0.951,72,1.217,73,0.228,74,0.273,75,1.149,76,1.149,77,1.149,78,1.149,79,1.016,80,1.149,81,1.149,82,1.149,84,1.149,97,1.305,104,0.955,111,1.967,128,1.86,136,1.155,148,1.746,156,1.332,181,3.503,189,1.149,190,1.149,191,1.149,192,1.233,231,0.009,232,0.009,295,1.946,303,0.724,304,0.252,385,2.603,403,0.562,404,0.618,405,1.14,406,0.762,407,0.722,409,1.028,411,1.341,412,0.722,413,2.21,414,2.081,415,0.762,417,0.762,423,1.571,431,1.523,434,1.501,439,0.686,456,1.202,461,2.013,463,1.571,474,0.686,478,1.228,539,2.952,540,0.587,544,0.618,615,0.762,616,1.14,617,1.202,618,0.762,619,1.691,620,0.762,621,0.651,622,0.762,623,0.762,624,0.618,625,0.762,626,0.587,627,0.722,628,0.762,629,0.618,630,0.762,631,1.202,632,0.587,633,1.177,634,1.202,635,0.618,636,0.618,637,0.762,638,0.762,639,0.587,640,0.618,641,0.762,642,0.618,643,0.762,644,0.618,645,0.762,646,0.618,647,0.762,648,1.239,649,0.762,650,0.618,651,0.762,652,0.762,653,0.804,654,2.133,658,1.202,660,1.202,709,1.697,728,1.449,760,1.449,783,2.287,791,1.075,804,1.449,805,2.287,816,1.449,848,2.603,949,1.233,1004,1.794,1005,3.218,1043,1.597,1101,2.388,1173,1.449,1179,1.449,1181,1.449,1183,1.449,1251,2.603,1252,1.331,1253,1.597,1254,1.597,1255,1.597,1256,1.597,1257,1.597,1258,3.122,1259,3.122,1260,3.546,1261,1.597,1262,3.122,1263,3.122,1264,3.122,1265,1.597,1266,1.597,1267,1.449,1268,2.287,1269,2.603,1270,1.597,1271,1.597,1272,1.597,1273,1.597,1274,1.597,1275,1.597,1276,3.122,1277,1.597,1278,1.597,1279,3.218,1280,1.597,1281,1.597,1282,1.597,1283,1.597,1284,1.597,1285,1.597,1286,1.597,1287,1.597,1288,1.597,1289,2.52,1290,3.122,1291,3.86,1292,2.52,1293,3.122,1294,3.122,1295,3.122,1296,3.122,1297,3.122,1298,3.122,1299,3.122,1300,2.52,1301,3.122,1302,2.52,1303,3.122,1304,3.86,1305,3.122,1306,2.52,1307,2.52,1308,1.597,1309,1.597,1310,3.86,1311,2.52,1312,3.546,1313,2.52,1314,2.52,1315,2.52,1316,3.218,1317,3.546,1318,2.52,1319,1.597,1320,2.52,1321,1.597,1322,2.52,1323,2.52,1324,2.52,1325,3.546,1326,1.597,1327,1.597,1328,1.597,1329,2.52,1330,2.52,1331,1.597,1332,1.597,1333,2.834,1334,1.597,1335,1.597,1336,1.597,1337,1.597,1338,2.52,1339,2.52,1340,1.597,1341,2.52,1342,1.597,1343,1.597,1344,3.86,1345,1.597,1346,3.546,1347,1.597,1348,2.52,1349,1.597,1350,1.597,1351,2.52,1352,1.597,1353,1.597,1354,1.597,1355,1.597,1356,1.597,1357,1.597,1358,2.52,1359,1.597,1360,2.52,1361,1.597,1362,2.52,1363,1.597,1364,3.546,1365,1.597,1366,1.597,1367,1.597,1368,1.597,1369,2.52,1370,1.597,1371,1.597,1372,1.597,1373,1.597,1374,1.597,1375,2.52,1376,1.597,1377,1.597,1378,2.52,1379,1.597,1380,3.122,1381,2.52,1382,1.597,1383,3.122,1384,2.52,1385,1.597,1386,1.597,1387,1.597,1388,1.597,1389,1.597,1434,3.306,1435,4.096,1436,3.306,1437,3.306,1438,3.306,1439,3.306,1440,3.306,1441,3.306,1442,3.306,1443,4.096,1444,3.306,1445,3.306,1446,2.095,1447,2.095,1448,2.095,1449,2.095,1450,2.095,1451,2.095,1452,2.095,1453,2.095,1454,1.794,1455,2.095,1456,2.095,1457,2.095,1458,3.306,1459,2.095,1460,2.095,1461,2.095,1462,2.095,1463,2.095,1464,2.095,1465,2.095,1466,2.095,1467,2.095,1468,2.095,1469,2.095,1470,2.095,1471,2.095,1472,2.095,1473,2.095,1474,2.095,1475,2.095,1476,2.095,1477,2.095,1478,2.095,1479,3.306,1480,4.651,1481,3.306,1482,3.306,1483,3.306,1484,3.306,1485,3.306,1486,3.306,1487,1.597,1488,2.095,1489,2.095,1490,2.095,1491,2.095]],["title/components/TextInputComponent.html",[403,0.498,650,1.073]],["body/components/TextInputComponent.html",[0,0.192,3,0.188,4,0.093,5,0.141,8,0.125,9,0.373,10,0.923,13,1.56,17,0.747,27,0.468,29,0.504,31,1.157,33,0.95,34,0.021,35,0.68,36,0.361,37,0.415,41,1.625,42,0.886,51,1.282,58,1.24,65,0.611,72,1.331,73,0.125,79,0.669,97,0.714,104,0.522,127,0.976,135,2.319,156,0.832,231,0.01,232,0.01,303,0.667,304,0.306,315,1.091,403,0.635,404,2.211,405,1.325,406,0.925,407,0.877,409,1.194,410,1.439,411,1.515,412,0.877,413,2.287,414,2.157,415,0.925,416,1.876,417,0.925,418,2.487,419,2.807,420,1.853,421,1.745,422,1.853,423,2.234,424,2.915,425,2.232,426,1.853,427,2.232,428,2.232,429,2.232,430,2.232,431,1.688,432,1.853,433,2.232,434,1.745,435,1.474,436,1.258,437,1.853,438,1.325,439,1.258,440,1.984,441,2.234,442,1.474,443,1.474,444,1.474,445,1.474,446,2.807,447,2.342,448,2.102,449,2.102,450,2.102,451,1.474,452,2.102,453,1.474,454,1.474,455,1.227,456,2.013,457,2.514,458,1.91,461,1.603,463,0.976,465,0.791,468,1.155,472,0.877,474,2.085,478,1.263,483,1.227,488,0.833,494,1.227,501,1.227,507,1.853,508,1.155,509,1.155,510,1.227,511,1.227,512,1.227,513,1.853,514,1.227,515,1.227,516,1.227,517,1.227,518,1.853,519,1.227,520,1.227,521,1.227,522,1.745,523,1.227,524,1.227,525,1.227,526,1.227,527,1.227,528,1.227,529,1.227,530,1.227,531,1.227,532,1.227,540,0.714,541,1.227,542,1.155,544,0.751,615,0.925,616,1.325,617,1.397,618,0.925,619,1.875,620,0.925,621,0.791,622,0.925,623,0.925,624,0.751,625,0.925,626,0.714,627,0.877,628,0.925,629,0.751,630,0.925,631,1.397,632,0.714,633,0.972,634,1.397,635,0.751,636,0.751,637,0.925,638,0.925,639,0.714,640,0.751,641,0.925,642,0.751,643,0.925,644,0.751,645,0.925,646,0.751,647,0.925,648,0.678,649,0.925,650,1.523,651,0.925,652,0.925,653,0.976,654,1.367,656,1.973,658,1.397,660,1.397,665,3.822,666,1.306,667,1.306,668,1.306,669,1.306,670,1.306,671,1.306,672,1.306,673,1.306,674,1.306,675,1.306,676,1.306,677,1.306,678,1.306,679,1.306,680,1.306,681,1.306,682,1.306,683,1.306,684,1.306,685,1.306,686,1.306,687,1.306,689,1.306,690,1.306,691,1.306,692,1.306,693,1.306,694,1.306,695,1.306,696,1.306,697,1.306,698,1.306,699,1.76,700,1.498,701,1.498,702,1.306,703,1.306,704,1.306,705,1.227,706,1.306,707,1.306,708,1.306,821,1.76,986,1.76,987,3.529,988,2.929,990,3.292,1043,2.929,1071,1.94,1074,2.18,1157,3.529,1158,3.529,1316,3.203,1487,1.94,1492,3.292,1493,2.544]],["title/pipes/TranslatePipe.html",[1101,1.865,1494,2.309]],["body/pipes/TranslatePipe.html",[0,0.403,3,0.262,4,0.196,5,0.196,17,1.039,31,0.828,33,1.096,34,0.02,35,0.763,36,0.262,37,0.479,51,1.039,73,0.262,97,1.498,136,1.219,219,2.742,231,0.017,232,0.017,303,0.765,304,0.643,316,2.742,409,1.66,412,1.842,458,2.192,709,3.483,755,2.576,1101,3.263,1494,4.039,1495,5.341,1496,4.576,1497,5.341,1498,6.355,1499,5.341,1500,6.355,1501,5.341,1502,5.341,1503,5.341,1504,5.341,1505,5.341,1506,5.341]],["title/injectables/TranslationService.html",[233,0.919,458,1.253]],["body/injectables/TranslationService.html",[0,0.278,3,0.18,4,0.135,5,0.135,8,0.18,9,0.486,10,1.368,14,2.325,17,0.974,27,0.677,29,0.547,31,1.102,33,1.354,34,0.021,35,0.742,36,0.345,37,0.592,41,1.469,42,0.787,51,1.283,58,1.368,65,0.884,72,0.884,73,0.18,111,1.639,128,2.274,136,1.299,156,1.323,189,2.747,190,2.747,191,2.747,217,2.165,222,2.544,231,0.013,232,0.013,233,1.267,235,1.67,303,0.603,304,0.443,312,1.576,313,1.576,316,1.888,458,1.727,461,1.988,539,3.507,544,1.478,720,2.544,721,3.884,723,3.182,744,2.165,755,2.415,1191,4.29,1507,3.151,1508,5.693,1509,6.751,1510,5.693,1511,5.007,1512,6.112,1513,5.007,1514,5.007,1515,5.007,1516,4.29,1517,5.007,1518,5.007,1519,3.678,1520,5.693,1521,3.678,1522,5.007,1523,3.678,1524,5.007,1525,3.678,1526,5.007,1527,3.678,1528,5.007,1529,3.678,1530,5.007,1531,3.678,1532,3.678,1533,3.678,1534,5.007,1535,3.678,1536,3.678,1537,3.678,1538,3.678,1539,3.678,1540,5.693,1541,3.678,1542,5.007,1543,5.007,1544,5.007,1545,3.678,1546,5.007,1547,5.007,1548,5.007,1549,5.693,1550,5.007,1551,3.678,1552,5.693,1553,6.112,1554,5.007,1555,3.678,1556,3.678,1557,3.678,1558,3.678,1559,3.678,1560,3.678,1561,3.678,1562,3.678,1563,3.678]],["title/injectables/UserService.html",[233,0.919,255,2.513]],["body/injectables/UserService.html",[0,0.231,3,0.15,4,0.112,5,0.112,8,0.15,9,0.427,10,1.63,17,0.856,27,0.563,29,0.451,30,2.002,31,1.113,33,1.392,34,0.021,35,0.762,36,0.348,37,0.608,41,1.058,42,0.566,51,1.361,65,1.239,67,3.277,70,2.116,73,0.15,104,1.157,111,2.22,136,1.62,156,1.22,166,3.567,218,1.24,231,0.012,232,0.012,233,1.114,235,1.389,242,4.831,245,3.771,246,4.831,255,3.045,285,6.253,295,3.862,303,0.679,304,0.368,307,1.678,312,1.311,313,1.311,316,1.571,329,2.621,359,3.771,385,2.797,421,2.825,478,1.176,544,0.903,720,2.116,721,3.583,723,2.797,744,1.801,874,2.332,875,4.298,882,3.93,885,3.355,899,2.332,966,4.417,976,2.621,997,4.435,1415,5.883,1494,1.944,1564,2.621,1565,5.156,1566,4.401,1567,4.401,1568,4.401,1569,4.401,1570,4.401,1571,4.401,1572,5.639,1573,5.639,1574,4.401,1575,4.401,1576,4.401,1577,4.401,1578,3.059,1579,4.401,1580,3.059,1581,4.401,1582,3.059,1583,4.401,1584,3.059,1585,4.401,1586,3.059,1587,4.401,1588,3.059,1589,3.059,1590,3.059,1591,4.401,1592,5.639,1593,5.639,1594,3.059,1595,4.401,1596,3.059,1597,4.401,1598,3.059,1599,3.059,1600,3.059,1601,4.401,1602,3.059,1603,4.401,1604,3.059,1605,5.156,1606,5.156,1607,5.156,1608,3.059,1609,5.156,1610,3.059,1611,3.059,1612,3.059,1613,3.059,1614,3.059,1615,3.059,1616,3.059,1617,3.059,1618,3.059,1619,3.059,1620,3.059,1621,3.059,1622,5.156,1623,4.401,1624,3.059,1625,3.059,1626,3.059,1627,3.059,1628,4.401,1629,3.059,1630,3.059,1631,4.401,1632,3.059,1633,3.059,1634,3.059,1635,4.401,1636,3.059,1637,3.059,1638,3.059,1639,3.059,1640,3.059,1641,3.059,1642,3.059,1643,3.059,1644,3.059,1645,3.059,1646,3.059,1647,3.059,1648,3.059,1649,3.059,1650,3.059,1651,3.059]],["title/coverage.html",[1652,4.254]],["body/coverage.html",[0,0.425,1,1.848,5,0.132,6,4.024,7,4.024,30,1.063,34,0.02,36,0.177,74,0.602,88,2.288,112,2.288,132,2.288,148,2.634,156,0.779,209,2.288,211,2.288,215,3.11,231,0.013,232,0.013,233,1.776,234,2.744,236,3.084,255,2.491,257,2.491,397,2.288,398,3.762,402,2.288,403,0.998,404,1.063,408,3.084,410,1.119,457,1.635,458,1.242,465,1.119,472,1.242,488,1.178,621,1.119,624,1.063,626,1.01,629,1.063,632,1.01,633,1.533,635,1.063,636,1.063,639,1.01,640,1.063,642,1.063,644,1.063,646,1.063,648,0.959,650,1.063,654,2.165,655,3.084,711,2.491,712,3.084,741,2.119,770,2.491,771,2.491,772,3.084,844,2.491,845,3.736,846,3.762,878,2.491,901,3.762,915,2.491,956,3.084,984,2.744,985,2.744,986,3.895,997,2.491,998,3.084,1028,2.491,1029,2.491,1031,2.491,1032,2.491,1045,3.762,1066,2.744,1067,2.744,1089,3.084,1101,1.848,1157,2.744,1158,2.744,1195,2.744,1196,3.084,1198,1.848,1200,3.85,1212,1.975,1213,3.762,1214,3.762,1219,2.491,1241,2.744,1242,3.084,1246,2.288,1247,3.084,1251,2.288,1252,3.578,1269,2.288,1279,2.491,1390,3.084,1400,3.084,1409,3.084,1419,3.084,1429,3.084,1487,3.762,1494,2.288,1496,3.084,1507,3.084,1564,3.084,1652,3.084,1653,3.6,1654,3.6,1655,3.6,1656,3.6,1657,3.6,1658,3.6,1659,3.6,1660,4.935,1661,3.084,1662,6.058,1663,6.836,1664,4.935,1665,6.058,1666,3.6,1667,3.084,1668,2.744,1669,6.058,1670,4.935,1671,6.058,1672,3.6,1673,5.631,1674,3.6,1675,4.228,1676,3.6,1677,3.6,1678,3.6,1679,4.935,1680,4.228,1681,3.6,1682,3.6,1683,4.228,1684,3.6,1685,3.084,1686,3.6,1687,3.6,1688,4.292,1689,3.6,1690,3.084,1691,3.084,1692,6.347,1693,4.935,1694,3.6,1695,3.6,1696,3.6]],["title/dependencies.html",[1096,3.024,1697,3.03]],["body/dependencies.html",[34,0.02,57,3.115,231,0.017,232,0.017,304,0.637,305,4.533,307,2.902,540,1.484,1096,3.661,1115,5.414,1116,4.817,1165,5.414,1166,5.414,1167,4.533,1170,4.533,1698,5.291,1699,7.54,1700,5.291,1701,5.291,1702,5.291,1703,5.291,1704,5.291,1705,5.291,1706,5.291,1707,5.291,1708,4.533,1709,5.291,1710,5.291,1711,5.291,1712,5.291,1713,5.291,1714,5.291,1715,5.291,1716,5.291,1717,5.291,1718,5.291,1719,5.291,1720,5.291,1721,5.291]],["title/miscellaneous/enumerations.html",[1722,1.784,1723,3.745]],["body/miscellaneous/enumerations.html",[5,0.244,8,0.283,34,0.019,42,0.901,231,0.018,232,0.018,295,3.913,654,1.703,1252,3.665,1267,4.598,1268,4.598,1722,3.395,1723,4.94,1724,5.767]],["title/miscellaneous/functions.html",[1722,1.784,1725,3.745]],["body/miscellaneous/functions.html",[4,0.232,6,3.105,7,3.972,8,0.259,14,1.918,29,0.528,33,1.435,34,0.02,35,0.786,36,0.343,37,0.627,42,0.812,50,3.713,65,1.516,132,4.009,156,1.142,213,3.649,216,3.649,217,3.105,219,2.708,225,3.649,226,3.352,227,3.649,231,0.017,232,0.017,423,2.024,458,2.175,654,1.557,881,4.364,1661,5.404,1683,4.519,1685,5.404,1688,4.021,1690,5.404,1722,3.105,1725,4.519,1726,4.519,1727,5.275,1728,5.404,1729,4.519,1730,5.275,1731,6.307,1732,5.275]],["title/index.html",[8,0.149,1733,3.03,1734,3.03]],["body/index.html",[4,0.181,34,0.017,35,0.554,37,0.441,53,4.53,156,1.066,231,0.016,232,0.016,263,4.218,391,3.406,403,0.898,414,1.53,436,1.612,456,2.483,727,6.115,768,5.183,808,4.938,1026,4.612,1516,5.183,1675,5.183,1708,4.218,1735,4.924,1736,6.549,1737,4.924,1738,6.549,1739,6.049,1740,6.549,1741,4.924,1742,4.924,1743,4.924,1744,4.924,1745,6.049,1746,7.302,1747,6.83,1748,4.924,1749,6.049,1750,4.924,1751,4.924,1752,4.924,1753,4.924,1754,4.924,1755,6.83,1756,6.049,1757,4.924,1758,4.924,1759,4.924,1760,7.011,1761,4.924,1762,6.549,1763,6.049,1764,4.924,1765,4.924,1766,4.924,1767,4.924,1768,4.924,1769,4.924,1770,4.924,1771,4.924,1772,4.924,1773,4.924,1774,4.924,1775,4.924,1776,4.924,1777,4.924,1778,4.924,1779,4.924,1780,4.924,1781,4.924,1782,4.924,1783,4.924,1784,4.924,1785,4.924]],["title/modules.html",[1095,3.785]],["body/modules.html",[34,0.018,231,0.018,232,0.018,1094,4.087,1095,4.503,1116,4.503,1786,5.907,1787,5.907,1788,5.907]],["title/interfaces/optionsConfig.html",[74,0.3,1668,2.77]],["body/interfaces/optionsConfig.html",[3,0.254,4,0.19,5,0.19,8,0.254,9,0.605,29,0.391,34,0.02,36,0.361,37,0.674,73,0.254,74,0.427,79,1.165,218,2.098,231,0.017,232,0.017,297,4.316,478,1.692,847,5.103,1199,1.61,1667,4.436,1668,4.755,1789,6.949,1790,6.949,1791,6.949,1792,6.949,1793,6.949,1794,6.949,1795,5.179]],["title/overview.html",[1796,4.254]],["body/overview.html",[2,3.097,34,0.02,139,3.355,231,0.015,232,0.015,235,2.033,404,1.851,405,1.544,621,2.201,624,2.091,626,1.759,629,2.091,632,1.759,635,2.091,636,2.137,639,1.759,640,2.091,642,2.091,644,2.091,646,2.091,648,1.887,650,2.091,1093,3.835,1094,5.338,1096,3.943,1097,3.835,1099,3.835,1100,3.835,1101,3.22,1102,4.883,1103,3.097,1104,3.835,1199,1.391,1492,3.835,1494,2.845,1680,3.835,1796,3.835,1797,4.477,1798,4.477]],["title/interfaces/searchObj.html",[74,0.3,878,2.513]],["body/interfaces/searchObj.html",[0,0.299,3,0.194,4,0.146,5,0.146,8,0.194,9,0.511,29,0.563,30,1.555,34,0.021,36,0.337,37,0.605,42,0.678,57,2.334,67,2.979,72,0.953,73,0.258,74,0.327,104,0.814,136,1.664,148,2.04,156,0.858,231,0.014,232,0.014,233,1.333,303,0.759,304,0.478,307,2.175,309,3.023,312,1.699,313,1.699,314,5.528,316,2.036,374,4.015,416,1.607,474,2.063,544,1.171,721,3.347,723,2.52,744,2.334,807,4.005,844,2.743,845,2.334,846,3.023,847,3.023,848,2.52,851,3.397,855,3.397,856,5.895,858,5.399,859,3.397,861,3.397,863,3.397,864,5.067,865,5.067,867,3.397,870,3.397,872,3.397,874,4.509,875,4.509,876,3.397,877,4.512,878,4.092,879,5.399,880,3.397,881,3.644,882,4.804,883,3.397,884,3.397,885,4.015,886,3.397,887,3.397,888,3.397,889,3.397,890,5.067,891,3.397,892,3.397,893,3.397,894,3.397,895,3.397,896,3.397,897,3.397,898,3.397,899,3.023,900,3.397,1199,1.233]],["title/miscellaneous/variables.html",[1722,1.784,1799,3.745]],["body/miscellaneous/variables.html",[6,2.972,7,4.055,8,0.248,15,3.492,29,0.5,30,1.49,34,0.02,36,0.248,41,1.656,42,0.909,67,2.292,75,2.769,76,2.769,77,2.769,78,2.769,80,2.769,81,2.769,82,2.769,83,3.492,84,2.769,85,3.492,86,3.492,87,3.492,111,1.652,112,3.904,113,3.492,114,3.492,115,3.492,116,3.492,117,3.492,118,3.492,119,3.492,120,3.492,121,3.492,122,3.492,123,3.492,124,3.492,125,3.492,126,3.492,129,2.434,136,1.401,209,3.904,210,3.492,211,3.904,212,3.492,231,0.016,232,0.016,654,1.49,881,4.249,1454,5.672,1688,3.848,1691,5.262,1722,2.972,1726,4.325,1728,5.672,1729,5.262,1799,4.325,1800,5.048,1801,5.048,1802,5.048,1803,5.048,1804,5.048,1805,5.048,1806,5.048,1807,5.048]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["0.11.4",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["0.12.4",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":139,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["1\">es",{"_index":1060,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["1.19.0",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1798,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1487,"title":{},"body":{"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["11",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1675,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["12.2.9",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1743,"title":{},"body":{"index.html":{}}}],["14px",{"_index":820,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["15",{"_index":1797,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1680,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["18",{"_index":1228,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["2.0.8",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["2/32",{"_index":1695,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":827,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["3",{"_index":1492,"title":{},"body":{"components/TextInputComponent.html":{},"overview.html":{}}}],["3/18",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":813,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["350px",{"_index":1044,"title":{},"body":{"injectables/DialogService.html":{}}}],["4.17.1",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1399,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["5px",{"_index":1491,"title":{},"body":{"components/TableComponent.html":{}}}],["6",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":814,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["7/15",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":166,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["_",{"_index":162,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_blank",{"_index":173,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_filter",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_isloggedin",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_options",{"_index":11,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_path",{"_index":1508,"title":{},"body":{"injectables/TranslationService.html":{}}}],["accessors",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{}}}],["according",{"_index":60,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["action",{"_index":1281,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["actionresp",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actionresp.hasownproperty('actions",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actions",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":652,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["adapter",{"_index":1167,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["add",{"_index":1285,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["additional",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["addtxtfile",{"_index":1511,"title":{},"body":{"injectables/TranslationService.html":{}}}],["addtxtfile(path",{"_index":1518,"title":{},"body":{"injectables/TranslationService.html":{}}}],["adduser",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(user",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles(user",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserres.id",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["afterdialogcallback",{"_index":1016,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterdialogcallback(result",{"_index":1037,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterviewinit",{"_index":1258,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["age",{"_index":1227,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["align",{"_index":809,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["allactionswithduplicates",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["allowed",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedactions",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["already",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["anderen",{"_index":1232,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["angular",{"_index":1738,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1257,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/common",{"_index":1170,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["angular/common/locales/de",{"_index":1172,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/compiler",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["angular/forms",{"_index":540,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1165,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1132,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/button",{"_index":1144,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/card",{"_index":1153,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/checkbox",{"_index":1136,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/core",{"_index":993,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["angular/material/datepicker",{"_index":1134,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/dialog",{"_index":791,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["angular/material/expansion",{"_index":1146,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/form",{"_index":1124,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/grid",{"_index":1148,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/icon",{"_index":1122,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/input",{"_index":1126,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/list",{"_index":1128,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/paginator",{"_index":1183,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/radio",{"_index":1150,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/select",{"_index":1130,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sidenav",{"_index":1120,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slide",{"_index":1187,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slider",{"_index":1185,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sort",{"_index":1181,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/stepper",{"_index":1138,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/table",{"_index":1179,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/tooltip",{"_index":1140,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/tree",{"_index":1142,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/platform",{"_index":1115,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["angularcsv",{"_index":1,"title":{"classes/AngularCsv.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["angularcsv(tmpdata",{"_index":1388,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angularcsv.isfloat(data",{"_index":200,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["angularformbuilder",{"_index":1735,"title":{},"body":{"index.html":{}}}],["api",{"_index":874,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["api/user?partlastname",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["apibaseurl",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["apiendpoint",{"_index":1789,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["app",{"_index":414,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["application",{"_index":1745,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":882,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["applyfilter",{"_index":1434,"title":{},"body":{"components/TableComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1306,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["array",{"_index":45,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["array.from(new",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["array.isarray(this.data.errormsg",{"_index":1054,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["array.isarray(this.data.infomsg",{"_index":1392,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["array.isarray(value",{"_index":933,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["artifacts",{"_index":1780,"title":{},"body":{"index.html":{}}}],["assign",{"_index":225,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["asyncvalidatorfn",{"_index":1202,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["auf",{"_index":1231,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["aufgetreten",{"_index":1059,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["authentication",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":234,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["auto",{"_index":1493,"title":{},"body":{"components/TextInputComponent.html":{}}}],["autocomplete",{"_index":435,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete'},{'name",{"_index":622,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["autocompletecomponent",{"_index":621,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1768,"title":{},"body":{"index.html":{}}}],["autosearch",{"_index":397,"title":{"classes/AutoSearch.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["availableactions",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["availableactions.indexof(systemaction",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["base",{"_index":415,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent",{"_index":404,"title":{"components/BaseFieldComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basefieldcomponent:14",{"_index":704,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:15",{"_index":699,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:151",{"_index":695,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:155",{"_index":693,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:159",{"_index":698,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:16",{"_index":700,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:17",{"_index":701,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:18",{"_index":992,"title":{},"body":{"components/DateInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["basefieldcomponent:185",{"_index":694,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:189",{"_index":691,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:19",{"_index":1413,"title":{},"body":{"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["basefieldcomponent:192",{"_index":696,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:20",{"_index":1414,"title":{},"body":{"components/SelectComponent.html":{}}}],["basefieldcomponent:21",{"_index":1071,"title":{},"body":{"components/FileInputComponent.html":{},"components/SelectComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:22",{"_index":688,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SliderComponent.html":{}}}],["basefieldcomponent:23",{"_index":1426,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["basefieldcomponent:25",{"_index":991,"title":{},"body":{"components/DateInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:26",{"_index":682,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:28",{"_index":687,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:29",{"_index":683,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:30",{"_index":670,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:31",{"_index":681,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:32",{"_index":679,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:33",{"_index":680,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:34",{"_index":678,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:35",{"_index":684,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:36",{"_index":671,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:37",{"_index":668,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:38",{"_index":673,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:39",{"_index":672,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:40",{"_index":685,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:41",{"_index":675,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:42",{"_index":677,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:43",{"_index":676,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:44",{"_index":686,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:45",{"_index":669,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:46",{"_index":674,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:47",{"_index":666,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:49",{"_index":667,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:50",{"_index":703,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:51",{"_index":702,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:59",{"_index":689,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:63",{"_index":690,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:76",{"_index":692,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:97",{"_index":697,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basic",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["basierend",{"_index":1230,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["before",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["behaviorsubject",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataStoreService.html":{}}}],["behaviorsubject(true",{"_index":978,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["beträgt",{"_index":518,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["bitte",{"_index":1417,"title":{},"body":{"components/SelectComponent.html":{}}}],["bkuuser",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["bla",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["blob",{"_index":155,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blob([this.csv",{"_index":157,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blur",{"_index":1210,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["body",{"_index":57,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["body).pipe",{"_index":898,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["bom",{"_index":91,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/optionsConfig.html":{}}}],["boolean(input",{"_index":138,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["bootstrap",{"_index":1108,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["bottom",{"_index":1490,"title":{},"body":{"components/TableComponent.html":{}}}],["break",{"_index":1064,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["browse",{"_index":1788,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1116,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1118,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browseranimationsmodule",{"_index":1117,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browsermodule",{"_index":1114,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["btn",{"_index":614,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["btoa(credentials",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["buildfiletree",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildfiletree(obj",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree(config",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buttons",{"_index":1282,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["c",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["called",{"_index":223,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["categories",{"_index":879,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["center",{"_index":811,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["change",{"_index":436,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["changes",{"_index":1465,"title":{},"body":{"components/TableComponent.html":{}}}],["changes.data.currentvalue",{"_index":1353,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["changes['data",{"_index":1352,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["check",{"_index":70,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["checkbox",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox'},{'name",{"_index":625,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["checkbox.component.html",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":624,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkifuserisalreadyloggedin",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkkey",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkkey(ts",{"_index":1729,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["children",{"_index":399,"title":{},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/MenuNode.html":{}}}],["children.push(value.name",{"_index":759,"title":{},"body":{"injectables/ConfigService.html":{}}}],["choose",{"_index":1088,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"overview.html":{}}}],["classes/angular",{"_index":1265,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["classes/field",{"_index":705,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["clear",{"_index":1324,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["cli",{"_index":1739,"title":{},"body":{"index.html":{}}}],["cluster_formbuildermodule",{"_index":1097,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_bootstrap",{"_index":1098,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["cluster_formbuildermodule_declarations",{"_index":1099,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_exports",{"_index":1100,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["code",{"_index":1776,"title":{},"body":{"index.html":{}}}],["codetables",{"_index":1286,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumn.collumnkey",{"_index":1480,"title":{},"body":{"components/TableComponent.html":{}}}],["collumn.collumnname",{"_index":1481,"title":{},"body":{"components/TableComponent.html":{}}}],["collumnkey",{"_index":1253,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnname",{"_index":1254,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnstobedisplayed",{"_index":1293,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["color",{"_index":1423,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["column.collumnname",{"_index":1341,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnname",{"_index":1370,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames",{"_index":1381,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames.filter((el",{"_index":1382,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns",{"_index":1378,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns.filter((el",{"_index":1379,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["colums",{"_index":1458,"title":{},"body":{"components/TableComponent.html":{}}}],["command",{"_index":1761,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1169,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["component",{"_index":403,"title":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":620,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["components",{"_index":405,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"overview.html":{}}}],["components/autocomplete/autocomplete.component",{"_index":1160,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/autocomplete/autocomplete.component.ts",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component",{"_index":1161,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:13",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":984,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/confirm",{"_index":770,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/error",{"_index":1028,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/info",{"_index":1031,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["components/file",{"_index":1066,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component",{"_index":1162,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/radiobutton/radiobutton.component.ts",{"_index":1400,"title":{},"body":{"components/RadiobuttonComponent.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component.ts:14",{"_index":1404,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["components/select/select.component",{"_index":1156,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/select/select.component.ts",{"_index":1409,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:17",{"_index":1412,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/slider/slider.component",{"_index":1163,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slider/slider.component.ts",{"_index":1429,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["components/slider/slider.component.ts:14",{"_index":1433,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slidetoggle/slidetoggle.component",{"_index":1189,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slidetoggle/slidetoggle.component.ts",{"_index":1419,"title":{},"body":{"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:14",{"_index":1425,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:15",{"_index":1424,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/table/table.component",{"_index":1177,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/table/table.component.ts",{"_index":1252,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/table/table.component.ts:110",{"_index":1463,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:115",{"_index":1464,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:129",{"_index":1470,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:134",{"_index":1469,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:138",{"_index":1467,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:143",{"_index":1468,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:149",{"_index":1456,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:162",{"_index":1457,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:178",{"_index":1460,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:194",{"_index":1471,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:198",{"_index":1455,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:52",{"_index":1477,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:53",{"_index":1472,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:54",{"_index":1474,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:55",{"_index":1449,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:56",{"_index":1476,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:57",{"_index":1473,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:58",{"_index":1447,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:59",{"_index":1448,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:60",{"_index":1446,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:61",{"_index":1475,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:62",{"_index":1478,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:63",{"_index":1452,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:64",{"_index":1451,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:65",{"_index":1450,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:66",{"_index":1445,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:73",{"_index":1453,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:79",{"_index":1461,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:86",{"_index":1462,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:92",{"_index":1466,"title":{},"body":{"components/TableComponent.html":{}}}],["components/text",{"_index":1157,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["config",{"_index":127,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["config.disabled",{"_index":577,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hint",{"_index":567,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hintlabel",{"_index":569,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute",{"_index":593,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute.autocomplete",{"_index":594,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmltype",{"_index":590,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.icon",{"_index":592,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.name",{"_index":570,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators",{"_index":576,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.max",{"_index":581,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.maxlength",{"_index":585,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.min",{"_index":583,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.minlength",{"_index":587,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.required",{"_index":578,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.value",{"_index":588,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config[page",{"_index":751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[page][formn",{"_index":752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configdefaults",{"_index":112,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":711,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["configurable",{"_index":1283,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["confirm",{"_index":627,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["confirm(messagestring",{"_index":1007,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmdialogcomponent",{"_index":626,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connector.service.ts",{"_index":846,"title":{},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["connector.service.ts:17",{"_index":854,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:23",{"_index":857,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:31",{"_index":873,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:42",{"_index":866,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:69",{"_index":860,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:79",{"_index":869,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:83",{"_index":871,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:87",{"_index":862,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:91",{"_index":868,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["console.log(\"newtree",{"_index":763,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log('[authenticationservice",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('csv",{"_index":1389,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log('invalid",{"_index":153,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["console.log('saveallowedactions",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('saveuserprofile",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(`${key",{"_index":757,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(columnname",{"_index":1372,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(columns",{"_index":1384,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(config",{"_index":747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(data",{"_index":1371,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(e",{"_index":1083,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(form",{"_index":754,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(key",{"_index":1503,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(langpath",{"_index":1547,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(messagestring",{"_index":1040,"title":{},"body":{"injectables/DialogService.html":{}}}],["console.log(opt",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(reader",{"_index":1087,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.control",{"_index":1074,"title":{},"body":{"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["console.log(this.flatcontrolls",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(this.form",{"_index":1075,"title":{},"body":{"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["console.log(this.message",{"_index":800,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["console.log(this.name",{"_index":1073,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.options",{"_index":1405,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["console.log(this.required",{"_index":579,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.translate.data",{"_index":1505,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(tmpdata",{"_index":1386,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(translation",{"_index":1550,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(type",{"_index":551,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(value",{"_index":767,"title":{},"body":{"injectables/ConfigService.html":{}}}],["const",{"_index":111,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":778,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["constructor(datajson",{"_index":28,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["constructor(dialog",{"_index":1004,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{}}}],["constructor(fb",{"_index":455,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(http",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DialogService.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["constructor(public",{"_index":706,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(router",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["content",{"_index":807,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/searchObj.html":{}}}],["content#confirm",{"_index":822,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["content#error",{"_index":1065,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["content#info",{"_index":1398,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["control",{"_index":437,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["convet",{"_index":213,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["cookie",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["coverage",{"_index":1652,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":56,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{}}}],["create(post",{"_index":855,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["credentials",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["csv",{"_index":12,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["csv.ts",{"_index":7,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["csv.ts:142",{"_index":66,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:156",{"_index":64,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:170",{"_index":59,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:19",{"_index":843,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:191",{"_index":55,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:20",{"_index":828,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:218",{"_index":48,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:22",{"_index":830,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:23",{"_index":829,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:24",{"_index":836,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:25",{"_index":838,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:258",{"_index":63,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:26",{"_index":839,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:27",{"_index":831,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:28",{"_index":837,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:29",{"_index":840,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:30",{"_index":832,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:31",{"_index":835,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:32",{"_index":842,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:33",{"_index":841,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:34",{"_index":833,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:35",{"_index":834,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:56",{"_index":44,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:57",{"_index":46,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:58",{"_index":43,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:60",{"_index":40,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:61",{"_index":32,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:81",{"_index":69,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:88",{"_index":52,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csvconfigconsts",{"_index":88,"title":{"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["csvconfigconsts.bom",{"_index":142,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvconfigconsts.default_decimal_separator",{"_index":116,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_field_separator",{"_index":114,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_filename",{"_index":113,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_header",{"_index":121,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_no_download",{"_index":125,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_null_to_empty_string",{"_index":126,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_obj_header",{"_index":122,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_quote",{"_index":115,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_labels",{"_index":117,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_title",{"_index":118,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_title",{"_index":119,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_bom",{"_index":120,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_header",{"_index":124,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_obj_header",{"_index":123,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.eol",{"_index":186,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvexport",{"_index":1435,"title":{},"body":{"components/TableComponent.html":{}}}],["current",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdepth",{"_index":928,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["currently",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuser",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["currentuserroles",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuserroles.indexof(systemrole",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentvalue",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["customfilterbasedondisplaycolumns",{"_index":1436,"title":{},"body":{"components/TableComponent.html":{}}}],["customfilterbasedondisplaycolumns(data",{"_index":1369,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["customvalidation",{"_index":438,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["das",{"_index":507,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["data",{"_index":14,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["data.indexof",{"_index":205,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\n",{"_index":206,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\r",{"_index":207,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.replace(/\"/g",{"_index":203,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tolocalestring",{"_index":201,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tostring().replace",{"_index":202,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data:attachment/csv;charset=utf",{"_index":165,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data[columnname",{"_index":1373,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[columnname].tostring().trim().tolowercase().indexof(filter.tolowercase",{"_index":1374,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datachange",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataconnectorservice",{"_index":844,"title":{"injectables/DataConnectorService.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["dataflattnerservice",{"_index":741,"title":{"injectables/DataFlattnerService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["dataflattnerservice.flatten(tmpdata",{"_index":762,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataflattnerservice.isbuffer(value",{"_index":935,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataflattnerservice.unflatten(target[key",{"_index":955,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataimporterrors",{"_index":1034,"title":{},"body":{"injectables/DialogService.html":{}}}],["datajson",{"_index":38,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["datasource",{"_index":1295,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datastore",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["datastoreservice",{"_index":257,"title":{"injectables/DataStoreService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["date",{"_index":630,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dateadapter",{"_index":989,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(lang",{"_index":996,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(ts.lang",{"_index":994,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateinputcomponent",{"_index":629,"title":{"components/DateInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datumsformat",{"_index":532,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["de",{"_index":1191,"title":{},"body":{"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{}}}],["de'}.json",{"_index":1546,"title":{},"body":{"injectables/TranslationService.html":{}}}],["debug=express",{"_index":1756,"title":{},"body":{"index.html":{}}}],["decimalseparator",{"_index":77,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1106,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["decorators",{"_index":783,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default_decimal_separator",{"_index":94,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_field_separator",{"_index":93,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_filename",{"_index":100,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_header",{"_index":105,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_no_download",{"_index":109,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_null_to_empty_string",{"_index":110,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_obj_header",{"_index":106,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_quote",{"_index":95,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_labels",{"_index":102,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_title",{"_index":96,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_title",{"_index":98,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_bom",{"_index":103,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_header",{"_index":108,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_obj_header",{"_index":107,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":848,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"interfaces/searchObj.html":{}}}],["delete(id",{"_index":859,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["delete_forever",{"_index":1483,"title":{},"body":{"components/TableComponent.html":{}}}],["deletebulk",{"_index":1305,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["deletefield",{"_index":849,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["deletefield(id",{"_index":861,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["deleteuser",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(user",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["delimiter",{"_index":921,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dependencies",{"_index":1096,"title":{"dependencies.html":{}},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/AngularCsv.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1765,"title":{},"body":{"index.html":{}}}],["development",{"_index":1764,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":633,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["dialog'},{'name",{"_index":628,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dialog.component",{"_index":1027,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["dialog.component.html",{"_index":774,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.less",{"_index":773,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":772,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":788,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":786,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":781,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":785,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":782,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.service",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["dialog/confirm",{"_index":771,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["dialog_content",{"_index":823,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_message",{"_index":817,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_title",{"_index":803,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogdata",{"_index":1033,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":779,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogref.afterclosed().subscribe((result:any",{"_index":1036,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogservice",{"_index":997,"title":{"injectables/DialogService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["difference",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["difference(newobj",{"_index":1730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":1488,"title":{},"body":{"components/TableComponent.html":{}}}],["directive",{"_index":618,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directives",{"_index":651,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1779,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1782,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":439,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["display",{"_index":804,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["displayedcolumns",{"_index":1298,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["dist",{"_index":1781,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(link",{"_index":177,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.body.removechild(link",{"_index":179,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.createelement('a",{"_index":169,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.queryselector('#file",{"_index":1077,"title":{},"body":{"components/FileInputComponent.html":{}}}],["documentation",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":406,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["done",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["done.next(updateroleresp",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1082,"title":{},"body":{"components/FileInputComponent.html":{}}}],["e.target.result",{"_index":1085,"title":{},"body":{"components/FileInputComponent.html":{}}}],["edit",{"_index":1304,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["edituser",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(user",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles(user",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["eg",{"_index":1284,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ein",{"_index":509,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["eingeben",{"_index":516,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["eingehalten",{"_index":526,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["el",{"_index":1383,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["el.collumnname",{"_index":1380,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["element",{"_index":617,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["element[collumn.collumnname",{"_index":1482,"title":{},"body":{"components/TableComponent.html":{}}}],["elements",{"_index":1313,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["email",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["emailadresse",{"_index":529,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["encodeuri(this.csv",{"_index":167,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["entitytype",{"_index":1236,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entitäten",{"_index":1233,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entries",{"_index":748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entries.push(tmpdata",{"_index":761,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entriesperpage",{"_index":1790,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["entry",{"_index":1287,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enum",{"_index":1266,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enumerations",{"_index":1723,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eol",{"_index":89,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["errobj",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error",{"_index":544,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["errordataarray",{"_index":1018,"title":{},"body":{"injectables/DialogService.html":{}}}],["errordialogsimplecomponent",{"_index":632,"title":{"components/ErrorDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormsg",{"_index":775,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["es",{"_index":1057,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["event",{"_index":1215,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["event.target",{"_index":1308,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["eventemitter",{"_index":461,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["exists",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":73,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["exports",{"_index":1107,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["express",{"_index":1708,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["falsches",{"_index":531,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["false",{"_index":97,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["fb",{"_index":418,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["fehler",{"_index":1058,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["field",{"_index":416,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["field'},{'name",{"_index":623,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["fieldseparator",{"_index":75,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fieldtocheck",{"_index":1216,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["fieldtoupdate",{"_index":1217,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["fileinputcomponent",{"_index":635,"title":{"components/FileInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":15,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["filereader",{"_index":1078,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":1770,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1344,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtercontrol",{"_index":1297,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtereddatasource",{"_index":1365,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtervalue",{"_index":1454,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fixme",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["flag",{"_index":1784,"title":{},"body":{"index.html":{}}}],["flatcontrolls",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["flatten",{"_index":902,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flatten(target",{"_index":907,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flattner.service",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{}}}],["flattner.service.ts",{"_index":901,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["flattner.service.ts:10",{"_index":906,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:15",{"_index":914,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:26",{"_index":911,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:3",{"_index":1240,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["flattner.service.ts:31",{"_index":909,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:66",{"_index":917,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flex",{"_index":805,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["float",{"_index":71,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["focus",{"_index":1220,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["font",{"_index":818,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["for(const",{"_index":1555,"title":{},"body":{"injectables/TranslationService.html":{}}}],["foreignfieldcheck",{"_index":1229,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["forkjoin",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["forkjoin(this.edituser(user",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["form",{"_index":440,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["format",{"_index":49,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formatdata",{"_index":18,"title":{},"body":{"classes/AngularCsv.html":{}}}],["formatdata(data",{"_index":47,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formbuilder",{"_index":456,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["formbuilder'},{'name",{"_index":638,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder.component",{"_index":1113,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["formbuilderapp",{"_index":1763,"title":{},"body":{"index.html":{}}}],["formbuildercomponent",{"_index":636,"title":{"components/FormbuilderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formbuildermodule",{"_index":1094,"title":{"modules/FormbuilderModule.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["formbuilderservice",{"_index":1195,"title":{"injectables/FormbuilderService.html":{}},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["formbuilderui",{"_index":1762,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":463,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formgroup",{"_index":468,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["formn",{"_index":750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formservice",{"_index":457,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["forroot",{"_index":1109,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["fs",{"_index":419,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["function",{"_index":215,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["functions",{"_index":1725,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":161,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generate",{"_index":53,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"index.html":{}}}],["generatecsv",{"_index":19,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generated",{"_index":1737,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1771,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1278,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["generic",{"_index":1268,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["get(itemtype",{"_index":863,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["get_app",{"_index":1484,"title":{},"body":{"components/TableComponent.html":{}}}],["getallowedactions",{"_index":958,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getasyncvalidation",{"_index":850,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["getasyncvalidation(url",{"_index":867,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getbody",{"_index":20,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getbodyaccordingheader",{"_index":21,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcontrolls",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcsvdata",{"_index":22,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcurrentuser",{"_index":959,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getdata",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdisplaydata",{"_index":1437,"title":{},"body":{"components/TableComponent.html":{}}}],["getdisplaydata(colums",{"_index":1375,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["getdisplayrepresentation",{"_index":1288,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["geterrormeesage",{"_index":424,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfieldconfig",{"_index":425,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfields",{"_index":851,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getfiltereddisplaydata",{"_index":1438,"title":{},"body":{"components/TableComponent.html":{}}}],["getfiltereddisplaydata(colums",{"_index":1459,"title":{},"body":{"components/TableComponent.html":{}}}],["getflatcontrolls",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getform",{"_index":1243,"title":{},"body":{"interfaces/IForm.html":{}}}],["getform(name",{"_index":1244,"title":{},"body":{"interfaces/IForm.html":{}}}],["getheaderfromobj",{"_index":23,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getheaders",{"_index":24,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getisloggedin",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getkey(split.shift",{"_index":945,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getkey(split[0",{"_index":947,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getmeesage",{"_index":426,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getmeesage(type",{"_index":494,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname",{"_index":427,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname()+'#label",{"_index":1406,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getname()+\\'#label",{"_index":1408,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getnavbarstate",{"_index":960,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["gets",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":1733,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseractions",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserdata",{"_index":1512,"title":{},"body":{"injectables/TranslationService.html":{}}}],["getuserprofile",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserroles",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalidators",{"_index":428,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getvalue",{"_index":429,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["groupby",{"_index":1791,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["h2",{"_index":815,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["hammerjs",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["handlesessiontimeout",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasavailableaction(systemresource",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasownproperty",{"_index":209,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasrole(systemrole",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["header",{"_index":62,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["header.collumnkey",{"_index":1376,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["header.collumnname",{"_index":1338,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["headerrow",{"_index":183,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["headers",{"_index":67,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["headers.reduce((headerrow",{"_index":182,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["height",{"_index":1397,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["helps",{"_index":1277,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["hidden",{"_index":175,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["hint",{"_index":441,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["hintlabel",{"_index":442,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["his.loadallowedactions",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["home_ui_new",{"_index":483,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["html",{"_index":616,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlattribute",{"_index":443,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1309,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["htmltype",{"_index":444,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["http",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["http://localhost:4200",{"_index":1767,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["httpclientmodule",{"_index":1154,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["httpheaders",{"_index":875,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["icodeentry",{"_index":1198,"title":{"interfaces/ICodeEntry.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["icon",{"_index":776,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["iconact",{"_index":430,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconaction",{"_index":445,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconbtn",{"_index":446,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["icustom",{"_index":1201,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["icustomvalidation",{"_index":465,"title":{"interfaces/ICustomValidation.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["id",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["identifier",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["idialogconfig",{"_index":1219,"title":{"interfaces/IDialogConfig.html":{}},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["if(key",{"_index":1504,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["if(this.field.disabled",{"_index":596,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.msgerrors[type](param",{"_index":552,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.userdata",{"_index":1557,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ifield",{"_index":410,"title":{"interfaces/IField.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["iflatobject",{"_index":915,"title":{"interfaces/IFlatObject.html":{}},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["iform",{"_index":1241,"title":{"interfaces/IForm.html":{}},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["iformobj",{"_index":1212,"title":{"interfaces/IFormObj.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["ihtmlattributes",{"_index":472,"title":{"interfaces/IHTMLAttributes.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["implements",{"_index":409,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["import",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["important",{"_index":825,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["imports",{"_index":1192,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["included",{"_index":1773,"title":{},"body":{"index.html":{}}}],["incoorect",{"_index":884,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1239,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["infodialogsimplecomponent",{"_index":639,"title":{"components/InfoDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infomsg",{"_index":1023,"title":{},"body":{"injectables/DialogService.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["information",{"_index":1395,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["informations",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inherited",{"_index":665,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["init",{"_index":420,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["initialcolumns",{"_index":1294,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["inject",{"_index":789,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["inject(mat_dialog_data",{"_index":784,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["injectable",{"_index":233,"title":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["injectables",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":72,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"interfaces/searchObj.html":{}}}],["input'},{'name",{"_index":631,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component",{"_index":1159,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["input.component.html",{"_index":988,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.scss",{"_index":987,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts",{"_index":986,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":990,"title":{},"body":{"components/DateInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:14",{"_index":1070,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":1072,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input/date",{"_index":985,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/file",{"_index":1067,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/text",{"_index":1158,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["inputnode",{"_index":1076,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputnode.files[0",{"_index":1079,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputs",{"_index":434,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["insert",{"_index":895,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["insertfield",{"_index":852,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["insertfield(field",{"_index":870,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["install",{"_index":1748,"title":{},"body":{"index.html":{}}}],["int",{"_index":1234,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["interface",{"_index":74,"title":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["interfaces",{"_index":1199,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{}}}],["interfaces/icustom",{"_index":536,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["interfaces/ifield",{"_index":535,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["interfaces/imenu",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interfaces/isliderconfig",{"_index":1427,"title":{},"body":{"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["interfaces/ivalidator",{"_index":538,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["inverted",{"_index":1248,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["isallselected",{"_index":1317,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["isarray",{"_index":931,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer",{"_index":903,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer(obj",{"_index":910,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfinite(input",{"_index":137,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isflat",{"_index":904,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["isflat(object",{"_index":913,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfloat",{"_index":26,"title":{},"body":{"classes/AngularCsv.html":{}}}],["isfloat(input",{"_index":68,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isliderconfig",{"_index":1246,"title":{"interfaces/ISliderConfig.html":{}},"body":{"interfaces/ISliderConfig.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"coverage.html":{}}}],["isloggedin",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isloggedin(value",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isobject",{"_index":936,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["ist",{"_index":508,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["itableheader",{"_index":1251,"title":{"interfaces/ITableHeader.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["itableviewoptions",{"_index":1269,"title":{"interfaces/ITableViewOptions.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["item",{"_index":881,"title":{},"body":{"injectables/DataConnectorService.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["item.error",{"_index":1062,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["item.info",{"_index":1396,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["item.key",{"_index":1407,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["item.name",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":810,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["itemtype",{"_index":856,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["ivalidator",{"_index":488,"title":{"interfaces/IValidator.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["ja",{"_index":802,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["json",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(datajson",{"_index":130,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["json.parse(localstorage.getitem(this.user_allowed_actions",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.parse(res",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(actions",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(rolesobject",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(userprofile",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":806,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["kat",{"_index":864,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["kat.length",{"_index":887,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["keine",{"_index":527,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["key",{"_index":755,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["key.split(delimiter",{"_index":943,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key1",{"_index":944,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key2",{"_index":946,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keya.length",{"_index":939,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keyb.length",{"_index":940,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keytosave",{"_index":1795,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["label",{"_index":600,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{}}}],["labels",{"_index":16,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["lang",{"_index":1509,"title":{},"body":{"injectables/TranslationService.html":{}}}],["langpath",{"_index":1544,"title":{},"body":{"injectables/TranslationService.html":{}}}],["left",{"_index":824,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["legend",{"_index":615,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["level",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib",{"_index":637,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["libraries",{"_index":1775,"title":{},"body":{"index.html":{}}}],["line",{"_index":191,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["link",{"_index":168,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.click",{"_index":178,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.download",{"_index":176,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.href",{"_index":170,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('target",{"_index":172,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('visibility",{"_index":174,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["list",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["literal",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/optionsConfig.html":{}}}],["loadafterpercentscrolled",{"_index":1792,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["loadallowedactions",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loaduserprofile",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locale",{"_index":199,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["localede",{"_index":1171,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["locally",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem(this.bla",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('txtbooth",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.user_allowed_actions",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('txtbooth",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.user_allowed_actions",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lodash",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["login(credentials",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["login(username",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpage",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["logout(navigatetologinpage",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["länge",{"_index":512,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["löschen",{"_index":1486,"title":{},"body":{"components/TableComponent.html":{}}}],["main",{"_index":1750,"title":{},"body":{"index.html":{}}}],["make",{"_index":1280,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map",{"_index":877,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["map((column",{"_index":1342,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map(value",{"_index":899,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["margin",{"_index":816,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["mastertoggle",{"_index":1325,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mat",{"_index":821,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TextInputComponent.html":{}}}],["mat_date_locale",{"_index":1151,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_dialog_data",{"_index":790,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matautocompletemodule",{"_index":1131,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matbuttonmodule",{"_index":1143,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcardmodule",{"_index":1152,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcheckboxmodule",{"_index":1135,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matches",{"_index":1314,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matching",{"_index":232,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1133,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdatepickerparse",{"_index":530,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["matdialog",{"_index":1005,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matdialogmodule",{"_index":1176,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdialogref",{"_index":780,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matexpansionmodule",{"_index":1145,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matformfieldmodule",{"_index":1123,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matgridlistmodule",{"_index":1147,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["maticonmodule",{"_index":1121,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matinputmodule",{"_index":1125,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matlistmodule",{"_index":1127,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matmomentdatemodule",{"_index":1164,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matpaginator",{"_index":1264,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matpaginatormodule",{"_index":1182,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matradiomodule",{"_index":1149,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matselectmodule",{"_index":1129,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsidenavmodule",{"_index":1119,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidermodule",{"_index":1184,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidetogglemodule",{"_index":1186,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsort",{"_index":1263,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matsortmodule",{"_index":1180,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsteppermodule",{"_index":1137,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattabledatasource",{"_index":1262,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mattablemodule",{"_index":1178,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattooltipmodule",{"_index":1139,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattreemodule",{"_index":1141,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["max",{"_index":447,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxdepth",{"_index":922,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["maximale",{"_index":511,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maximum",{"_index":517,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxlength",{"_index":448,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["menunode",{"_index":402,"title":{"interfaces/MenuNode.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["message",{"_index":777,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagecode",{"_index":1235,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagestring",{"_index":1011,"title":{},"body":{"injectables/DialogService.html":{}}}],["metadata",{"_index":412,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":449,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mindestens",{"_index":514,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minimum",{"_index":520,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minlength",{"_index":450,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["miscellaneous",{"_index":1722,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":1093,"title":{"modules/FormbuilderModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":1095,"title":{"modules.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{}}}],["moment",{"_index":1166,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["more",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ms",{"_index":1208,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["msg",{"_index":1237,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["msgerrors",{"_index":422,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mycsv.csv",{"_index":101,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":1759,"title":{},"body":{"index.html":{}}}],["navbarvisibility",{"_index":957,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["navigate",{"_index":1766,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigatetologinpage",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigator.mssaveblob",{"_index":159,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["navigator.mssaveblob(blob",{"_index":163,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["need",{"_index":1754,"title":{},"body":{"index.html":{}}}],["negativecallback",{"_index":1009,"title":{},"body":{"injectables/DialogService.html":{}}}],["nein",{"_index":801,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["new",{"_index":156,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["newkey",{"_index":937,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["newobj",{"_index":1732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["newvalidators",{"_index":601,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.email",{"_index":610,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.max",{"_index":603,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.maxlength",{"_index":605,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.min",{"_index":604,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.minlength",{"_index":606,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.pattern",{"_index":608,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.required",{"_index":602,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["next",{"_index":190,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["ng",{"_index":1760,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1346,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngmodule",{"_index":1111,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["ngonchanges",{"_index":1439,"title":{},"body":{"components/TableComponent.html":{}}}],["ngonchanges(changes",{"_index":1351,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngoninit",{"_index":431,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["nicht",{"_index":525,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["noaction",{"_index":1221,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["node",{"_index":768,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["node.name",{"_index":769,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodejs",{"_index":1742,"title":{},"body":{"index.html":{}}}],["nodownload",{"_index":84,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":1752,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1747,"title":{},"body":{"index.html":{}}}],["null",{"_index":218,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{}}}],["nulltoemptystring",{"_index":87,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":478,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{}}}],["numrows",{"_index":1320,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["numselected",{"_index":1318,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["obj",{"_index":61,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["obj.constructor",{"_index":918,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer",{"_index":919,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer(obj",{"_index":920,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj[key",{"_index":766,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object",{"_index":65,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object(val",{"_index":224,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.assign",{"_index":222,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{}}}],["object.assign(this.data",{"_index":1562,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.assign(txtfile",{"_index":1558,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(form",{"_index":756,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(actions).length",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object.keys(obj).reduce((accumulator",{"_index":765,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(object).foreach((key",{"_index":929,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.keys(this._options.objheader).foreach(key",{"_index":187,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(this._options.objheader).length",{"_index":147,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(value).length",{"_index":938,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.hasownproperty",{"_index":210,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.propertyisenumerable",{"_index":212,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.tostring.call(recipient[key1",{"_index":950,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.tostring.call(value",{"_index":934,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.values(roles",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object[key",{"_index":930,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["objectassign",{"_index":132,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectassign(target",{"_index":227,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["objheader",{"_index":83,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["ok",{"_index":1061,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["okaction",{"_index":1238,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["oncancel",{"_index":1222,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["onchanges",{"_index":1259,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onclose",{"_index":1223,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["ondatachange",{"_index":1536,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ondeleterecord",{"_index":1440,"title":{},"body":{"components/TableComponent.html":{}}}],["ondeleterecord(row",{"_index":1362,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondeleteselectedrecords",{"_index":1364,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondownload",{"_index":1441,"title":{},"body":{"components/TableComponent.html":{}}}],["ondownload(row",{"_index":1360,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onedit",{"_index":1442,"title":{},"body":{"components/TableComponent.html":{}}}],["onedit(row",{"_index":1358,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onfileselected",{"_index":1068,"title":{},"body":{"components/FileInputComponent.html":{}}}],["oninit",{"_index":411,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["onlangchange",{"_index":1535,"title":{},"body":{"injectables/TranslationService.html":{}}}],["operator",{"_index":1218,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["opt",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter(item",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt[0",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["options",{"_index":30,"title":{"interfaces/Options.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["optionsconfig",{"_index":1668,"title":{"interfaces/optionsConfig.html":{}},"body":{"coverage.html":{},"interfaces/optionsConfig.html":{}}}],["opts",{"_index":908,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.delimiter",{"_index":924,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.maxdepth",{"_index":925,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.object",{"_index":953,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.safe",{"_index":932,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["origobj",{"_index":1731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1323,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["out",{"_index":1104,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["output",{"_index":539,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["outputs",{"_index":1444,"title":{},"body":{"components/TableComponent.html":{}}}],["overview",{"_index":1796,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":951,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["package",{"_index":1697,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":812,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["page",{"_index":749,"title":{},"body":{"injectables/ConfigService.html":{}}}],["paginator",{"_index":1301,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["param",{"_index":135,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.max",{"_index":519,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.min",{"_index":521,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.pattern",{"_index":523,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredlength",{"_index":513,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":890,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["parser",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["path",{"_index":1520,"title":{},"body":{"injectables/TranslationService.html":{}}}],["path}${this.lang",{"_index":1545,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pattern",{"_index":522,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pflichtfeld",{"_index":510,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pipe",{"_index":1494,"title":{"pipes/TranslatePipe.html":{}},"body":{"pipes/TranslatePipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1495,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["pipetransform",{"_index":1500,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["placeholder",{"_index":451,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["position",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["positivecallback",{"_index":1008,"title":{},"body":{"injectables/DialogService.html":{}}}],["positivecallback(result",{"_index":1042,"title":{},"body":{"injectables/DialogService.html":{}}}],["post",{"_index":858,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["prefer",{"_index":192,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["prefix",{"_index":1534,"title":{},"body":{"injectables/TranslationService.html":{}}}],["prev",{"_index":927,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["previousvalue.concat(currentvalue",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1783,"title":{},"body":{"index.html":{}}}],["production",{"_index":1785,"title":{},"body":{"index.html":{}}}],["profile",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["project",{"_index":1736,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1758,"title":{},"body":{"index.html":{}}}],["projects/.../angular",{"_index":1728,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../autocomplete.component.ts",{"_index":1726,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form.service.ts",{"_index":1727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../table.component.ts",{"_index":1724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/formbuilder/src/lib/classes/angular",{"_index":6,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts",{"_index":408,"title":{},"body":{"components/BaseFieldComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:14",{"_index":533,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:151",{"_index":498,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:155",{"_index":496,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:159",{"_index":503,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:185",{"_index":497,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:189",{"_index":493,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:192",{"_index":499,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:26",{"_index":484,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:28",{"_index":490,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:29",{"_index":485,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:30",{"_index":467,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:31",{"_index":482,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:32",{"_index":480,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:33",{"_index":481,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:34",{"_index":479,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:35",{"_index":486,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:36",{"_index":469,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:37",{"_index":464,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:38",{"_index":471,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:39",{"_index":470,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:40",{"_index":487,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:41",{"_index":475,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:42",{"_index":477,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:43",{"_index":476,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:44",{"_index":489,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:45",{"_index":466,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:46",{"_index":473,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:47",{"_index":460,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:49",{"_index":462,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:50",{"_index":506,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:51",{"_index":459,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:54",{"_index":504,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:55",{"_index":505,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:56",{"_index":534,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:59",{"_index":491,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:63",{"_index":492,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:76",{"_index":495,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:84",{"_index":500,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:97",{"_index":502,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts",{"_index":1089,"title":{},"body":{"components/FormbuilderComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:13",{"_index":1091,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:17",{"_index":1092,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts",{"_index":1105,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts:128",{"_index":1110,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts",{"_index":1196,"title":{},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts:6",{"_index":1197,"title":{},"body":{"injectables/FormbuilderService.html":{}}}],["projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts",{"_index":1667,"title":{},"body":{"coverage.html":{},"interfaces/optionsConfig.html":{}}}],["projects/formbuilder/src/lib/interfaces/icustom",{"_index":1213,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ifield.ts",{"_index":1200,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts",{"_index":1242,"title":{},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts:8",{"_index":1245,"title":{},"body":{"interfaces/IForm.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts",{"_index":398,"title":{},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:7",{"_index":401,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:8",{"_index":400,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/isliderconfig.ts",{"_index":1247,"title":{},"body":{"interfaces/ISliderConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ivalidator.ts",{"_index":1390,"title":{},"body":{"interfaces/IValidator.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:111",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:127",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:13",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:138",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:14",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:154",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:158",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:16",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:163",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:185",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:189",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:193",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:200",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:22",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:72",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:89",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:12",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:13",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:14",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:21",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:52",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:59",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:83",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:87",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/data",{"_index":845,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts",{"_index":998,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:10",{"_index":1006,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:100",{"_index":1025,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:114",{"_index":1014,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:14",{"_index":1017,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:33",{"_index":1020,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:52",{"_index":1022,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:79",{"_index":1010,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/form.service.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts",{"_index":1496,"title":{},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts:11",{"_index":1499,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts",{"_index":1507,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:13",{"_index":1531,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:14",{"_index":1532,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:15",{"_index":1533,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:17",{"_index":1517,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:27",{"_index":1525,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:31",{"_index":1519,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:49",{"_index":1521,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:61",{"_index":1523,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:67",{"_index":1527,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:72",{"_index":1529,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:101",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:105",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:109",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:11",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:116",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:15",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:17",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:25",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:39",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:47",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:58",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:71",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:77",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:81",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:85",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:97",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/ui",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/server/app.js",{"_index":1757,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1530,"title":{},"body":{"injectables/TranslationService.html":{}}}],["promise((resolve",{"_index":1542,"title":{},"body":{"injectables/TranslationService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["propisenumerable",{"_index":211,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":1193,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["providedin",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["providers",{"_index":1112,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["public",{"_index":13,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pure",{"_index":1502,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["questionmark",{"_index":787,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["quotestrings",{"_index":76,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["r\\n",{"_index":90,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["r\\n\\n",{"_index":145,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["radiobutton",{"_index":1401,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton'},{'name",{"_index":641,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["radiobutton.component.html",{"_index":1403,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton.component.scss",{"_index":1402,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobuttoncomponent",{"_index":640,"title":{"components/RadiobuttonComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":1155,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reader",{"_index":1080,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.onload",{"_index":1081,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.readasarraybuffer(inputnode.files[0",{"_index":1086,"title":{},"body":{"components/FileInputComponent.html":{}}}],["readonly",{"_index":421,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["recipient",{"_index":948,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["recipient[key1",{"_index":952,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["reduce((previousvalue",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refresh",{"_index":1443,"title":{},"body":{"components/TableComponent.html":{}}}],["registerallowedactions",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registercurrentuser",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerlocaledata",{"_index":1168,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["registerlocaledata(localede",{"_index":1190,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reject",{"_index":1543,"title":{},"body":{"injectables/TranslationService.html":{}}}],["reload",{"_index":1769,"title":{},"body":{"index.html":{}}}],["removes",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replaysubject",{"_index":966,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":976,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["repo",{"_index":1774,"title":{},"body":{"index.html":{}}}],["report",{"_index":99,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["required",{"_index":452,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["requirements",{"_index":1741,"title":{},"body":{"index.html":{}}}],["res",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["reset",{"_index":1103,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"overview.html":{}}}],["resolve(this.data",{"_index":1553,"title":{},"body":{"injectables/TranslationService.html":{}}}],["resp",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":949,"title":{},"body":{"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["results",{"_index":231,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["resultslength",{"_index":1296,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":1489,"title":{},"body":{"components/TableComponent.html":{}}}],["right",{"_index":826,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["roles",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["rolesobject",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["router",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["row",{"_index":181,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["row.slice(0",{"_index":185,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["rows",{"_index":1316,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["run",{"_index":1746,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["rxjs/operators",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["s",{"_index":230,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["safe",{"_index":923,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["saveallowedactions(actions",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile(userprofile",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["scaffolding",{"_index":1777,"title":{},"body":{"index.html":{}}}],["search",{"_index":885,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["search.categories",{"_index":888,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.id",{"_index":886,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.text",{"_index":889,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["searchable",{"_index":1270,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["searchafternthcharacter",{"_index":1793,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["searchobj",{"_index":878,"title":{"interfaces/searchObj.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["searchusers",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["searchusers(search",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["select",{"_index":1333,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{}}}],["select'},{'name",{"_index":643,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["select.component.html",{"_index":1411,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":1410,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":642,"title":{"components/SelectComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1312,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selection",{"_index":1291,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel",{"_index":1256,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel(true",{"_index":1292,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selector",{"_index":413,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["selects",{"_index":1322,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["serve",{"_index":1749,"title":{},"body":{"index.html":{}}}],["server",{"_index":1755,"title":{},"body":{"index.html":{}}}],["server/app.js",{"_index":1772,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":1174,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/data",{"_index":1175,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/form.service",{"_index":541,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["services/translation.pipe",{"_index":1173,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["services/translation.service",{"_index":542,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["set",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"index.html":{}}}],["set('authorization",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["set('charset",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["set('content",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["set(allactionswithduplicates",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setallowedactions",{"_index":961,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setallowedactions(value",{"_index":969,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser",{"_index":962,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser(value",{"_index":971,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setisloggedin(value",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setlang",{"_index":1513,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setlang(lang",{"_index":1522,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath",{"_index":1514,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath(path",{"_index":1524,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setupconfig",{"_index":432,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setupconfig(config",{"_index":501,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setvalid",{"_index":999,"title":{},"body":{"injectables/DialogService.html":{}}}],["setvalid(positivecallback",{"_index":1013,"title":{},"body":{"injectables/DialogService.html":{}}}],["shouldnavbarbevisible",{"_index":975,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showactions",{"_index":1273,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showasobject",{"_index":1794,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["showcheckbox",{"_index":1272,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showcsvexport",{"_index":1274,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showdataimporterrordialog",{"_index":1000,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdataimporterrordialog(errordataarray",{"_index":1015,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdeleteallbutton",{"_index":1275,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showerrordialog",{"_index":1001,"title":{},"body":{"injectables/DialogService.html":{}}}],["showerrordialog(errormsg",{"_index":1019,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog",{"_index":1002,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog(infomsg",{"_index":1021,"title":{},"body":{"injectables/DialogService.html":{}}}],["showlabels",{"_index":78,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["shownavbar",{"_index":963,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["shownavbar(shouldnavbarbevisible",{"_index":973,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showpaginator",{"_index":1271,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showthumb",{"_index":1249,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showtitle",{"_index":80,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["sicher",{"_index":799,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["sie",{"_index":798,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["simple",{"_index":1046,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple'},{'name",{"_index":634,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["simple.component",{"_index":1030,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["simple.component.html",{"_index":1048,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.less",{"_index":1047,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts",{"_index":1045,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simple.component.ts:11",{"_index":1052,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:12",{"_index":1049,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:15",{"_index":1051,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:20",{"_index":1050,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple/error",{"_index":1029,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["simple/info",{"_index":1032,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simplechanges",{"_index":1260,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sind",{"_index":797,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["size",{"_index":819,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["slide",{"_index":1428,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slider",{"_index":1430,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":645,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slider.component.html",{"_index":1432,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider.component.scss",{"_index":1431,"title":{},"body":{"components/SliderComponent.html":{}}}],["slidercomponent",{"_index":644,"title":{"components/SliderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slidetoggle",{"_index":1420,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle'},{'name",{"_index":647,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slidetoggle.component.html",{"_index":1422,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle.component.scss",{"_index":1421,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetogglecomponent",{"_index":646,"title":{"components/SlideToggleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort",{"_index":1303,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sortkeys.foreach((key",{"_index":941,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["split",{"_index":942,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["split.length",{"_index":954,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["src",{"_index":1204,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["src/app",{"_index":1778,"title":{},"body":{"index.html":{}}}],["srcresult",{"_index":1069,"title":{},"body":{"components/FileInputComponent.html":{}}}],["start",{"_index":808,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"index.html":{}}}],["started",{"_index":1734,"title":{"index.html":{}},"body":{}}],["startfb",{"_index":1751,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["statischen",{"_index":1225,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["step",{"_index":1205,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{}}}],["step(object",{"_index":926,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["store.service",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store.service.ts",{"_index":956,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:11",{"_index":977,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:12",{"_index":964,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:17",{"_index":974,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":968,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:25",{"_index":967,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:29",{"_index":972,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:33",{"_index":965,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:37",{"_index":970,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:9",{"_index":979,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["stored",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["storedallowedactions",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["storeduserprofile",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["string(this.data.errormsg",{"_index":1056,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["string(this.data.infomsg",{"_index":1394,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["structure",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["styles",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["styleurls",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["sub",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl",{"_index":753,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl.push(value.name",{"_index":758,"title":{},"body":{"injectables/ConfigService.html":{}}}],["submit",{"_index":1211,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["subtask.name",{"_index":710,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["successful",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["super(fb",{"_index":707,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["super.ngoninit",{"_index":708,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["support",{"_index":1786,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1012,"title":{},"body":{"injectables/DialogService.html":{}}}],["svg",{"_index":1787,"title":{},"body":{"modules.html":{}}}],["symbols",{"_index":229,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["synchronizevalidator",{"_index":433,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["systemaction",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemresource",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemrole",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1279,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":649,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["table.component.html",{"_index":1289,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1290,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tablecomponent",{"_index":648,"title":{"components/TableComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1696,"title":{},"body":{"coverage.html":{}}}],["tabletype",{"_index":1267,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tap",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(resp",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["target",{"_index":226,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":417,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["templateurl",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["test",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["text",{"_index":474,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["text/csv;charset=utf8",{"_index":158,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["textinputcomponent",{"_index":650,"title":{"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this._isloggedin",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._options",{"_index":131,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.decimalseparator",{"_index":198,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.fieldseparator",{"_index":184,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename",{"_index":133,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename.replace",{"_index":160,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers",{"_index":194,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers.length",{"_index":180,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nodownload",{"_index":154,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nulltoemptystring",{"_index":208,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.objheader[key",{"_index":188,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.quotestrings",{"_index":204,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.showtitle",{"_index":143,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.title",{"_index":144,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.usebom",{"_index":140,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.useobjheader",{"_index":146,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._path",{"_index":1541,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this._path}${lang",{"_index":1563,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.adduser(user).subscribe(adduserres",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["this.allowedactions",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.allowedactions.next(value",{"_index":983,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.allowedactions[systemresource",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.apibaseurl",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.autocomplete",{"_index":595,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.collumnstobedisplayed",{"_index":1336,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.control",{"_index":543,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.dirty",{"_index":548,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.disable",{"_index":597,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors",{"_index":545,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors.hasownproperty(error",{"_index":546,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors[error",{"_index":550,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.touched",{"_index":547,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.valuechanges.subscribe(val",{"_index":564,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.csv",{"_index":141,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.currentuser",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.currentuser.next(value",{"_index":982,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.currentuser.roles",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.customfilterbasedondisplaycolumns(data",{"_index":1345,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data",{"_index":128,"title":{},"body":{"classes/AngularCsv.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.data.errormsg",{"_index":1053,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.data.icon",{"_index":793,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.data.infomsg",{"_index":1391,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.data.length",{"_index":1355,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data.message",{"_index":795,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.data[i",{"_index":196,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[i][index",{"_index":197,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[key",{"_index":1559,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.datachange.value",{"_index":764,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.datasource.data",{"_index":1329,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filter",{"_index":1307,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.filter(item",{"_index":1366,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.foreach(row",{"_index":1327,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.length",{"_index":1321,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1343,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator",{"_index":1347,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":1357,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sort",{"_index":1349,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datastore.getallowedactions().subscribe((actions",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.getcurrentuser().subscribe((user",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(actionresp['actions",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(null",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(storedallowedactions",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(null",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(profile",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(storeduserprofile",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.delete.emit(row",{"_index":1363,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.deletebulk.emit(filtereddatasource",{"_index":1368,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1041,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(errordialogsimplecomponent",{"_index":1038,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(infodialogsimplecomponent",{"_index":1039,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(matdialog",{"_index":1035,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogref.disableclose",{"_index":792,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.dialogservice.showerrordialog('error",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.disabled",{"_index":574,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.displayedcolumns.filter((column",{"_index":1340,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.map(header",{"_index":1337,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.push({collumnname",{"_index":1335,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.unshift({collumnname",{"_index":1332,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.download.emit(row",{"_index":1361,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.edit.emit(row",{"_index":1359,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.errormsg",{"_index":1055,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.field",{"_index":554,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.filtercontrol.patchvalue",{"_index":1356,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.flatcontrolls",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.form",{"_index":559,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.formatdata(this.data[i][index",{"_index":195,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.formatdata(this.data[i][key",{"_index":193,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.fs.addfield(this",{"_index":562,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname",{"_index":555,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname(this.name).options",{"_index":1416,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.fs.getform(this.field.name",{"_index":560,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getformcontrol(this.field",{"_index":561,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.generatecsv",{"_index":134,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbody",{"_index":152,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbodyaccordingheader",{"_index":150,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getdisplaydata(columns",{"_index":1385,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getfiltereddisplaydata(columns",{"_index":1387,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getheaderfromobj",{"_index":149,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getheaders",{"_index":151,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getmeesage(error",{"_index":549,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getname",{"_index":612,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getuseractions",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuserprofile",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getvalue",{"_index":613,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.headers",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["this.headers.set('usemockup",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hint",{"_index":566,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.hintlabel",{"_index":568,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.htmltype",{"_index":589,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.http.delete('/api",{"_index":892,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete('/api/logout",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(`/api/user/${user.id",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.url",{"_index":896,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get('/api",{"_index":891,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get('/api/user",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/user",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/user/${userid",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(langpath).subscribe",{"_index":1548,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.http.get(this.apibaseurl",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.url",{"_index":893,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post",{"_index":880,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post('/api/login",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post('/api/user",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.url",{"_index":894,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(url",{"_index":897,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put",{"_index":883,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put(`/api/user/${user.id",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`/api/user//${user.id",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["this.icon",{"_index":794,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.iconaction.emit",{"_index":611,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.iconbtn",{"_index":591,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.infomsg",{"_index":1393,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.init",{"_index":563,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.initialcolumns",{"_index":1339,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isallselected",{"_index":1326,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isloggedin",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.lang",{"_index":1540,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.loadallowedactions",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loaduserprofile",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.max",{"_index":580,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.maxlength",{"_index":584,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.message",{"_index":796,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.min",{"_index":582,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.minlength",{"_index":586,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.msgerrors[type](param",{"_index":553,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.name",{"_index":557,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.navbarvisibility",{"_index":981,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navbarvisibility.next(shouldnavbarbevisible",{"_index":980,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navigatetologinpage",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ondatachange.emit(this.data",{"_index":1552,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.ondatachange.subscribe(val",{"_index":1537,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.emit(this.lang",{"_index":1561,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.subscribe(val",{"_index":1539,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.options",{"_index":1415,"title":{},"body":{"components/SelectComponent.html":{},"injectables/UserService.html":{}}}],["this.paginator",{"_index":1348,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.placeholder",{"_index":556,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.registerallowedactions",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.registercurrentuser",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.required",{"_index":573,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.resultslength",{"_index":1354,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.router.navigate(['login",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveallowedactions(actions",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveuserprofile(user",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.selection.clear",{"_index":1310,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.select(row",{"_index":1328,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.indexof(item",{"_index":1367,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.length",{"_index":1319,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.setupconfig(this.field",{"_index":558,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.sort",{"_index":1350,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.srcresult",{"_index":1084,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.synchronizevalidator",{"_index":598,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.translate.data[key",{"_index":1506,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.ts.data[this.value",{"_index":599,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.ts.transform(header.collumnkey",{"_index":1377,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.updatedata(translation",{"_index":1551,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updatedata(val",{"_index":1538,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updateroles(user",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateroles(user).subscribe(updateroleresp",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["this.use(this.lang",{"_index":1560,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userdata",{"_index":1556,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userservice.getuserprofile().subscribe((profile:any",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.getuserroles().subscribe((actionresp",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.login(usernameandpassword).pipe",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.logout().subscribe(null",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validators",{"_index":575,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.email",{"_index":609,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.pattern",{"_index":607,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.value",{"_index":565,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.viewoptions.showactions",{"_index":1334,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showcheckbox",{"_index":1331,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showdeleteallbutton",{"_index":1330,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["throw",{"_index":220,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["throwerror",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throwerror(errobj",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["timer",{"_index":876,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["timer(2000).pipe",{"_index":900,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["title",{"_index":81,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["tmpdata",{"_index":760,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tmpdis",{"_index":572,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["tmpreq",{"_index":571,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["todo",{"_index":1276,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["toggle",{"_index":1188,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["toobject",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toobject(target",{"_index":228,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["toobject(val",{"_index":216,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":453,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["tooltipdelay",{"_index":1207,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["tooltipposition",{"_index":1206,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["total",{"_index":1315,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["transform",{"_index":1497,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["transform(key",{"_index":1498,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translate",{"_index":709,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{}}}],["translatepipe",{"_index":1101,"title":{"pipes/TranslatePipe.html":{}},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["translation",{"_index":1549,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translation.service",{"_index":1501,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translationservice",{"_index":458,"title":{"injectables/TranslationService.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":407,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["ts",{"_index":423,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"miscellaneous/functions.html":{}}}],["ts.onlangchange.subscribe(lang",{"_index":995,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ts:translationservice",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":189,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["txt",{"_index":865,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["txtbooth",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["txtfile",{"_index":1554,"title":{},"body":{"injectables/TranslationService.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["typeerror",{"_index":221,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["typeof",{"_index":129,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ufeff",{"_index":92,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["ui",{"_index":1026,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"index.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"pipes/TranslatePipe.html":{},"miscellaneous/functions.html":{}}}],["unflatten",{"_index":905,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["unflatten(target",{"_index":916,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["up",{"_index":1744,"title":{},"body":{"index.html":{}}}],["update",{"_index":853,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["update(id",{"_index":872,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["updatedata",{"_index":1515,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updatedata(data",{"_index":1526,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updateon",{"_index":1209,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["updateroles",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(user",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":1485,"title":{},"body":{"components/TableComponent.html":{}}}],["uri",{"_index":164,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["url",{"_index":847,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["url.createobjecturl(blob",{"_index":171,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["use",{"_index":1516,"title":{},"body":{"injectables/TranslationService.html":{},"index.html":{}}}],["use(lang",{"_index":1528,"title":{},"body":{"injectables/TranslationService.html":{}}}],["usebom",{"_index":82,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":912,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["useful",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["useheader",{"_index":86,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["useobjheader",{"_index":85,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user.id",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user/profile",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["user/role",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata",{"_index":1510,"title":{},"body":{"injectables/TranslationService.html":{}}}],["userid",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usernameandpassword",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userprofile",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":255,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":1194,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["utf",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["util",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":217,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["val:any",{"_index":214,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["valid",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validation",{"_index":537,"title":{},"body":{"components/BaseFieldComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validation.ts",{"_index":1214,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["validatorfn",{"_index":1203,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validators",{"_index":454,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["valide",{"_index":528,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value['actions",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["var",{"_index":619,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["variable",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1799,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1740,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1250,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["vertical_align_bottom",{"_index":1479,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild",{"_index":1261,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matpaginator",{"_index":1300,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matsort",{"_index":1302,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewoptions",{"_index":1299,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["von",{"_index":1224,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["werten",{"_index":1226,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["whether",{"_index":1311,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["width",{"_index":1043,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["widthinpercentage",{"_index":1255,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["withcredentials",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["word",{"_index":1063,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["work",{"_index":1753,"title":{},"body":{"index.html":{}}}],["works",{"_index":1090,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["wurde",{"_index":524,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["wählen",{"_index":1418,"title":{},"body":{"components/SelectComponent.html":{}}}],["xmlexport",{"_index":1003,"title":{},"body":{"injectables/DialogService.html":{}}}],["xmlexport(positivecallback",{"_index":1024,"title":{},"body":{"injectables/DialogService.html":{}}}],["yes",{"_index":39,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{}}}],["zeichen",{"_index":515,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["zone.js",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1102,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AngularCsv.html":{"url":"classes/AngularCsv.html","title":"class - AngularCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                labels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Private\n                                generateCsv\n                            \n                            \n                                getBody\n                            \n                            \n                                getBodyAccordingHeader\n                            \n                            \n                                getCsvData\n                            \n                            \n                                getHeaderFromObj\n                            \n                            \n                                getHeaders\n                            \n                            \n                                    Static\n                                isFloat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(DataJSON: any, filename: string, options?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DataJSON\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:218\n                \n            \n\n\n            \n                \n                    Format Data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCsv\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCsv()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:88\n                \n            \n\n\n            \n                \n                    Generate and Download Csv\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:191\n                \n            \n\n\n            \n                \n                    Create Body\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBodyAccordingHeader\n                        \n                    \n                \n            \n            \n                \ngetBodyAccordingHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:170\n                \n            \n\n\n            \n                \n                    Create Body according to obj header\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCsvData\n                        \n                    \n                \n            \n            \n                \ngetCsvData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaderFromObj\n                        \n                    \n                \n            \n            \n                \ngetHeaderFromObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:156\n                \n            \n\n\n            \n                \n                    Create Header from Object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:142\n                \n            \n\n\n            \n                \n                    Create Headers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFloat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFloat(input: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:81\n                \n            \n\n\n            \n                \n                    Check if is Float\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isLoggedIn\n                            \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                bla\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfUserIsAlreadyLoggedIn\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                    Public\n                                handleSessionTimeout\n                            \n                            \n                                loadUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                navigateToLoginPage\n                            \n                            \n                                registerAllowedActions\n                            \n                            \n                                registerCurrentUser\n                            \n                            \n                                saveUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, dataStore: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataStore\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAlreadyLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAlreadyLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:138\n                \n            \n\n\n            \n                \n                    Checks currently only if the userProfile is stored locally\nFIXME: An additional test for a valid cookie would be more useful.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleSessionTimeout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSessionTimeout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:127\n                \n            \n\n\n            \n                \n                    Removes Authentication Informations from Localstorage\nand navigates to the loginpage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserProfile\n                        \n                    \n                \n            \n            \n                \nloadUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(navigateToLoginpage: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    navigateToLoginpage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLoginPage\n                        \n                    \n                \n            \n            \n                \nnavigateToLoginPage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAllowedActions\n                        \n                    \n                \n            \n            \n                \nregisterAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerCurrentUser\n                        \n                    \n                \n            \n            \n                \nregisterCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(userProfile: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bla\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'txtBooth-user'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:185\n                                \n                            \n\n                \n                    \n                        setisLoggedIn(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:189\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DataStoreService } from './data-store.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private _isLoggedIn = false;\n  bla = 'txtBooth-user';\n\n  private currentUser: {\n    id?: string;\n    name?: string;\n    email?: string;\n\n  };\n  private allowedActions: Object;\n\n  constructor(private router: Router,\n    private userService: UserService,\n    private dataStore: DataStoreService\n  ) {\n\n    this.registerCurrentUser();\n    this.registerAllowedActions();\n\n    const storedUserProfile = this.loadUserProfile();\n   //const storedAllowedActions = this.loadAllowedActions();\n\n    if (!!storedUserProfile) {\n      this.dataStore.setCurrentUser(storedUserProfile);\n    }\n/*\n    if (!!storedAllowedActions) {\n      this.dataStore.setAllowedActions(storedAllowedActions);\n    }\n*/\n  }\n/*\n  hasAvailableAction(systemResource: SystemResource, systemAction: SystemAction) {\n    if (systemResource && systemAction && this.allowedActions && systemResource in this.allowedActions) {\n      const roles: Object = this.allowedActions[systemResource];\n      const allActionsWithDuplicates = Object.values(roles)\n        .reduce((previousValue, currentValue) => {\n          return previousValue.concat(currentValue);\n        });\n      const availableActions = Array.from(new Set(allActionsWithDuplicates)); // [C, C, R, R, U] => [C, R, U]\n      if (!!availableActions && availableActions.indexOf(systemAction) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasRole(systemRole: SystemRole) {\n    if (!systemRole || !this.currentUser) {\n      return false;\n    }\n\n    const currentUserRoles: string[] = this.currentUser.roles;\n    if (currentUserRoles.indexOf(systemRole) >= 0) {\n      return true;\n    }\n    return false;\n  }\n*/\n  login(username: string, password: string): Observable {\n    const usernameAndPassword = username + ':' + password;\n\n    return this.userService.login(usernameAndPassword).pipe(\n      tap(resp => {\n        // console.log('[authenticationService] - login successful', resp);\n        this.isLoggedIn = true;\n      }),\n      tap(() => {\n        this.getUserProfile();\n      }),\n      tap(() => {\n        //this.getUserActions();\n      })\n    );\n  }\n\n  getUserProfile() {\n    this.userService.getUserProfile().subscribe((profile:any) => {\n      // console.log('[AuthenticationService] - getUserProfile', profile);\n      this.dataStore.setCurrentUser(profile);\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n/*\n  getUserActions() {\n    this.userService.getUserRoles().subscribe((actionResp: Object) => {\n      if (actionResp.hasOwnProperty('actions')) {\n        // console.log('[AuthenticationService] - getUserActions', actionResp);\n        this.dataStore.setAllowedActions(actionResp['actions']);\n      } else {\n        this.dataStore.setAllowedActions(null);\n      }\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n*/\n  public logout(navigateToLoginpage: boolean = true): void {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n\n    this.userService.logout().subscribe(null, null, () => {\n      if (navigateToLoginpage) {\n        this.navigateToLoginPage();\n      }\n    });\n  }\n\n  /**\n   * Removes Authentication Informations from Localstorage\n   * and navigates to the loginpage.\n   */\n  public handleSessionTimeout() {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    this.navigateToLoginPage();\n  }\n\n  /**\n   * Checks currently only if the userProfile is stored locally\n   * FIXME: An additional test for a valid cookie would be more useful.\n   */\n  checkIfUserIsAlreadyLoggedIn(): boolean {\n    const storedUserProfile = this.loadUserProfile();\n    const storedAllowedActions = true ; //his.loadAllowedActions();\n\n    if (!!storedUserProfile && !!storedAllowedActions) {\n      this.isLoggedIn = true;\n      this.dataStore.setCurrentUser(storedUserProfile);\n      // this.dataStore.setAllowedActions(storedAllowedActions);\n      return true;\n    }\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    return false;\n  }\n\n  navigateToLoginPage() {\n    this.router.navigate(['login']);\n  }\n\n  loadUserProfile(): any {\n    let res = localStorage.getItem(this.bla);\n      return JSON.parse(res != null? res : '') as any;\n  }\n\n  saveUserProfile(userProfile: any): void {\n    // console.log('saveUserProfile', userProfile);\n    if (!!userProfile) {\n      localStorage.setItem('txtBooth-user', JSON.stringify(userProfile));\n    } else {\n      localStorage.removeItem('txtBooth-user');\n    }\n  }\n/*\n  loadAllowedActions(): any {\n    return JSON.parse(localStorage.getItem(this.USER_ALLOWED_ACTIONS));\n  }\n\n  saveAllowedActions(actions: any): void {\n    // console.log('saveAllowedActions', actions);\n    if (!!actions && Object.keys(actions).length > 0) {\n      localStorage.setItem(this.USER_ALLOWED_ACTIONS, JSON.stringify(actions));\n    } else {\n      localStorage.removeItem(this.USER_ALLOWED_ACTIONS);\n    }\n  }\n*/\n  get isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n\n  set isLoggedIn(value: boolean) {\n    this._isLoggedIn = value;\n  }\n\n  registerCurrentUser() {\n    this.dataStore.getCurrentUser().subscribe((user: any) => {\n      this.currentUser = user;\n      this.saveUserProfile(user);\n    });\n  }\n\n  registerAllowedActions() {\n    this.dataStore.getAllowedActions().subscribe((actions: Object) => {\n      this.allowedActions = actions;\n      //this.saveAllowedActions(actions);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoSearch.html":{"url":"classes/AutoSearch.html","title":"class - AutoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoSearch[] | string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFieldComponent.html":{"url":"components/BaseFieldComponent.html","title":"component - BaseFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/classes/field.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    IField\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                field\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                            \n                                    Public\n                                ts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { IField, IHTMLAttributes } from '../interfaces/ifield';\nimport { ICustomValidation } from '../interfaces/icustom-validation';\nimport { IValidator } from '../interfaces/ivalidator';\nimport { EventEmitter, Input, OnInit, Component, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { FormService } from '../services/form.service';\nimport { TranslationService } from '../services/translation.service';\n\n@Component({\n  selector: 'app-base-field',\n  template: ''\n})\nexport class BaseFieldComponent implements IField, OnInit {\n  private readonly MSGerrors = {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  };\n\n  @Input() name = 'home_ui_new';\n\n  @Input() value = '';\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() minLength: number;\n  @Input() maxLength: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() required: boolean;\n  @Input() form: FormGroup;\n  @Input() control: FormControl;\n  @Input() hintlabel = '';\n  @Input() hint = '';\n  @Input() tooltip = '';\n  @Input() htmlType = 'text';\n  @Input() iconBtn: string;\n  @Input() iconAction: EventEmitter = new EventEmitter();\n  @Input() validators: IValidator;\n  @Input() customValidation: ICustomValidation[];\n  @Input() htmlAttribute: IHTMLAttributes;\n  @Input() autocomplete = 'on';\n\n  @Input() change: EventEmitter = new EventEmitter();\n  init = true;\n  field: IField;\n\n  constructor(\n    public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService\n  ) {}\n\n  get(): BaseFieldComponent {\n    return this;\n  }\n\n  getErrorMeesage() {\n    if (this.control) {\n      for (const error in this.control.errors) {\n        if (\n          (this.control.errors.hasOwnProperty(error) && this.control.touched) ||\n          this.control.dirty\n        ) {\n          return this.getMeesage(error, this.control.errors[error]);\n        }\n      }\n    }\n  }\n\n  getMeesage(type: string, param: any) {\n    console.log(type);\n\n    if(this.MSGerrors[type](param)) {\n      return this.MSGerrors[type](param);\n    }\n  }\n\n  ngOnInit(): void {\n    this.field = this.fs.getConfigByName(\n      this.placeholder ? this.placeholder : this.name\n    );\n\n    this.setUpConfig(this.field);\n    this.form = this.fs.getForm(this.field.name);\n    this.control = this.fs.getFormControl(this.field);\n    this.fs.addField(this);\n    this.init = false;\n    this.control.valueChanges.subscribe(val => (this.value = val));\n  }\n\n  public setUpConfig(config: IField) {\n    this.hint = config.hint;\n    this.hintlabel = config.hintlabel;\n\n    if (!this.hintlabel) {\n      this.hintlabel = config.name + '#hintlabel';\n    }\n\n    let tmpReq = false;\n    let tmpDis = false;\n\n    if (this.init) {\n      tmpReq = this.required ? this.required : null;\n      tmpDis = this.disabled ? this.disabled : null;\n    }\n\n    this.validators = config.validators;\n    this.disabled = config.disabled ? config.disabled : tmpDis;\n    this.required = config.validators ? config.validators.required : tmpReq;\n    // console.log(this.required);\n\n    this.max = config.validators\n      ? config.validators.max\n      : this.max\n      ? this.max\n      : null;\n    this.min = config.validators\n      ? config.validators.min\n      : this.min\n      ? this.min\n      : null;\n    this.maxLength = config.validators\n      ? config.validators.maxLength\n      : this.maxLength\n      ? this.maxLength\n      : null;\n    this.minLength = config.validators\n      ? config.validators.minLength\n      : this.minLength\n      ? this.minLength\n      : null;\n    this.value = config.value || '';\n    this.htmlType = config.htmlType ? config.htmlType : this.htmlType;\n    this.iconBtn = config.icon? config.icon: this.iconBtn;\n\n    if (config.htmlAttribute && config.htmlAttribute.autocomplete) {\n      this.autocomplete = config.htmlAttribute.autocomplete;\n    }\n    if(this.field.disabled) {\n      this.control.disable();\n    }\n    this.synchronizeValidator();\n  }\n\n  getValue() {\n    return this.ts.data[this.value + '#label'] || this.value;\n  }\n\n  getName() {\n    return this.placeholder ? this.placeholder : this.name;\n  }\n\n  synchronizeValidator() {\n    const newValidators: IValidator = {};\n    if (this.required) {\n      newValidators.required = this.required;\n    }\n    if (this.max) {\n      newValidators.max = this.max;\n    }\n    if (this.min) {\n      newValidators.min = this.min;\n    }\n    if (this.maxLength) {\n      newValidators.maxLength = this.maxLength;\n    }\n    if (this.minLength) {\n      newValidators.minLength = this.minLength;\n    }\n    if (this.validators && this.validators.pattern) {\n      newValidators.pattern = this.validators.pattern;\n    }\n    if (this.validators && this.validators.email) {\n      newValidators.email = this.validators.email;\n    }\n    this.validators = newValidators;\n  }\n\n  getValidators() {\n    return this.validators;\n  }\n\n  getFieldConfig() {\n    return this as IField;\n  }\n  iconAct() {\n    this.iconAction.emit(\n      {\n        name: this.getName(),\n        value: this.getValue(),\n        btn: this.iconBtn\n      }\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'before'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseFieldComponent implements OnInit {\n  @Input() position = 'before';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService\n  ) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ getName() + \"#label\" | translate }}\n  \n\n\n\n  \n    {{ getName() + \"#label\" | translate }}\n  \n  \n    \n      \n        {{ subtask.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getName() + \"#label\" | translate }}        {{ getName() + \"#label\" | translate }}                      {{ subtask.name }}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configs\n                            \n                            \n                                dataChange\n                            \n                            \n                                flatControlls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                buildTree\n                            \n                            \n                                getControlls\n                            \n                            \n                                getFlatControlls\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildFileTree\n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: literal type, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:59\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of AutoSearch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AutoSearch[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTree\n                        \n                    \n                \n            \n            \n                \nbuildTree(config: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlls\n                        \n                    \n                \n            \n            \n                \ngetControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFlatControlls\n                        \n                    \n                \n            \n            \n                \ngetFlatControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatControlls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/config.service.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataFlattnerService } from './data-flattner.service';\nimport { IField } from '../interfaces/ifield';\nimport { MenuNode, AutoSearch } from '../interfaces/imenu';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  flatControlls: any[];\n  dataChange = new BehaviorSubject([]);\n  configs: any;\n\n  constructor(private http: HttpClient) {\n    this.flatControlls = [];\n    // console.log(this.flatControlls);\n  }\n\n  buildTree(config: any) {\n    // console.log(config);\n    const entries = [];\n    for (const page in config) {\n      if (page) {\n        for (const formN in config[page]) {\n          if (config[page][formN]) {\n            const subLvl = [];\n            const form: IField[] = config[page][formN];\n            // console.log(form);\n            for (const [key, value] of Object.entries(form)) {\n              // console.log(`${key}: ${value}`);\n              subLvl.push(value.name);\n              // children.push(value.name);\n            }\n            const tmpData = [\n              {\n                name: formN,\n                children: subLvl\n              }\n            ];\n            entries.push(tmpData);\n          }\n        }\n      }\n    }\n    // DataFlattnerService.flatten(tmpData)\n    // this.flatControlls = tmpData;\n    // console.log(\"newtree\", this.flatControlls);\n  }\n\n  get data(): AutoSearch[] {\n    return this.dataChange.value;\n  }\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `AutoSearch`.\n   */\n  buildFileTree(obj: { [key: string]: any }, level: number): AutoSearch[] {\n    return Object.keys(obj).reduce((accumulator, key) => {\n      const value = obj[key];\n      // console.log(value);\n\n      const node = new AutoSearch();\n      node.name = key;\n      if (value != null) {\n        if (typeof value === 'object' && level \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.less\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'questionmark'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  public icon = 'questionmark';\n  public errorMsg: string[] = [];\n  public message: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.message) {\n      this.message = this.data.message;\n    } else {\n      this.message = 'Sind Sie sicher?';\n    }\n    console.log(this.message);\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Sind Sie sicher?\n\n\n\n\n  {{message | translate}}\n\n\n\n\n  Nein\n  \n  \n  \n    Ja\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.less\n                \n                #confirm-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#confirm-dialog_title > h2 {\n  margin: 0;\n}\n\n#confirm-dialog_message {\n  font-size: 14px;\n}\n\nmat-dialog-content#confirm-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Sind Sie sicher?  {{message | translate}}  Nein          Ja  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvConfigConsts.html":{"url":"classes/CsvConfigConsts.html","title":"class - CsvConfigConsts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvConfigConsts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BOM\n                            \n                            \n                                    Static\n                                DEFAULT_DECIMAL_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FIELD_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FILENAME\n                            \n                            \n                                    Static\n                                DEFAULT_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_NO_DOWNLOAD\n                            \n                            \n                                    Static\n                                DEFAULT_NULL_TO_EMPTY_STRING\n                            \n                            \n                                    Static\n                                DEFAULT_OBJ_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_QUOTE\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_LABELS\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_USE_BOM\n                            \n                            \n                                    Static\n                                DEFAULT_USE_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_USE_OBJ_HEADER\n                            \n                            \n                                    Static\n                                EOL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BOM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\ufeff'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_DECIMAL_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FIELD_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ','\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mycsv.csv'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NO_DOWNLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NULL_TO_EMPTY_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_QUOTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\"'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_LABELS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'My Report'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_BOM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\r\\n'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataConnectorService.html":{"url":"injectables/DataConnectorService.html","title":"injectable - DataConnectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataConnectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteField\n                            \n                            \n                                get\n                            \n                            \n                                getAsyncValidation\n                            \n                            \n                                getFields\n                            \n                            \n                                insertField\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(id)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(itemType: string, id: string, kat: string[], txt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"0\"\n                                    \n\n                                \n                                \n                                    kat\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    txt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsyncValidation\n                        \n                    \n                \n            \n            \n                \ngetAsyncValidation(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFields\n                        \n                    \n                \n            \n            \n                \ngetFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertField\n                        \n                    \n                \n            \n            \n                \ninsertField(field: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataFlattnerService.html":{"url":"injectables/DataFlattnerService.html","title":"injectable - DataFlattnerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataFlattnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flatten\n                            \n                            \n                                    Static\n                                isBuffer\n                            \n                            \n                                    Static\n                                isFlat\n                            \n                            \n                                    Static\n                                unflatten\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    flatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBuffer(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:26\n                \n            \n\n\n            \n                \n                    isBuffer\nused for flatten unflatten\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFlat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFlat(object: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unflatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    unflatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                navbarVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllowedActions\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getNavbarState\n                            \n                            \n                                    Public\n                                setAllowedActions\n                            \n                            \n                                    Public\n                                setCurrentUser\n                            \n                            \n                                    Public\n                                showNavbar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNavbarState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavbarState()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllowedActions(value: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentUser(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showNavbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    showNavbar(shouldNavbarBeVisible: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shouldNavbarBeVisible\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        navbarVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n\n  private navbarVisibility: BehaviorSubject = new BehaviorSubject(true);\n\n  private currentUser: ReplaySubject = new ReplaySubject(1);\n  private allowedActions: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n  }\n\n  public showNavbar(shouldNavbarBeVisible: boolean): void {\n    this.navbarVisibility.next(shouldNavbarBeVisible);\n  }\n\n  public getNavbarState(): BehaviorSubject {\n    return this.navbarVisibility;\n  }\n\n  public getCurrentUser(): ReplaySubject {\n    return this.currentUser;\n  }\n\n  public setCurrentUser(value: any) {\n    this.currentUser.next(value);\n  }\n\n  public getAllowedActions(): ReplaySubject {\n    return this.allowedActions;\n  }\n\n  public setAllowedActions(value: Object): void {\n    this.allowedActions.next(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateInputComponent.html":{"url":"components/DateInputComponent.html","title":"component - DateInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-input\n            \n\n            \n                styleUrls\n                ./date-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, dateAdapter: DateAdapter, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateAdapter\n                                                  \n                                                        \n                                                                    DateAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { DateAdapter } from '@angular/material/core';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss']\n})\nexport class DateInputComponent extends BaseFieldComponent implements OnInit {\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    private dateAdapter: DateAdapter,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n    dateAdapter.setLocale(ts.lang);\n\n    ts.onLangChange.subscribe(lang => dateAdapter.setLocale(lang));\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./date-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                setValid\n                            \n                            \n                                    Public\n                                showDataImportErrorDialog\n                            \n                            \n                                    Public\n                                showErrorDialog\n                            \n                            \n                                    Public\n                                showInfoDialog\n                            \n                            \n                                    Public\n                                xmlExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/dialog.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:79\n                \n            \n\n\n            \n                \n                    messageString may also be an html String like:\nAre you sure?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    setValid(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showDataImportErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDataImportErrorDialog(errorDataArray: any[], afterDialogCallback: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorDataArray\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showErrorDialog(errorMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showInfoDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInfoDialog(infoMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        xmlExport\n                        \n                    \n                \n            \n            \n                \n                    \n                    xmlExport(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from '../ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from '../ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  public showDataImportErrorDialog(errorDataArray: any[],\n    afterDialogCallback: Function\n  ): MatDialogRef {\n\n    const dialogData = {\n      dataImportErrors: errorDataArray\n    };\n\n    const dialogRef = this.dialog.open(MatDialog, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      afterDialogCallback(result);\n    });\n\n    return dialogRef;\n  }\n\n  public showErrorDialog(errorMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      errorMsg: errorMsg\n    };\n\n    const dialogRef = this.dialog.open(ErrorDialogSimpleComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  public showInfoDialog(infoMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      infoMsg: infoMsg\n    };\n\n    const dialogRef = this.dialog.open(InfoDialogSimpleComponent, {\n      data: dialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  /**\n   * messageString may also be an html String like:\n   * Are you sure?\n   *\n   * @param {string} messageString\n   * @param {Function} positiveCallback\n   * @param {Function} negativeCallback\n   */\n  public confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function): void {\n    console.log(messageString);\n\n    const dialogData = {\n      message: messageString\n    };\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result === true) {\n        positiveCallback();\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public xmlExport(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog);\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public setValid(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog, {width: '350px'});\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogSimpleComponent.html":{"url":"components/ErrorDialogSimpleComponent.html","title":"component - ErrorDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-simple\n            \n\n            \n                styleUrls\n                ./error-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog-simple',\n  templateUrl: './error-dialog-simple.component.html',\n  styleUrls: ['./error-dialog-simple.component.less']\n})\nexport class ErrorDialogSimpleComponent implements OnInit {\n\n  public icon = 'error';\n  public errorMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.errorMsg && Array.isArray(this.data.errorMsg)) {\n      this.errorMsg = this.data.errorMsg;\n    } else {\n      this.errorMsg = [String(this.data.errorMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Es ist ein Fehler aufgetreten!\n   1\">Es sind Fehler aufgetreten!\n\n\n\n\n  \n    {{errorMsg | translate}}\n  \n\n\n\n\n  \n    OK\n  \n\n\n    \n\n    \n                \n                    ./error-dialog-simple.component.less\n                \n                \n#error-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#error-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.error-dialog_message {\n  font-size: 14px;\n  word-break: break-all;\n}\n\nmat-dialog-content#error-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Es ist ein Fehler aufgetreten!   1\">Es sind Fehler aufgetreten!      {{errorMsg | translate}}        OK  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-input\n            \n\n            \n                styleUrls\n                ./file-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcResult\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        srcResult\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.scss']\n})\nexport class FileInputComponent extends BaseFieldComponent implements OnInit {\n\n  @Input() srcResult: any;\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.name);\n    // console.log(this.control);\n    // console.log(this.form);\n  }\n\n  onFileSelected() {\n    const inputNode: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined' && typeof (inputNode.files[0]) !== 'undefined') {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        // console.log(e);\n\n        this.srcResult = e.target.result;\n      };\n\n      reader.readAsArrayBuffer(inputNode.files[0]);\n      // console.log(reader);\n\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Choose File\n  \n  \n\n    \n\n    \n                \n                    ./file-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose File    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormbuilderComponent.html":{"url":"components/FormbuilderComponent.html","title":"component - FormbuilderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormbuilderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/formbuilder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-formbuilder\n            \n\n\n\n            \n                template\n                \n  formbuilder works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-formbuilder',\n  template: `\n    \n      formbuilder works!\n    \n  `,\n  styles: [\n  ]\n})\nexport class FormbuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  formbuilder works!'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormbuilderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormbuilderModule.html":{"url":"modules/FormbuilderModule.html","title":"module - FormbuilderModule","body":"\n                   \n\n\n\n\n    Modules\n    FormbuilderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_bootstrap\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            BaseFieldComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            ErrorDialogSimpleComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            InfoDialogSimpleComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            FormbuilderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.module.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { ngModule: typeof FormbuilderModule; providers: {}; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormbuilderComponent } from './formbuilder.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectComponent } from './ui-components/select/select.component';\nimport { TextInputComponent } from './ui-components/text-input/text-input.component';\nimport { DateInputComponent } from './ui-components/date-input/date-input.component';\nimport { FileInputComponent } from './ui-components/file-input/file-input.component';\nimport { AutocompleteComponent } from './ui-components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './ui-components/checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './ui-components/radiobutton/radiobutton.component';\nimport { SliderComponent } from './ui-components/slider/slider.component';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { BaseFieldComponent } from './classes/field';\nimport { TranslatePipe } from './services/translation.pipe';\nimport { TranslationService } from './services/translation.service';\nimport { ConfigService } from './services/config.service';\nimport { DataFlattnerService } from './services/data-flattner.service';\nimport { ConfirmDialogComponent } from './ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from './ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from './ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TableComponent } from './ui-components/table/table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { SlideToggleComponent } from './ui-components/slideToggle/slideToggle.component';\n\nregisterLocaleData(localeDe, 'de');\n\n@NgModule({\n  declarations: [\n    FormbuilderComponent,\n    BaseFieldComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TranslatePipe,\n    ConfirmDialogComponent,\n    ErrorDialogSimpleComponent,\n    InfoDialogSimpleComponent,\n    TableComponent,\n    SlideToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSliderModule,\n    MatSlideToggleModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'de' },\n    TranslatePipe\n  ],\n  bootstrap: [FormbuilderComponent],\n  exports: [\n    FormbuilderComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TableComponent,\n    SlideToggleComponent\n  ]\n})\n\nexport class FormbuilderModule {\n\n  static forRoot() {\n    return {\n      ngModule: FormbuilderModule,\n      providers: [\n        TranslationService,\n        ConfigService,\n        DataFlattnerService\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormbuilderService.html":{"url":"injectables/FormbuilderService.html","title":"injectable - FormbuilderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormbuilderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormbuilderService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeEntry.html":{"url":"interfaces/ICodeEntry.html","title":"interface - ICodeEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomValidation.html":{"url":"interfaces/ICustomValidation.html","title":"interface - ICustomValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICustomValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToCheck\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToUpdate\n                                        \n                                \n                                \n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         IDialogConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDialogConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToCheck\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToCheck:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDialogConfig.html":{"url":"interfaces/IDialogConfig.html","title":"interface - IDialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            okAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onCancel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        okAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        okAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onCancel:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IField.html":{"url":"interfaces/IField.html","title":"interface - IField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customValidation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hintlabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlAttribute\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconAction\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipdelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipposition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidatorFn:         AsyncValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AsyncValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customValidation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customValidation:         ICustomValidation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICustomValidation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintlabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hintlabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlAttribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlAttribute:         IHTMLAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHTMLAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconAction:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ICodeEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICodeEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipdelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipdelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipposition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateOn:     \"change\" | \"blur\" | \"submit\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"change\" | \"blur\" | \"submit\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validatorFn:         ValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:         IValidator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IValidator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlatObject.html":{"url":"interfaces/IFlatObject.html","title":"interface - IFlatObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlatObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForm.html":{"url":"interfaces/IForm.html","title":"interface - IForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iform.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            form\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getForm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/interfaces/iform.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        form:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\nimport { IField, IFormObj } from './ifield';\n\nexport interface IForm {\n  form: FormGroup;\n  name: string;\n\n  getForm(name: string): FormGroup;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormObj.html":{"url":"interfaces/IFormObj.html","title":"interface - IFormObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     IFormObj[] | IField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormObj[] | IField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHTMLAttributes.html":{"url":"interfaces/IHTMLAttributes.html","title":"interface - IHTMLAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHTMLAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autocomplete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autocomplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autocomplete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISliderConfig.html":{"url":"interfaces/ISliderConfig.html","title":"interface - ISliderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISliderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inverted\n                                        \n                                \n                                \n                                        \n                                            showThumb\n                                        \n                                \n                                \n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            vertical\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inverted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inverted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showThumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showThumb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertical\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertical:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISliderConfig {\n    step: number;\n    showThumb: boolean;\n    vertical: boolean;\n    inverted: boolean;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableHeader.html":{"url":"interfaces/ITableHeader.html","title":"interface - ITableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collumnKey\n                                        \n                                \n                                \n                                        \n                                            collumnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            widthInPercentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collumnKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collumnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthInPercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widthInPercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableViewOptions.html":{"url":"interfaces/ITableViewOptions.html","title":"interface - ITableViewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableViewOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            searchable\n                                        \n                                \n                                \n                                        \n                                            showActions\n                                        \n                                \n                                \n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                        \n                                            showCSVExport\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDeleteAllButton\n                                        \n                                \n                                \n                                        \n                                            showPaginator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        searchable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showActions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCSVExport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCSVExport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeleteAllButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDeleteAllButton:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidator.html":{"url":"interfaces/IValidator.html","title":"interface - IValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ivalidator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IValidator {\n  required?: boolean;\n  maxLength?: number;\n  minLength?: number;\n  max?: number;\n  min?: number;\n  pattern?: string;\n  email?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogSimpleComponent.html":{"url":"components/InfoDialogSimpleComponent.html","title":"component - InfoDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog-simple\n            \n\n            \n                styleUrls\n                ./info-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                infoMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'info'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-info-dialog-simple',\n  templateUrl: './info-dialog-simple.component.html',\n  styleUrls: ['./info-dialog-simple.component.less']\n})\nexport class InfoDialogSimpleComponent implements OnInit {\n\n  public icon = 'info';\n  public infoMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.infoMsg && Array.isArray(this.data.infoMsg)) {\n      this.infoMsg = this.data.infoMsg;\n    } else {\n      this.infoMsg = [String(this.data.infoMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Information\n\n\n\n\n  \n    \n                   {{infoMsg | translate}}\n    \n  \n\n\n\n\n  OK\n\n\n    \n\n    \n                \n                    ./info-dialog-simple.component.less\n                \n                \n#info-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#info-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.info-dialog_message {\n  font-size: 14px;\n  height: 20px;\n  padding: 0;\n  word-break: break-all;\n}\n\nmat-dialog-content#info-dialog_content {\n  padding-left: 50px !important;\n  padding-right: 50px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Information                         {{infoMsg | translate}}        OK'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuNode.html":{"url":"interfaces/MenuNode.html","title":"interface - MenuNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MenuNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decimalseparator\n                                        \n                                \n                                \n                                        \n                                            fieldSeparator\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            noDownload\n                                        \n                                \n                                \n                                        \n                                            nullToEmptyString\n                                        \n                                \n                                \n                                        \n                                            objHeader\n                                        \n                                \n                                \n                                        \n                                            quoteStrings\n                                        \n                                \n                                \n                                        \n                                            showLabels\n                                        \n                                \n                                \n                                        \n                                            showTitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            useBom\n                                        \n                                \n                                \n                                        \n                                            useHeader\n                                        \n                                \n                                \n                                        \n                                            useObjHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decimalseparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimalseparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldSeparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldSeparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullToEmptyString\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nullToEmptyString:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objHeader:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quoteStrings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quoteStrings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTitle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useBom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useObjHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useObjHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadiobuttonComponent.html":{"url":"components/RadiobuttonComponent.html","title":"component - RadiobuttonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadiobuttonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-radiobutton\n            \n\n            \n                styleUrls\n                ./radiobutton.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radiobutton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  styleUrls: ['./radiobutton.component.scss']\n})\nexport class RadiobuttonComponent extends BaseFieldComponent implements OnInit {\n  @Input() options: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n  {{ getName()+'#label' | translate }}\n    \n    \n      \n        {{item.key}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./radiobutton.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ getName()+\\'#label\\' | translate }}                      {{item.key}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadiobuttonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { TranslationService } from '../../services/translation.service';\n\n\n\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent extends BaseFieldComponent implements OnInit {\n  @Input() options?: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.options = this.fs.getConfigByName(this.name).options? this.fs.getConfigByName(this.name).options : this.options;\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Bitte Wählen...\n      \n        {{item.key | translate}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitte Wählen...              {{item.key | translate}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideToggleComponent.html":{"url":"components/SlideToggleComponent.html","title":"component - SlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slidetoggle\n            \n\n            \n                styleUrls\n                ./slideToggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slideToggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slidetoggle',\n  templateUrl: './slideToggle.component.html',\n  styleUrls: ['./slideToggle.component.scss']\n})\nexport class SlideToggleComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n  @Input() color: string;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n        Slide me!\n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slideToggle.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Slide me!            {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider\n            \n\n            \n                styleUrls\n                ./slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slider.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collumnsToBeDisplayed\n                            \n                            \n                                filterControl\n                            \n                            \n                                initialColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                resultsLength\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                csvExport\n                            \n                            \n                                customFilterBasedOnDisplayColumns\n                            \n                            \n                                getDisplayData\n                            \n                            \n                                getFilteredDisplayData\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteRecord\n                            \n                            \n                                onDeleteSelectedRecords\n                            \n                            \n                                onDownload\n                            \n                            \n                                onEdit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                viewOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                delete\n                            \n                            \n                                deleteBulk\n                            \n                            \n                                download\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ts: TranslatePipe)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         ITableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewOptions\n                    \n                \n                \n                    \n                        Type :         ITableViewOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:59\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteBulk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        csvExport\n                        \n                    \n                \n            \n            \n                \ncsvExport()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFilterBasedOnDisplayColumns\n                        \n                    \n                \n            \n            \n                \ncustomFilterBasedOnDisplayColumns(data: any, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayData\n                        \n                    \n                \n            \n            \n                \ngetDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredDisplayData\n                        \n                    \n                \n            \n            \n                \ngetFilteredDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:79\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:86\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteRecord\n                        \n                    \n                \n            \n            \n                \nonDeleteRecord(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteSelectedRecords\n                        \n                    \n                \n            \n            \n                \nonDeleteSelectedRecords()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDownload\n                        \n                    \n                \n            \n            \n                \nonDownload(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collumnsToBeDisplayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    vertical_align_bottom\n  \n  \n  \n\n\n  \n    \n      \n        {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}\n      \n      \n        {{ element[collumn.collumnName] }}\n      \n    \n  \n\n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n    \n    \n      \n        delete_forever\n      \n      \n        edit\n      \n      \n        get_app\n      \n    \n  \n\n  \n  \n\n\n\n  \n    File Upload\n  \n\n  \n  \n    Löschen\n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                table {\n  width: 100%;\n}\n.row {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-bottom: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              vertical_align_bottom                          {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}                    {{ element[collumn.collumnName] }}                                                                                delete_forever                    edit                    get_app                      File Upload          Löschen  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputComponent.html":{"url":"components/TextInputComponent.html","title":"component - TextInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-input\n            \n\n            \n                styleUrls\n                ./text-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rows\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent extends BaseFieldComponent implements OnInit {\n  @Input() rows = 3;\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.control);\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n      \n        {{ iconBtn }}\n      \n    \n      {{iconBtn}}\n     -->\n    {{ hint }}\n    \n      {{ getErrorMeesage() }}\n    \n  \n  \n    \n      \n  {{ hint }}\n  \n    {{ getErrorMeesage() }}\n  \n\n\n\n    \n\n    \n                \n                    ./text-input.component.scss\n                \n                mat-form-field {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ iconBtn }}                {{iconBtn}}     -->    {{ hint }}          {{ getErrorMeesage() }}                    {{ hint }}      {{ getErrorMeesage() }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TranslatePipe.html":{"url":"pipes/TranslatePipe.html","title":"pipe - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        translate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(key: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: TranslationService) { }\n  transform(key: any): any {\n    // console.log(key);\n    if(key !== 'undefined') {\n// console.log(this.translate.data);\n\n      return this.translate.data[key] || '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _path\n                            \n                            \n                                data\n                            \n                            \n                                lang\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTxtFile\n                            \n                            \n                                getUserData\n                            \n                            \n                                setLang\n                            \n                            \n                                setPath\n                            \n                            \n                                updateData\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTxtFile\n                        \n                    \n                \n            \n            \n                \naddTxtFile(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPath\n                        \n                    \n                \n            \n            \n                \nsetPath(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'de'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onLangChange: EventEmitter = new EventEmitter();\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onDataChange: EventEmitter = new EventEmitter();\n\n  data: any = {};\n  lang = 'de';\n  userData = {};\n\n  private _path = '';\n  constructor(private http: HttpClient) {\n    this.onDataChange.subscribe(val => {\n      this.updateData(val);\n    });\n    this.onLangChange.subscribe(val => {\n      this.lang = val;\n    });\n  }\n\n  setPath(path: string) {\n    this._path = path;\n  }\n\n  addTxtFile(path: string) {\n    return new Promise((resolve, reject) => {\n      const langPath = `${path}${this.lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.updateData(translation);\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          resolve(this.data);\n        }\n      );\n    });\n  }\n\n  getUserData() {\n    let txtFile = {};\n    for(const key in this.userData) {\n      if(this.userData) {\n        Object.assign(txtFile, {\n          [key]: this.data[key]\n        });\n      }\n    }\n    return txtFile;\n  }\n\n  setLang(lang: string) {\n    this.lang = lang;\n    this.use(this.lang);\n    this.onLangChange.emit(this.lang);\n  }\n\n  updateData(data: any) {\n    Object.assign(this.data, data);\n    // this.onDataChange.emit(this.data);\n  }\n\n  use(lang: string): Promise {\n    return new Promise((resolve, reject) => {\n      const langPath = `${this._path}${lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.data = Object.assign({}, translation || {});\n          this.lang = lang;\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiBaseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                headers\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                addUserAndRoles\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                editUserAndRoles\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                searchUsers\n                            \n                            \n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogService: DialogService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserAndRoles\n                        \n                    \n                \n            \n            \n                \naddUserAndRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReplaySubject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserAndRoles\n                        \n                    \n                \n            \n            \n                \neditUserAndRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets current users profile.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the allowed actions of the current user\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:71\n                \n            \n\n\n            \n                \n                    get all users\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(search: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRoles\n                        \n                    \n                \n            \n            \n                \nupdateRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {headers: this.headers}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { DialogService } from './dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8');\n\n  private options: Object = {headers: this.headers};\n\n  private readonly apiBaseUrl: string;\n\n  constructor(private http: HttpClient,\n    private dialogService: DialogService\n  ) {\n    this.apiBaseUrl = '/api';\n  }\n\n  login(credentials: any): Observable {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Charset', 'UTF-8')\n      .set('Authorization', 'Basic ' + btoa(credentials));\n\n    const options: Object = {\n      headers: headers,\n      observe: 'response',\n      withCredentials: true\n    };\n    return this.http.post('/api/login', null, options);\n  }\n\n  logout(): Observable {\n    this.options = {headers: this.headers};\n    return this.http.delete('/api/logout', this.options);\n  }\n\n  /**\n   * Gets current users profile.\n   */\n  getUserProfile(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/profile`, options);\n\n    return this.http.get(`/api/user`, this.options);\n  }\n\n  /**\n   * Get the allowed actions of the current user\n   */\n  getUserRoles(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/role`, options)\n    //   .pipe(\n    //     map(value => value['actions'])\n    //   );\n    return this.http.get('/api/user', this.options);\n  }\n\n  /**\n   * get all users\n   */\n  getUsers(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    return this.http.get('/api/user', this.options);\n  }\n\n  getUser(userId: number): Observable {\n    return this.http.get(`/api/user/${userId}`, this.options);\n  }\n\n  addUser(user: any): Observable {\n    return this.http.post('/api/user/', JSON.stringify(user), this.options);\n  }\n\n  addUserAndRoles(user: any): ReplaySubject {\n    // check if bkuUser already exists\n    const done = new ReplaySubject(1);\n    this.addUser(user).subscribe(addUserRes => {\n      user.id = addUserRes.id;\n      this.updateRoles(user).subscribe(updateRoleResp => done.next(updateRoleResp));\n    }, error => {\n      this.dialogService.showErrorDialog('Error');\n    });\n    return done;\n  }\n\n  editUser(user: any): Observable {\n    return this.http.put(`/api/user/${user.id}`, JSON.stringify(user), this.options);\n  }\n\n  editUserAndRoles(user: any): Observable {\n    return forkJoin(this.editUser(user), this.updateRoles(user));\n  }\n\n  deleteUser(user: any): Observable {\n    return this.http.delete(`/api/user/${user.id}`, this.options);\n  }\n\n  updateRoles(user: any) {\n    const rolesObject = {\n      'roles': user.roles\n    };\n    return this.http.put(`/api/user//${user.id}`, JSON.stringify(rolesObject), this.options);\n  }\n\n  searchUsers(search: string) {\n    return this.http.get(\n      '/api/user?partlastname=' + search,\n      this.options\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            AngularCsv\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            CsvConfigConsts\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            objectAssign\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            toObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            ConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            hasOwnProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            propIsEnumerable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/field.ts\n            \n            component\n            BaseFieldComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.component.ts\n            \n            component\n            FormbuilderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.service.ts\n            \n            injectable\n            FormbuilderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n            \n            interface\n            optionsConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            ICustomValidation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            IDialogConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            ICodeEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IField\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IFormObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IHTMLAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iform.ts\n            \n            interface\n            IForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            class\n            AutoSearch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            interface\n            MenuNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n            \n            interface\n            ISliderConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ivalidator.ts\n            \n            interface\n            IValidator\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            injectable\n            DataConnectorService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            interface\n            searchObj\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            injectable\n            DataFlattnerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            interface\n            IFlatObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            function\n            difference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.pipe.ts\n            \n            pipe\n            TranslatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            function\n            checkKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            variable\n            _filter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n            \n            component\n            DateInputComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n            \n            component\n            ErrorDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n            \n            component\n            InfoDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n            \n            component\n            RadiobuttonComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n            \n            component\n            SlideToggleComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableViewOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n            \n            component\n            TextInputComponent\n            \n                0 %\n                (0/42)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.9\n        \n            @angular/cdk : ~12.2.9\n        \n            @angular/common : ~12.2.9\n        \n            @angular/compiler : ^12.2.9\n        \n            @angular/core : ~12.2.9\n        \n            @angular/forms : ~12.2.9\n        \n            @angular/localize : ^12.2.9\n        \n            @angular/material : ^12.2.9\n        \n            @angular/material-moment-adapter : ^12.2.9\n        \n            @angular/platform-browser : ~12.2.9\n        \n            @angular/platform-browser-dynamic : ~12.2.9\n        \n            @angular/router : ~12.2.9\n        \n            @types/pouchdb : ^6.4.0\n        \n            body-parser : ^1.19.0\n        \n            express : ^4.17.1\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.1\n        \n            util : ^0.12.4\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableType   (projects/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TableType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : FILE\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkKey   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            difference   (projects/.../form.service.ts)\n                        \n                        \n                            objectAssign   (projects/.../angular-csv.ts)\n                        \n                        \n                            toObject   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkKey\n                        \n                    \n                \n            \n            \n                \ncheckKey(ts: TranslationService, item: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ts\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/services/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        difference\n                        \n                    \n                \n            \n            \n                \ndifference(newObj: any, origObj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    origObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        objectAssign\n                        \n                    \n                \n            \n            \n                \nobjectAssign(target: any, ...source: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Assign data  to new Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toObject\n                        \n                    \n                \n            \n            \n                \ntoObject(val: any)\n                \n            \n\n\n\n\n            \n                \n                    Convet to Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularFormbuilder\nThis project was generated with Angular CLI version 12.\nRequirements:\nNodejs Version 14\nangular CLI Version 12\nSet Up\nTo start the Application run:\nnpm install\nRun\nnpm start\nto serve the main Application\nRun \nnpm startFB\nto start the Formbuilder UI\nNOTE:\nFor the Formbuilder UI to work you need to start the express server with:\nDEBUG=express:* node ./projects/server/app.js\nOptional:\nYou can run and build all projects with their names after the ng command: ng serve formbuilderui (formbuilder | formbuilderui| formbuilderapp)\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nTo start the generating server run DEBUG=express:* node ./server/app.js\nIncluded in this Repo are:\nProject: FormbuilderApp, FormbuilderUi\nLibraries: Angular Formbuilder\nCode scaffolding\nRun ng generate component component-name in 'src/app/' to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FormbuilderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/optionsConfig.html":{"url":"interfaces/optionsConfig.html","title":"interface - optionsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  optionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entriesPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadAfterPercentscrolled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchAfterNthCharacter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showAsObject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entriesPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entriesPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupBy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadAfterPercentscrolled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadAfterPercentscrolled:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAfterNthCharacter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchAfterNthCharacter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAsObject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAsObject:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface optionsConfig {\n    showAsObject?: {\n        KeyToSave: string | null\n    };\n    groupBy?: boolean;\n    apiEndpoint?: URL;\n    entriesPerPage?: number;\n    searchAfterNthCharacter?: number;\n    loadAfterPercentscrolled?: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/searchObj.html":{"url":"interfaces/searchObj.html","title":"interface - searchObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  searchObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _filter   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            ConfigDefaults   (projects/.../angular-csv.ts)\n                        \n                        \n                            hasOwnProperty   (projects/.../angular-csv.ts)\n                        \n                        \n                            propIsEnumerable   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (opt: any[], value: string, ts:TranslationService): string[] => {\n  const filterValue = value.toLowerCase();\n  console.log(opt);\n\n  if (typeof opt[0] === 'string') {\n    return opt.filter(item => checkKey(ts, item, filterValue));\n  } else {\n    return opt.filter(\n      item => checkKey(ts, item.name, filterValue)\n    );\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOwnProperty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.hasOwnProperty\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propIsEnumerable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.propertyIsEnumerable\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
