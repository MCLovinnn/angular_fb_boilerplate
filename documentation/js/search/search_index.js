var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AngularCsv.html",[0,0.274,1,1.865]],["body/classes/AngularCsv.html",[0,0.28,1,1.904,2,1.68,3,0.119,4,0.165,5,0.089,6,4.019,7,1.429,8,0.221,9,0.36,10,1.511,11,3.43,12,3.501,13,1.731,14,2.565,15,4.511,16,3.43,17,0.721,18,3.708,19,3.839,20,3.839,21,3.839,22,3.839,23,3.839,24,3.839,25,4.132,26,3.708,27,0.447,28,2.827,29,0.515,30,1.811,31,1.049,32,3.708,33,0.923,34,0.021,35,0.506,36,0.308,37,0.403,38,3.43,39,1.851,40,2.428,41,0.526,42,0.312,43,2.428,44,2.428,45,2.357,46,2.428,47,2.827,48,2.428,49,2.827,50,2.183,51,1.193,52,2.428,53,2.566,54,2.183,55,2.428,56,4.243,57,2.964,58,1.43,59,2.428,60,2.827,61,2.183,62,4.359,63,2.428,64,2.428,65,1.304,66,2.428,67,2.463,68,2.827,69,2.428,70,2.566,71,2.566,72,1.21,73,0.247,74,0.2,75,2.034,76,2.034,77,2.034,78,2.034,79,1.067,80,2.034,81,2.034,82,2.034,83,2.566,84,2.034,85,2.566,86,2.566,87,2.566,88,1.543,89,1.851,90,1.851,91,1.851,92,1.851,93,1.851,94,1.851,95,1.851,96,1.851,97,1.585,98,1.851,99,1.851,100,1.851,101,1.851,102,1.851,103,1.851,104,0.721,105,1.851,106,1.851,107,1.851,108,1.851,109,1.851,110,1.851,111,1.648,112,2.357,113,1.68,114,1.68,115,1.68,116,1.68,117,1.68,118,1.68,119,1.68,120,1.68,121,1.68,122,1.68,123,1.68,124,1.68,125,1.68,126,1.68,127,1.153,128,1.103,129,2.169,130,1.851,131,2.827,132,1.543,133,2.827,134,1.851,135,2.081,136,1.464,137,1.851,138,1.851,139,3.7,140,1.851,141,4.791,142,1.851,143,1.851,144,1.851,145,1.851,146,1.851,147,2.827,148,1.947,149,1.851,150,1.851,151,1.851,152,1.851,153,1.851,154,1.851,155,1.851,156,0.974,157,1.851,158,1.851,159,1.851,160,2.827,161,2.827,162,2.827,163,1.851,164,1.851,165,1.851,166,1.68,167,1.851,168,1.851,169,1.851,170,1.851,171,1.851,172,1.851,173,1.851,174,1.851,175,1.851,176,1.851,177,1.851,178,1.851,179,1.851,180,1.851,181,4.68,182,1.851,183,1.851,184,4.135,185,3.839,186,3.839,187,2.827,188,1.851,189,2.034,190,2.034,191,2.034,192,2.183,193,1.851,194,1.851,195,2.827,196,1.851,197,1.851,198,3.43,199,1.851,200,2.827,201,1.851,202,1.851,203,1.851,204,3.43,205,1.851,206,1.851,207,1.851,208,1.851,209,1.543,210,1.68,211,1.543,212,1.68,213,1.68,214,1.851,215,1.904,216,1.68,217,2.183,218,1.503,219,1.904,220,1.851,221,1.851,222,1.68,223,1.851,224,1.851,225,1.68,226,1.543,227,1.68,228,1.851,229,1.851,230,2.827,231,0.01,232,0.01]],["title/injectables/AuthenticationService.html",[233,0.919,234,2.77]],["body/injectables/AuthenticationService.html",[0,0.206,3,0.134,4,0.1,5,0.1,8,0.134,9,0.393,10,1.611,13,1.437,14,0.993,17,0.788,27,0.503,29,0.541,31,1.095,33,1.227,34,0.021,35,0.696,36,0.324,37,0.536,41,1.045,42,0.734,51,1.303,58,1.611,65,1.371,73,0.134,79,1.13,97,1.73,104,1.236,111,2.125,136,1.468,148,1.581,218,1.641,231,0.011,232,0.011,233,1.025,234,3.088,235,1.24,236,2.339,237,4.829,238,4.137,239,4.829,240,4.137,241,5.342,242,4.137,243,5.342,244,5.342,245,4.137,246,3.47,247,5.977,248,5.342,249,5.342,250,4.051,251,3.47,252,4.829,253,2.73,254,5.977,255,4.281,256,4.829,257,3.696,258,4.051,259,2.73,260,4.051,261,4.051,262,5.706,263,3.47,264,4.051,265,4.051,266,4.051,267,4.051,268,4.051,269,4.051,270,4.051,271,4.051,272,3.47,273,2.73,274,3.395,275,2.73,276,4.051,277,4.051,278,4.051,279,4.051,280,4.051,281,4.051,282,2.73,283,4.051,284,5.342,285,5.342,286,2.73,287,2.73,288,4.137,289,4.051,290,2.73,291,2.73,292,2.73,293,2.73,294,4.051,295,2.73,296,2.73,297,4.051,298,2.843,299,2.73,300,1.889,301,2.73,302,2.73,303,2.73,304,2.73,305,2.73,306,0.72,307,0.329,308,2.339,309,2.73,310,1.498,311,4.829,312,1.889,313,2.73,314,2.73,315,1.17,316,1.17,317,2.081,318,1.17,319,1.402,320,2.73,321,2.73,322,5.342,323,4.051,324,5.342,325,2.73,326,4.051,327,4.051,328,2.73,329,4.829,330,4.829,331,4.137,332,2.339,333,2.73,334,2.73,335,2.73,336,2.73,337,2.73,338,2.73,339,4.051,340,2.73,341,2.73,342,4.829,343,4.829,344,4.051,345,2.73,346,2.73,347,4.051,348,3.47,349,2.73,350,2.73,351,2.73,352,2.73,353,2.73,354,2.73,355,2.73,356,4.829,357,2.73,358,2.73,359,5.706,360,2.73,361,2.73,362,2.73,363,2.339,364,2.73,365,4.051,366,4.051,367,4.051,368,2.73,369,2.73,370,2.73,371,2.73,372,5.342,373,4.829,374,2.73,375,4.051,376,2.73,377,2.73,378,3.088,379,2.73,380,2.73,381,2.73,382,2.73,383,2.73,384,2.73,385,2.73,386,2.73,387,2.73,388,2.73,389,3.069,390,2.73,391,2.73,392,2.73,393,2.73,394,4.051,395,1.889,396,2.73,397,2.73,398,2.73,399,2.73,400,2.73]],["title/classes/AutoSearch.html",[0,0.274,401,2.309]],["body/classes/AutoSearch.html",[0,0.417,2,3.825,3,0.271,4,0.203,5,0.203,8,0.271,9,0.629,29,0.546,31,1.005,34,0.02,35,0.798,36,0.318,37,0.582,73,0.318,74,0.456,231,0.017,232,0.017,401,4.512,402,4.215,403,3.895,404,5.529,405,5.529,406,4.487]],["title/components/BaseFieldComponent.html",[407,0.498,408,1.073]],["body/components/BaseFieldComponent.html",[0,0.163,3,0.166,4,0.079,5,0.124,8,0.106,9,0.328,10,1.004,13,1.546,17,0.658,27,0.623,29,0.503,31,1.141,33,0.857,34,0.021,35,0.682,36,0.354,37,0.374,41,1.392,42,0.867,51,1.23,58,1.235,65,0.519,72,1.699,73,0.106,79,0.727,97,1.369,104,0.658,111,1.108,127,0.671,135,2.502,136,1.233,156,1.024,217,1.27,218,2.209,231,0.009,232,0.009,306,0.686,307,0.26,318,1.451,407,0.573,408,1.609,409,1.167,410,0.785,411,0.744,412,1.849,413,1.052,414,1.886,415,1.367,416,0.744,417,2.223,418,2.093,419,1.518,420,1.971,421,1.231,422,2.28,423,2.477,424,2.014,425,1.897,426,2.014,427,1.971,428,2.28,429,2.28,430,1.632,431,2.28,432,2.28,433,2.28,434,2.28,435,1.548,436,1.632,437,2.28,438,1.537,439,1.602,440,1.367,441,2.014,442,1.44,443,1.367,444,1.79,445,1.602,446,1.814,447,1.602,448,1.602,449,1.602,450,2.014,451,2.333,452,2.333,453,2.333,454,2.333,455,1.602,456,2.333,457,1.602,458,1.602,459,1.041,460,1.868,461,2.333,462,1.772,463,3.385,464,2.158,465,1.886,466,2.158,467,1.602,468,2.158,469,1.298,470,2.158,471,2.158,472,1.897,473,2.158,474,2.158,475,2.158,476,1.44,477,2.158,478,1.367,479,2.158,480,2.158,481,2.158,482,1.346,483,2.158,484,2.158,485,2.158,486,2.158,487,1.537,488,2.158,489,2.158,490,2.158,491,2.158,492,1.548,493,2.158,494,2.158,495,2.158,496,2.158,497,2.158,498,1.632,499,2.158,500,2.158,501,2.158,502,2.158,503,2.158,504,2.158,505,1.632,506,2.158,507,2.158,508,2.158,509,2.158,510,2.158,511,1.632,512,2.28,513,2.28,514,1.632,515,1.632,516,1.632,517,1.632,518,1.537,519,1.632,520,1.632,521,1.632,522,1.632,523,1.632,524,2.158,525,2.158,526,1.493,527,2.158,528,1.184,529,2.158,530,0.605,531,1.041,532,0.98,533,4.176,534,0.999,535,2.158,536,2.158,537,2.158,538,2.158,539,2.158,540,2.158,541,2.158,542,2.158,543,2.158,544,2.158,545,2.158,546,4.729,547,3.385,548,2.158,549,2.158,550,2.158,551,2.158,552,1.849,553,2.158,554,1.849,555,2.158,556,2.158,557,3.385,558,2.158,559,4.176,560,2.158,561,2.158,562,4.176,563,2.158,564,2.158,565,4.176,566,4.176,567,5.137,568,4.176,569,5.45,570,5.45,571,3.385,572,2.158,573,2.158,574,5.137,575,2.158,576,5.137,577,2.158,578,5.137,579,2.158,580,5.137,581,2.158,582,2.158,583,3.385,584,3.385,585,4.176,586,3.385,587,2.158,588,3.385,589,2.158,590,2.158,591,2.158,592,2.158,593,2.158,594,1.645,595,3.385,596,2.158,597,2.158,598,2.158,599,2.158,600,2.158,601,3.385,602,2.158,603,3.385,604,2.158,605,2.158,606,2.158,607,2.158,608,2.158,609,0.785,610,1.167,611,1.231,612,0.785,613,1.719,614,0.785,615,0.671,616,0.785,617,0.785,618,0.637,619,0.785,620,0.605,621,0.744,622,0.785,623,0.637,624,0.785,625,1.231,626,0.605,627,0.857,628,1.231,629,0.637,630,0.637,631,0.785,632,0.785,633,0.605,634,0.637,635,0.785,636,0.637,637,0.785,638,0.637,639,0.785,640,0.637,641,0.785,642,0.575,643,0.785,644,0.637,645,0.785,646,0.785]],["title/components/CheckboxComponent.html",[407,0.498,618,1.073]],["body/components/CheckboxComponent.html",[0,0.201,3,0.195,4,0.098,5,0.146,8,0.131,9,0.386,10,0.957,13,1.579,17,0.774,27,0.491,29,0.515,31,1.161,33,0.978,34,0.021,35,0.69,36,0.363,37,0.427,41,1.477,42,0.894,51,1.296,58,1.269,65,0.641,72,1.145,73,0.131,79,0.693,97,0.711,104,0.519,127,0.829,135,2.356,156,0.862,231,0.011,232,0.011,306,0.681,307,0.321,318,1.144,407,0.653,408,2.218,409,1.373,410,0.97,411,0.92,413,1.238,414,1.481,415,1.559,416,0.92,417,2.304,418,2.174,419,0.97,420,1.528,421,0.97,422,2.547,423,2.858,424,1.92,425,1.808,426,1.92,427,2.274,428,2.297,429,2.297,430,1.92,431,2.961,432,2.297,433,2.297,434,2.297,435,1.729,436,1.92,437,2.297,438,1.808,439,1.528,440,1.303,441,1.92,442,1.373,443,1.303,444,1.707,445,1.528,446,1.528,447,1.528,448,1.528,449,1.528,450,1.92,451,2.163,452,2.163,453,2.163,454,2.163,455,1.528,456,2.163,457,1.528,458,1.528,459,1.287,460,2.055,461,2.566,462,1.949,465,1.642,467,1.024,469,0.829,472,1.212,476,0.92,478,1.303,482,1.205,487,1.212,492,0.873,498,1.287,505,1.287,511,1.287,512,1.92,513,1.92,514,1.287,515,1.287,516,1.287,517,1.287,518,1.212,519,1.287,520,1.287,521,1.287,522,1.287,523,1.287,530,0.748,531,1.287,532,1.212,534,0.788,594,4.026,609,0.97,610,1.373,611,1.448,612,0.97,613,1.92,614,0.97,615,0.829,616,0.97,617,0.97,618,1.559,619,0.97,620,0.748,621,0.92,622,0.97,623,0.788,624,0.97,625,1.448,626,0.748,627,1.008,628,1.448,629,0.788,630,0.788,631,0.97,632,0.97,633,0.748,634,0.788,635,0.97,636,0.788,637,0.97,638,0.788,639,0.97,640,0.788,641,0.97,642,0.711,643,0.97,644,0.788,645,0.97,646,0.97,647,1.024,648,1.406,649,2.286,650,2.044,651,3.982,652,1.448,653,4.763,654,1.448,655,3.982,656,4.763,657,3.982,658,3.982,659,3.836,660,1.37,661,1.37,662,1.37,663,1.37,664,1.37,665,1.37,666,1.37,667,1.37,668,1.37,669,1.37,670,1.37,671,1.37,672,1.37,673,1.37,674,1.37,675,1.37,676,1.37,677,1.37,678,1.37,679,1.37,680,1.37,681,1.37,682,1.696,683,1.37,684,1.37,685,1.37,686,1.37,687,1.37,688,1.37,689,1.37,690,1.37,691,1.37,692,1.37,693,2.286,694,1.571,695,1.464,696,1.37,697,1.37,698,1.37,699,1.287,700,1.37,701,1.37,702,1.37,703,2.399,704,3.982]],["title/injectables/ConfigService.html",[233,0.919,705,2.513]],["body/injectables/ConfigService.html",[0,0.249,3,0.162,4,0.121,5,0.197,8,0.162,9,0.451,14,2.383,17,0.903,27,0.607,29,0.406,31,1.099,33,1.309,34,0.021,35,0.775,36,0.342,37,0.572,41,1.006,42,0.897,51,1.274,58,0.793,61,1.943,65,1.478,73,0.162,111,2.351,127,1.444,129,1.591,136,1.381,156,1.164,218,1.337,231,0.012,232,0.012,233,1.176,235,1.499,251,3.98,300,3.214,306,0.806,307,0.397,310,1.81,312,2.283,315,1.414,316,1.414,319,1.694,401,4.165,403,1.81,411,2.012,414,1.983,420,2.447,444,2.636,482,1.226,487,2.11,526,2.283,705,3.214,706,2.827,707,5.376,708,5.376,709,5.376,710,5.376,711,4.645,712,4.645,713,4.645,714,4.645,715,5.376,716,4.645,717,5.376,718,2.283,719,3.708,720,3.3,721,2.952,722,4.645,723,5.835,724,3.3,725,3.98,726,3.214,727,5.835,728,4.645,729,3.214,730,4.645,731,3.3,732,3.3,733,3.3,734,4.645,735,3.3,736,3.3,737,3.3,738,4.645,739,3.3,740,3.3,741,3.3,742,4.606,743,3.3,744,3.3,745,3.3,746,3.3,747,3.3,748,1.943,749,2.827,750,3.3,751,1.943,752,3.3,753,2.827,754,2.283,755,5.376,756,3.3,757,3.3,758,3.3,759,5.835,760,4.645,761,3.3,762,4.645,763,4.645,764,3.3,765,3.076,766,3.3,767,3.3,768,3.3,769,3.3,770,3.214,771,3.3,772,3.3,773,3.3,774,3.3,775,3.3,776,3.3,777,3.3,778,2.827,779,3.3,780,5.835,781,4.645,782,4.645,783,4.645,784,4.645,785,4.645,786,3.3,787,4.645,788,4.645,789,4.645,790,4.645,791,3.3,792,3.3]],["title/components/ConfirmDialogComponent.html",[407,0.498,620,1.019]],["body/components/ConfirmDialogComponent.html",[0,0.277,3,0.245,4,0.135,5,0.183,8,0.18,9,0.485,10,0.882,13,1.722,14,2.22,17,0.972,27,0.92,29,0.482,31,1.022,33,0.753,34,0.02,35,0.639,36,0.313,37,0.329,41,1.082,42,0.643,51,0.713,58,0.882,72,0.882,73,0.18,104,0.713,128,1.666,136,0.794,148,1.636,231,0.013,232,0.013,306,0.602,307,0.442,407,0.78,408,1.083,409,1.724,410,1.334,411,1.265,413,1.554,415,1.861,416,1.265,417,2.406,418,2.276,419,1.334,421,1.334,435,1.999,478,1.201,534,1.083,609,1.334,610,1.724,611,1.818,612,1.334,613,2.22,614,1.334,615,1.14,616,1.334,617,1.334,618,1.083,619,1.334,620,1.713,621,2.451,622,1.334,623,1.083,624,1.334,625,1.818,626,1.029,627,1.617,628,1.818,629,1.083,630,1.083,631,1.334,632,1.334,633,1.029,634,1.083,635,1.334,636,1.083,637,1.334,638,1.083,639,1.334,640,1.083,641,1.334,642,0.978,643,1.334,644,1.083,645,1.334,646,1.334,647,1.408,648,1.992,652,1.818,654,1.818,703,2.27,793,4.667,794,4.667,795,3.143,796,5.686,797,4.999,798,4.335,799,3.616,800,4.42,801,2.797,802,3.934,803,4.224,804,4.999,805,3.669,806,2.538,807,3.811,808,3.669,809,3.669,810,4.999,811,3.669,812,2.797,813,2.797,814,1.884,815,2.797,816,3.811,817,2.797,818,4.999,819,4.999,820,4.872,821,5.686,822,5.686,823,3.669,824,4.999,825,4.999,826,3.811,827,2.538,828,3.459,829,2.797,830,2.332,831,2.538,832,2.797,833,2.797,834,2.797,835,4.335,836,2.797,837,4.655,838,2.797,839,3.459,840,2.797,841,2.797,842,2.797,843,2.797,844,2.943,845,3.669,846,2.797,847,2.538,848,3.459,849,3.459,850,2.797]],["title/classes/CsvConfigConsts.html",[0,0.274,88,2.309]],["body/classes/CsvConfigConsts.html",[0,0.277,1,1.23,2,1.657,3,0.117,4,0.164,5,0.088,6,4.072,7,1.41,8,0.219,9,0.356,10,1.072,11,1.826,12,2.943,13,1.683,14,2.497,15,4.095,16,1.826,19,1.826,20,1.826,21,1.826,22,1.826,23,1.826,24,1.826,25,4.412,28,1.826,29,0.518,30,1.592,31,1.064,34,0.021,36,0.313,38,2.797,41,1.486,42,0.884,45,1.522,47,1.826,49,1.826,53,1.657,54,1.41,56,3.459,57,2.16,58,1.072,60,1.826,61,1.41,62,3.811,65,1.296,67,2.271,68,1.826,70,1.657,71,1.657,72,1.072,73,0.245,74,0.198,75,2.013,76,2.013,77,2.013,78,2.013,79,1.063,80,2.013,81,2.013,82,2.013,83,2.539,84,2.013,85,2.539,86,2.539,87,2.539,88,2.332,89,3.401,90,2.797,91,3.401,92,2.797,93,3.401,94,3.401,95,3.401,96,3.401,97,1.779,98,3.401,99,2.797,100,3.401,101,2.797,102,3.401,103,3.401,104,0.867,105,3.401,106,3.401,107,3.401,108,3.401,109,3.401,110,3.401,111,1.637,112,2.332,113,1.657,114,1.657,115,1.657,116,1.657,117,1.657,118,1.657,119,1.657,120,1.657,121,1.657,122,1.657,123,1.657,124,1.657,125,1.657,126,1.657,127,1.141,128,1.088,129,2.151,130,1.826,131,2.797,132,1.522,133,2.797,134,1.826,135,2.068,136,1.46,137,1.826,138,1.826,139,3.685,140,1.826,141,4.773,142,1.826,143,1.826,144,1.826,145,1.826,146,1.826,147,2.797,148,1.938,149,1.826,150,1.826,151,1.826,152,1.826,153,1.826,154,1.826,155,1.826,156,0.966,157,1.826,158,1.826,159,1.826,160,2.797,161,2.797,162,2.797,163,1.826,164,1.826,165,1.826,166,1.657,167,1.826,168,1.826,169,1.826,170,1.826,171,1.826,172,1.826,173,1.826,174,1.826,175,1.826,176,1.826,177,1.826,178,1.826,179,1.826,180,1.826,181,4.667,182,1.826,183,1.826,184,4.109,185,3.811,186,3.811,187,2.797,188,1.826,189,2.013,190,2.013,191,2.013,192,2.16,193,1.826,194,1.826,195,2.797,196,1.826,197,1.826,198,3.401,199,1.826,200,2.797,201,1.826,202,1.826,203,1.826,204,3.401,205,1.826,206,1.826,207,1.826,208,1.826,209,1.522,210,1.657,211,1.522,212,1.657,213,1.657,214,1.826,215,1.884,216,1.657,217,2.16,218,1.487,219,1.884,220,1.826,221,1.826,222,1.657,223,1.826,224,1.826,225,1.657,226,1.522,227,1.657,228,1.826,229,1.826,230,2.797,231,0.01,232,0.01,851,2.395,852,2.395,853,2.395,854,2.395,855,2.395,856,2.395,857,2.395,858,2.395,859,2.395,860,2.395,861,2.395,862,2.395,863,2.395,864,2.395,865,2.395,866,2.395]],["title/injectables/DataConnectorService.html",[233,0.919,867,2.513]],["body/injectables/DataConnectorService.html",[0,0.26,3,0.169,4,0.126,5,0.126,8,0.169,9,0.464,17,0.93,27,0.634,29,0.57,30,1.413,31,1.078,33,1.388,34,0.021,35,0.76,36,0.348,37,0.606,41,1.036,42,0.765,51,1.315,56,3.31,57,3.237,67,2.836,72,0.827,73,0.235,74,0.284,104,0.669,136,1.546,148,1.946,156,0.745,231,0.013,232,0.013,233,1.211,235,1.563,274,3.777,306,0.716,307,0.415,310,1.888,312,2.382,315,1.475,316,1.475,317,5.478,319,1.767,378,3.647,420,1.836,478,1.127,534,1.016,718,2.382,719,3.777,721,3.041,751,2.026,830,3.777,867,3.31,868,4.136,869,2.624,870,3.495,871,4.785,872,4.785,873,5.092,874,4.785,875,4.785,876,4.785,877,4.099,878,6.157,879,3.442,880,5.681,881,4.099,882,3.442,883,4.099,884,3.442,885,4.099,886,5.351,887,5.351,888,3.442,889,4.099,890,3.442,891,3.442,892,4.099,893,3.442,894,4.099,895,3.442,896,4.531,897,4.192,898,2.949,899,4.099,900,3.31,901,2.949,902,2.949,903,2.624,904,4.531,905,2.949,906,2.949,907,4.099,908,2.949,909,2.949,910,2.949,911,2.949,912,4.711,913,2.949,914,2.949,915,2.949,916,2.949,917,2.949,918,2.949,919,2.624,920,2.949,921,2.624,922,2.949]],["title/injectables/DataFlattnerService.html",[233,0.919,748,2.139]],["body/injectables/DataFlattnerService.html",[0,0.277,3,0.18,4,0.135,5,0.135,8,0.18,13,1.366,17,0.971,25,4.183,27,1.046,29,0.377,31,0.99,33,1.253,34,0.021,35,0.686,36,0.354,37,0.547,39,3.808,42,0.472,45,3.175,51,1.187,61,3.346,65,1.692,73,0.245,74,0.302,79,0.638,97,0.977,104,0.713,111,2.345,129,2.943,136,1.427,139,2.158,148,1.2,215,2.565,218,2.303,219,2.565,226,3.175,231,0.013,232,0.013,233,1.264,235,1.664,300,4.222,306,0.441,307,0.441,315,1.571,316,1.571,482,1.14,748,2.941,765,2.741,868,3.88,923,2.794,924,5.229,925,5.646,926,4.996,927,5.229,928,3.665,929,4.28,930,5.881,931,3.665,932,4.28,933,3.665,934,4.28,935,4.28,936,3.665,937,3.932,938,3.665,939,3.665,940,3.14,941,3.14,942,3.14,943,4.869,944,4.28,945,3.14,946,3.14,947,4.28,948,2.158,949,3.14,950,4.869,951,5.229,952,3.14,953,3.14,954,4.28,955,3.14,956,3.14,957,3.14,958,3.14,959,5.472,960,3.14,961,3.14,962,3.14,963,3.14,964,3.14,965,3.14,966,3.14,967,4.28,968,4.28,969,4.653,970,4.28,971,4.28,972,2.941,973,3.14,974,4.869,975,5.472,976,3.14,977,3.14,978,3.14]],["title/injectables/DataStoreService.html",[233,0.919,257,2.513]],["body/injectables/DataStoreService.html",[0,0.323,3,0.21,4,0.157,5,0.157,8,0.21,9,0.538,10,1.726,13,1.802,17,1.078,27,1.131,31,1.123,33,1.261,34,0.02,35,0.691,36,0.338,37,0.551,41,1.33,42,0.866,51,1.34,58,1.617,65,1.477,73,0.21,79,1.069,136,1.33,156,1.491,231,0.015,232,0.015,233,1.403,235,1.947,238,5.264,240,5.264,257,3.835,306,0.668,307,0.516,310,2.352,315,1.838,316,1.838,331,3.673,348,3.673,742,5.763,868,4.293,979,3.673,980,6.144,981,6.496,982,6.496,983,6.496,984,5.544,985,5.544,986,5.544,987,5.544,988,4.287,989,6.152,990,4.287,991,4.287,992,5.544,993,4.287,994,5.544,995,4.287,996,5.544,997,4.287,998,4.287,999,5.565,1000,4.287,1001,5.544,1002,4.287,1003,4.287,1004,4.287,1005,4.287,1006,4.287]],["title/components/DateInputComponent.html",[407,0.498,623,1.073]],["body/components/DateInputComponent.html",[0,0.194,3,0.19,4,0.094,5,0.142,8,0.126,9,0.376,10,1.12,13,1.564,17,0.753,27,0.473,29,0.505,31,1.16,33,1.064,34,0.02,35,0.702,36,0.361,37,0.465,41,1.45,42,0.88,51,1.33,58,1.458,65,0.618,72,1.12,73,0.126,79,0.674,97,0.685,104,0.753,127,0.799,135,2.327,156,0.838,231,0.01,232,0.01,306,0.73,307,0.31,318,1.102,407,0.639,408,2.212,409,1.335,410,0.935,411,0.887,413,1.204,414,1.448,415,1.525,416,0.887,417,2.291,418,2.161,419,0.935,420,1.485,421,0.935,422,2.5,423,2.818,424,1.867,425,1.758,426,1.867,427,2.242,428,2.682,429,2.246,430,1.867,431,2.246,432,2.246,433,2.246,434,2.246,435,1.697,436,1.867,437,2.246,438,1.758,439,1.485,440,1.267,441,1.867,442,1.335,443,1.267,444,1.66,445,1.989,446,1.485,447,1.485,448,1.485,449,1.485,450,1.867,451,2.115,452,2.115,453,2.115,454,2.115,455,1.485,456,2.115,457,1.485,458,1.485,459,1.24,460,2.022,461,2.526,462,1.918,465,1.611,467,2.134,469,0.799,472,1.167,476,0.887,478,1.267,482,1.183,487,1.167,492,0.841,498,1.24,505,1.24,511,1.24,512,1.867,513,1.867,514,1.24,515,1.24,516,1.24,517,1.24,518,1.167,519,1.24,520,1.24,521,1.24,522,1.24,523,1.24,530,0.721,531,1.24,532,1.167,534,0.759,609,0.935,610,1.335,611,1.408,612,0.935,613,1.885,614,0.935,615,0.799,616,0.935,617,0.935,618,0.759,619,0.935,620,0.721,621,0.887,622,0.935,623,1.531,624,2.322,625,1.408,626,0.721,627,0.98,628,1.408,629,0.759,630,0.759,631,0.935,632,0.935,633,0.721,634,0.759,635,0.935,636,0.759,637,0.935,638,0.759,639,0.935,640,0.759,641,0.935,642,0.685,643,0.935,644,0.759,645,0.935,646,0.935,647,0.986,648,1.642,650,1.988,652,1.408,654,1.408,659,3.825,660,1.32,661,1.32,662,1.32,663,1.32,664,1.32,665,1.32,666,1.32,667,1.32,668,1.32,669,1.32,670,1.32,671,1.32,672,1.32,673,1.32,674,1.32,675,1.32,676,1.32,677,1.32,678,1.32,679,1.32,680,1.32,681,1.988,683,1.32,684,1.32,685,1.32,686,1.32,687,1.32,688,1.32,689,1.32,690,1.32,691,1.32,692,1.32,695,1.41,696,1.32,697,1.32,698,1.32,699,1.24,700,1.32,701,1.32,702,1.32,1007,4.239,1008,4.239,1009,1.778,1010,3.551,1011,2.952,1012,3.872,1013,5.184,1014,5.184,1015,5.196,1016,2.57,1017,3.872,1018,2.57,1019,2.57,1020,2.57,1021,1.634,1022,2.202,1023,2.202,1024,2.279,1025,2.57,1026,2.57,1027,2.57,1028,2.57,1029,2.57,1030,1.778,1031,1.513,1032,3.872,1033,2.57,1034,3.872,1035,2.57]],["title/injectables/DialogService.html",[233,0.919,1036,2.513]],["body/injectables/DialogService.html",[0,0.262,3,0.17,4,0.127,5,0.127,8,0.17,13,1.762,14,2.168,17,0.935,27,0.639,29,0.489,31,1.03,33,1.364,34,0.021,35,0.747,36,0.326,37,0.596,39,4.775,51,1.26,58,1.558,73,0.17,104,0.675,111,2.28,135,2.119,136,1.195,215,3.859,231,0.013,232,0.013,233,1.218,235,1.576,306,0.754,307,0.418,315,1.487,316,1.487,319,1.781,610,1.659,620,0.973,621,1.659,626,0.973,627,1.64,633,0.973,793,2.4,794,2.4,798,4.21,800,2.4,802,4.759,803,4.598,814,1.781,972,3.251,1036,3.328,1037,2.972,1038,4.811,1039,4.811,1040,4.811,1041,4.811,1042,4.811,1043,2.972,1044,4.126,1045,3.47,1046,4.811,1047,6.646,1048,7.27,1049,3.47,1050,6.264,1051,4.811,1052,4.811,1053,3.47,1054,4.811,1055,7.036,1056,3.47,1057,4.811,1058,4.811,1059,3.47,1060,4.811,1061,3.47,1062,4.731,1063,4.811,1064,3.47,1065,3.029,1066,2.972,1067,2.4,1068,2.4,1069,4.121,1070,2.4,1071,2.4,1072,6.775,1073,3.47,1074,5.522,1075,6.481,1076,5.522,1077,3.47,1078,3.47,1079,3.47,1080,3.47,1081,4.811,1082,2.4,1083,3.47]],["title/components/ErrorDialogSimpleComponent.html",[407,0.498,626,1.019]],["body/components/ErrorDialogSimpleComponent.html",[0,0.272,3,0.242,4,0.132,5,0.181,8,0.177,9,0.479,10,0.866,13,1.667,14,2.203,17,0.96,27,0.908,29,0.425,31,0.984,33,0.739,34,0.02,35,0.633,36,0.297,37,0.323,41,1.068,42,0.635,51,0.7,58,0.866,72,0.866,73,0.177,104,0.7,128,1.635,136,0.78,148,1.616,231,0.013,232,0.013,306,0.594,307,0.434,407,0.773,408,1.063,409,1.702,410,1.309,411,1.242,413,1.534,415,1.844,416,1.242,417,2.401,418,2.271,419,1.309,421,1.309,435,1.983,478,1.179,534,2.109,609,1.309,610,1.702,611,1.795,612,1.309,613,2.203,614,1.309,615,1.119,616,1.309,617,1.309,618,1.063,619,1.309,620,1.01,621,1.242,622,1.309,623,1.063,624,1.309,625,1.795,626,1.699,627,1.884,628,1.795,629,1.063,630,1.063,631,1.309,632,1.309,633,1.01,634,1.063,635,1.309,636,1.063,637,1.309,638,1.063,639,1.309,640,1.063,641,1.309,642,0.96,643,1.309,644,1.063,645,1.309,646,1.309,647,1.382,648,1.936,652,1.795,654,1.795,703,2.242,729,2.491,798,4.839,799,3.596,801,2.745,802,3.896,803,4.192,806,2.491,807,3.763,812,2.745,813,2.745,814,1.849,815,2.745,816,3.763,817,2.745,820,4.229,826,3.763,827,2.491,828,3.415,829,2.745,830,2.289,831,2.491,832,2.745,833,2.745,834,2.745,835,4.293,836,2.745,837,4.619,838,2.745,839,3.415,840,2.745,841,2.745,842,2.745,843,2.745,844,3.315,846,2.745,847,2.491,848,3.415,849,3.415,850,2.745,1067,4.535,1068,4.535,1084,2.745,1085,4.229,1086,4.825,1087,4.229,1088,4.229,1089,3.085,1090,3.085,1091,3.085,1092,4.936,1093,3.601,1094,4.936,1095,3.601,1096,4.936,1097,4.936,1098,4.936,1099,6.059,1100,6.059,1101,4.936,1102,4.229,1103,3.601,1104,3.085,1105,4.229,1106,3.601]],["title/components/FileInputComponent.html",[407,0.498,629,1.073]],["body/components/FileInputComponent.html",[0,0.197,3,0.192,4,0.096,5,0.243,8,0.128,9,0.38,10,0.941,13,1.57,17,0.762,27,0.48,29,0.507,31,1.16,33,0.965,34,0.021,35,0.685,36,0.362,37,0.422,41,1.455,42,0.883,51,1.307,58,1.346,65,0.627,72,1.346,73,0.128,79,0.682,97,0.696,104,0.508,111,1.282,127,0.811,129,1.889,135,2.339,156,1.018,219,2.011,231,0.01,232,0.01,306,0.674,307,0.314,318,1.119,407,0.645,408,2.215,409,1.351,410,0.949,411,0.9,413,1.218,414,1.461,415,1.539,416,0.9,417,2.297,418,2.166,419,0.949,420,1.503,421,0.949,422,2.519,423,2.835,424,1.889,425,1.779,426,1.889,427,2.255,428,2.267,429,2.267,430,1.889,431,2.267,432,2.267,433,2.267,434,2.267,435,1.71,436,1.889,437,2.267,438,1.779,439,1.503,440,1.282,441,1.889,442,1.351,443,1.282,444,1.679,445,1.503,446,1.503,447,1.503,448,1.503,449,1.503,450,1.889,451,2.135,452,2.135,453,2.135,454,2.135,455,1.503,456,2.135,457,1.503,458,1.503,459,1.259,460,2.036,461,2.543,462,1.931,465,1.624,467,1.002,469,0.811,472,1.186,476,0.9,478,1.282,482,1.192,487,1.186,492,0.855,498,1.259,505,1.259,511,1.259,512,1.889,513,1.889,514,1.259,515,1.259,516,1.259,517,1.259,518,1.186,519,1.259,520,1.259,521,1.259,522,1.259,523,1.259,530,0.732,531,1.259,532,1.186,534,0.771,552,2.237,554,2.237,609,0.949,610,1.351,611,1.424,612,0.949,613,1.9,614,0.949,615,0.811,616,0.949,617,0.949,618,0.771,619,0.949,620,0.732,621,0.9,622,0.949,623,0.771,624,0.949,625,1.424,626,0.732,627,0.991,628,1.424,629,1.543,630,0.771,631,0.949,632,0.949,633,0.732,634,0.771,635,0.949,636,0.771,637,0.949,638,0.771,639,0.949,640,0.771,641,0.949,642,0.696,643,0.949,644,0.771,645,0.949,646,0.949,647,1.002,648,1.543,650,2.011,652,1.424,654,1.424,659,3.83,660,1.34,661,1.34,662,1.34,663,1.34,664,1.34,665,1.34,666,1.34,667,1.34,668,1.34,669,1.34,670,1.34,671,1.34,672,1.34,673,1.34,674,1.34,675,1.34,676,1.34,677,1.34,678,1.34,679,1.34,680,1.34,681,1.34,683,1.34,684,1.34,685,1.34,686,1.34,687,1.34,688,1.34,689,1.34,690,1.34,691,1.34,692,1.34,693,2.237,694,1.537,695,1.432,696,1.34,697,1.34,698,1.34,699,1.259,700,1.34,701,1.34,702,1.34,1009,1.806,1010,3.584,1011,2.986,1107,3.983,1108,3.983,1109,5.225,1110,4.702,1111,3.356,1112,2.237,1113,2.611,1114,1.806,1115,2.611,1116,2.611,1117,3.917,1118,2.611,1119,2.611,1120,2.611,1121,2.611,1122,2.611,1123,2.611,1124,2.611,1125,2.611,1126,2.611,1127,3.917]],["title/components/FormbuilderComponent.html",[407,0.498,630,1.073]],["body/components/FormbuilderComponent.html",[0,0.354,3,0.288,4,0.172,5,0.216,8,0.23,17,1.142,27,1.18,31,0.91,34,0.02,35,0.66,51,0.913,58,1.412,72,1.128,73,0.23,231,0.016,232,0.016,306,0.565,307,0.565,407,0.879,408,1.386,409,2.025,410,1.707,411,1.619,413,1.826,415,2.098,416,1.619,417,2.47,418,2.326,419,1.707,421,2.135,435,2.199,460,2.514,478,1.537,534,1.386,609,1.707,610,2.025,611,2.135,612,1.707,613,2.442,614,1.707,615,1.459,616,1.707,617,1.707,618,1.386,619,1.707,620,1.317,621,1.619,622,1.707,623,1.386,624,1.707,625,2.135,626,1.317,627,1.486,628,2.135,629,1.386,630,1.983,631,2.33,632,1.707,633,1.317,634,1.386,635,1.707,636,1.386,637,1.707,638,1.386,639,1.707,640,1.386,641,1.707,642,1.251,643,1.707,644,1.386,645,1.707,646,1.707,647,1.801,1128,4.021,1129,6.41,1130,4.694,1131,4.694]],["title/modules/FormbuilderModule.html",[1132,3.112,1133,2.513]],["body/modules/FormbuilderModule.html",[0,0.214,3,0.139,4,0.104,5,0.104,17,0.552,25,2.454,31,0.44,34,0.021,51,0.552,73,0.139,129,1.369,136,0.614,231,0.011,232,0.011,306,0.913,307,0.342,408,1.79,420,1.089,462,1.438,530,0.796,532,1.289,615,2.126,618,2.019,620,1.7,623,2.019,626,1.7,627,1.378,629,2.019,630,2.086,633,1.7,634,2.019,636,2.019,638,2.019,640,2.019,642,1.822,644,2.019,699,1.369,705,2.884,729,1.964,748,2.454,749,2.432,751,1.671,793,1.964,794,1.964,814,1.457,1007,2.164,1008,2.164,1015,3.571,1023,2.432,1024,1.671,1031,2.454,1065,3.788,1066,2.432,1067,1.964,1068,1.964,1069,3.571,1070,1.964,1071,1.964,1107,2.164,1108,2.164,1133,5.244,1134,2.164,1135,2.884,1136,2.432,1137,2.839,1138,2.432,1139,2.432,1140,3.576,1141,3.571,1142,1.964,1143,2.432,1144,2.839,1145,4.168,1146,4.168,1147,4.168,1148,4.94,1149,2.839,1150,5.444,1151,4.94,1152,2.839,1153,4.168,1154,3.571,1155,2.164,1156,4.168,1157,2.839,1158,4.168,1159,2.839,1160,4.168,1161,2.839,1162,4.168,1163,2.839,1164,4.168,1165,2.839,1166,4.168,1167,2.839,1168,4.168,1169,2.839,1170,4.168,1171,2.839,1172,4.168,1173,2.839,1174,4.168,1175,2.839,1176,4.168,1177,2.839,1178,4.168,1179,2.839,1180,4.168,1181,2.839,1182,4.168,1183,2.839,1184,4.168,1185,2.839,1186,4.168,1187,2.839,1188,4.168,1189,2.839,1190,4.94,1191,4.168,1192,4.168,1193,2.839,1194,4.168,1195,4.168,1196,2.839,1197,2.164,1198,2.164,1199,4.94,1200,2.839,1201,2.839,1202,2.839,1203,2.839,1204,4.168,1205,4.168,1206,4.168,1207,2.432,1208,2.432,1209,2.839,1210,4.168,1211,2.432,1212,2.839,1213,2.839,1214,1.964,1215,2.839,1216,2.839,1217,4.168,1218,1.804,1219,4.168,1220,1.964,1221,4.168,1222,1.964,1223,4.168,1224,1.964,1225,4.168,1226,2.839,1227,4.168,1228,2.839,1229,2.839,1230,2.839,1231,2.839,1232,2.839,1233,4.94,1234,4.168,1235,2.839,1236,2.839]],["title/injectables/FormbuilderService.html",[233,0.919,1237,2.77]],["body/injectables/FormbuilderService.html",[0,0.431,3,0.28,4,0.21,5,0.21,27,1.284,31,0.885,34,0.02,73,0.28,231,0.018,232,0.018,233,1.672,235,2.593,306,0.688,307,0.688,315,2.447,316,2.447,1237,5.037,1238,4.891,1239,5.709]],["title/interfaces/IAutoCompleteOptions.html",[74,0.3,1240,1.993]],["body/interfaces/IAutoCompleteOptions.html",[3,0.255,4,0.191,5,0.191,8,0.255,9,0.607,29,0.393,34,0.02,36,0.362,37,0.675,73,0.255,74,0.429,79,1.167,218,2.108,231,0.017,232,0.017,274,4.263,300,4.327,482,1.694,1240,3.431,1241,1.617,1242,4.456,1243,6.959,1244,6.959,1245,6.959,1246,6.959,1247,6.959,1248,6.959,1249,5.202]],["title/interfaces/ICodeEntry.html",[74,0.3,1250,1.865]],["body/interfaces/ICodeEntry.html",[3,0.23,4,0.172,5,0.172,8,0.23,9,0.57,29,0.571,30,1.386,34,0.02,35,0.721,36,0.314,37,0.527,42,0.89,50,3.954,73,0.329,74,0.554,79,1.022,127,1.459,231,0.016,232,0.016,306,0.862,307,0.565,403,2.575,414,1.826,439,1.801,440,1.922,442,1.619,443,1.922,445,1.801,446,1.801,447,1.801,448,1.801,449,1.801,455,1.801,457,1.801,458,1.801,465,1.992,469,1.826,476,2.025,482,1.34,492,2.098,528,2.575,530,1.317,765,3.239,799,2.575,1065,2.575,1218,2.983,1240,3.221,1241,1.459,1250,3.291,1251,2.983,1252,3.247,1253,4.434,1254,4.434,1255,3.091,1256,2.832,1257,3.247,1258,3.247,1259,2.983,1260,3.247,1261,3.247,1262,3.247,1263,3.247,1264,2.763,1265,3.247,1266,3.221]],["title/interfaces/ICustomValidation.html",[74,0.3,469,1.129]],["body/interfaces/ICustomValidation.html",[0,0.44,3,0.228,4,0.17,5,0.17,8,0.228,9,0.566,13,1.763,29,0.566,34,0.021,35,0.656,36,0.345,37,0.647,42,0.598,65,1.116,73,0.228,74,0.383,79,1.11,218,2.364,231,0.016,232,0.016,395,4.996,440,1.52,442,1.602,469,1.813,528,3.2,627,1.614,800,3.213,1142,4.629,1241,1.444,1264,2.734,1267,3.54,1268,3.54,1269,5.732,1270,6.378,1271,6.378,1272,5.905,1273,4.036,1274,3.979,1275,3.979,1276,3.979,1277,3.979,1278,3.979,1279,3.979,1280,3.979,1281,3.979,1282,3.979,1283,5.464,1284,3.979,1285,3.979,1286,3.979,1287,3.979,1288,3.979,1289,3.979,1290,3.979]],["title/interfaces/IDialogConfig.html",[74,0.3,1273,2.513]],["body/interfaces/IDialogConfig.html",[0,0.437,3,0.225,4,0.168,5,0.168,8,0.225,9,0.562,13,1.76,29,0.556,34,0.021,35,0.651,36,0.349,37,0.657,42,0.591,65,1.103,73,0.225,74,0.379,79,1.104,215,3.699,218,2.347,231,0.015,232,0.015,395,4.984,440,1.502,442,1.583,469,1.427,528,3.176,627,1.606,800,3.175,1142,4.609,1241,1.427,1264,2.702,1267,3.499,1268,3.499,1269,3.932,1272,4.961,1273,3.175,1274,3.932,1275,5.708,1276,5.708,1277,5.708,1278,3.932,1279,3.932,1280,3.932,1281,3.932,1282,3.932,1283,5.435,1284,3.932,1285,3.932,1286,3.932,1287,3.932,1288,3.932,1289,3.932,1290,3.932,1291,6.344,1292,6.344]],["title/interfaces/IField.html",[74,0.3,414,1.129]],["body/interfaces/IField.html",[3,0.186,4,0.139,5,0.139,8,0.186,9,0.495,29,0.571,30,1.826,34,0.02,35,0.748,36,0.366,37,0.685,42,0.831,50,2.227,73,0.303,74,0.51,79,1.076,127,1.922,231,0.014,232,0.014,306,0.819,307,0.456,403,2.075,414,1.796,439,1.452,440,2.226,442,2.133,443,2.114,445,2.372,446,2.372,447,2.372,448,2.372,449,2.372,455,2.372,457,2.372,458,2.372,465,2.114,469,1.922,476,2.133,482,1.411,492,2.114,528,2.075,530,1.061,765,1.825,799,3.392,1065,2.075,1218,2.405,1240,3.392,1241,1.176,1250,3.175,1251,2.405,1252,2.618,1253,4.784,1254,4.784,1255,3.114,1256,2.982,1257,2.618,1258,2.618,1259,2.405,1260,4.278,1261,4.278,1262,2.618,1263,4.278,1264,3.401,1265,3.997,1266,2.8]],["title/interfaces/IFlatObject.html",[74,0.3,937,2.513]],["body/interfaces/IFlatObject.html",[0,0.303,3,0.197,4,0.148,5,0.148,13,1.432,25,3.506,27,0.74,29,0.449,31,0.623,34,0.021,36,0.332,42,0.518,45,3.379,61,3.13,65,1.705,73,0.261,74,0.332,79,0.7,97,1.072,104,0.782,111,2.379,129,3.056,136,1.466,139,2.368,148,1.317,215,2.73,218,2.414,219,2.73,231,0.014,232,0.014,233,1.346,306,0.484,307,0.484,315,1.724,316,1.724,482,1.213,748,2.368,765,3.056,868,3.13,923,3.066,924,3.446,925,5.103,927,3.446,929,3.446,930,5.429,932,3.446,934,3.446,935,3.446,937,4.121,940,3.446,941,3.446,942,3.446,943,5.103,944,4.555,945,3.446,946,3.446,947,4.555,948,2.368,949,3.446,950,5.103,951,5.429,952,3.446,953,3.446,954,4.555,955,3.446,956,3.446,957,3.446,958,3.446,959,5.646,960,3.446,961,3.446,962,3.446,963,3.446,964,3.446,965,3.446,966,3.446,967,4.555,968,4.555,969,4.831,970,4.555,971,4.555,972,3.13,973,3.446,974,5.103,975,5.646,976,3.446,977,3.446,978,3.446,1241,1.25,1293,4.022,1294,4.022]],["title/interfaces/IForm.html",[74,0.3,1295,2.77]],["body/interfaces/IForm.html",[3,0.264,4,0.197,5,0.197,8,0.264,9,0.619,17,1.24,29,0.55,31,0.833,33,1.104,34,0.02,35,0.819,36,0.334,37,0.482,51,1.045,73,0.264,74,0.443,231,0.017,232,0.017,306,0.768,414,1.983,444,3.016,467,2.063,472,3.309,530,1.508,1241,1.671,1266,2.949,1295,4.863,1296,4.606,1297,6.38,1298,6.38,1299,5.377]],["title/interfaces/IFormObj.html",[74,0.3,1266,1.993]],["body/interfaces/IFormObj.html",[3,0.231,4,0.173,5,0.173,8,0.231,9,0.571,29,0.568,30,1.392,34,0.02,35,0.794,36,0.289,42,0.758,50,2.774,73,0.33,74,0.555,79,1.025,127,1.465,231,0.016,232,0.016,306,0.863,307,0.568,403,3.689,414,2.091,439,1.808,440,1.927,442,1.625,443,1.927,445,1.808,446,1.808,447,1.808,448,1.808,449,1.808,455,1.808,457,1.808,458,1.808,465,1.996,469,1.83,476,2.031,482,1.343,492,2.102,528,2.585,530,1.322,765,2.273,799,2.585,1065,2.585,1218,2.995,1240,3.23,1241,1.465,1250,3.023,1251,2.995,1252,3.261,1253,4.442,1254,4.442,1255,3.096,1256,2.839,1257,3.261,1258,3.261,1259,2.995,1260,3.261,1261,3.261,1262,3.261,1263,3.261,1264,2.774,1265,3.261,1266,3.798]],["title/interfaces/IHTMLAttributes.html",[74,0.3,476,1.253]],["body/interfaces/IHTMLAttributes.html",[3,0.223,4,0.167,5,0.167,8,0.223,9,0.559,29,0.571,30,1.343,34,0.02,35,0.787,36,0.336,37,0.656,42,0.741,50,2.677,73,0.326,74,0.548,79,1.156,127,1.414,231,0.015,232,0.015,306,0.856,307,0.548,403,2.495,414,1.79,439,2.547,440,1.885,442,1.569,443,2.242,445,1.745,446,1.745,447,1.745,448,1.745,449,1.745,455,1.745,457,1.745,458,1.745,465,1.964,469,1.79,476,2.179,482,1.515,492,2.068,528,2.495,530,1.276,765,2.193,799,2.495,1065,2.495,1218,2.89,1240,3.158,1241,1.414,1250,2.956,1251,2.89,1252,3.146,1253,4.37,1254,4.37,1255,3.046,1256,2.776,1257,3.146,1258,4.594,1259,4.22,1260,3.146,1261,3.146,1262,3.146,1263,3.146,1264,2.677,1265,3.146,1266,3.158]],["title/interfaces/ISliderConfig.html",[74,0.3,1255,1.752]],["body/interfaces/ISliderConfig.html",[3,0.262,4,0.196,5,0.196,8,0.262,9,0.617,34,0.02,36,0.357,73,0.262,74,0.441,79,1.314,231,0.017,232,0.017,482,1.66,1241,1.664,1255,3.068,1259,4.465,1300,4.585,1301,7.025,1302,7.025,1303,7.025,1304,7.025,1305,7.025]],["title/interfaces/ITableHeader.html",[74,0.3,1306,2.309]],["body/interfaces/ITableHeader.html",[0,0.228,1,1.55,3,0.148,4,0.111,5,0.218,8,0.148,9,0.423,10,1.048,12,1.777,14,1.861,27,0.556,29,0.527,30,1.287,34,0.021,36,0.275,37,0.502,41,0.654,54,1.777,67,1.371,72,1.347,73,0.275,74,0.36,75,1.656,76,1.656,77,1.656,78,1.656,79,1.078,80,1.656,81,1.656,82,1.656,84,1.656,97,1.493,104,1.09,111,2.18,128,2.324,136,1.382,148,1.835,156,1.415,189,1.656,190,1.656,191,1.656,192,1.777,231,0.012,232,0.012,298,2.567,306,0.814,307,0.364,389,3.252,407,0.598,413,0.938,415,1.427,417,0.988,418,0.938,427,1.158,435,0.988,443,0.988,460,1.585,465,2.07,467,1.673,482,1.413,530,0.847,627,0.764,642,0.804,648,0.891,652,1.098,654,1.098,726,2.089,754,3.54,770,2.089,814,1.55,870,1.919,903,1.656,948,3.646,972,1.777,1024,2.567,1030,2.089,1031,1.777,1044,3.016,1140,2.238,1214,2.089,1220,2.089,1222,2.089,1224,2.089,1241,0.938,1256,2.102,1306,3.252,1307,1.919,1308,4.272,1309,4.272,1310,4.272,1311,2.302,1312,2.302,1313,3.324,1314,3.324,1315,3.324,1316,2.302,1317,3.324,1318,3.324,1319,3.324,1320,2.302,1321,2.302,1322,3.016,1323,3.016,1324,2.302,1325,2.302,1326,2.302,1327,2.302,1328,2.302,1329,2.302,1330,2.302,1331,3.901,1332,2.302,1333,2.302,1334,3.016,1335,2.302,1336,2.302,1337,2.302,1338,2.302,1339,2.302,1340,2.302,1341,2.302,1342,2.302,1343,2.302,1344,2.302,1345,2.302,1346,3.324,1347,2.302,1348,2.302,1349,2.302,1350,2.302,1351,2.302,1352,2.302,1353,2.302,1354,2.302,1355,2.302,1356,2.302,1357,2.302,1358,2.302,1359,2.302,1360,2.302,1361,2.302,1362,3.324,1363,2.302,1364,2.302,1365,4.531,1366,2.302,1367,3.324,1368,2.302,1369,2.302,1370,2.302,1371,3.016,1372,2.302,1373,3.324,1374,2.302,1375,3.324,1376,2.302,1377,2.302,1378,2.302,1379,2.302,1380,2.302,1381,2.302,1382,2.302,1383,2.302,1384,3.324,1385,3.324,1386,2.302,1387,2.302,1388,3.54,1389,2.302,1390,2.302,1391,2.302,1392,2.302,1393,3.324,1394,3.324,1395,2.302,1396,3.324,1397,2.302,1398,2.302,1399,2.302,1400,2.302,1401,2.302,1402,3.324,1403,2.302,1404,2.302,1405,3.324,1406,2.302,1407,3.324,1408,2.302,1409,2.302,1410,2.302,1411,2.302,1412,2.302,1413,2.302,1414,2.302,1415,2.302,1416,2.302,1417,2.302,1418,2.302,1419,2.302,1420,2.302,1421,2.302,1422,2.302,1423,2.302,1424,2.302,1425,2.302,1426,2.302,1427,2.302,1428,2.302,1429,2.302,1430,2.302,1431,2.302,1432,2.302,1433,2.302,1434,2.302,1435,2.302,1436,2.302,1437,2.302,1438,2.302,1439,2.302,1440,3.324,1441,2.302,1442,3.901,1443,3.324,1444,2.302,1445,3.901,1446,3.324,1447,2.302,1448,2.302,1449,2.302,1450,2.302,1451,2.302]],["title/interfaces/ITableViewOptions.html",[74,0.3,1256,1.752]],["body/interfaces/ITableViewOptions.html",[0,0.221,1,1.505,3,0.144,4,0.108,5,0.216,8,0.144,9,0.414,10,1.026,12,1.725,14,1.83,27,0.539,29,0.514,30,1.26,34,0.021,36,0.337,37,0.496,41,0.634,54,1.725,67,1.331,72,1.328,73,0.271,74,0.352,75,1.608,76,1.608,77,1.608,78,1.608,79,1.249,80,1.608,81,1.608,82,1.608,84,1.608,97,1.473,104,1.075,111,2.164,128,2.285,136,1.37,148,1.809,156,1.404,189,1.608,190,1.608,191,1.608,192,1.725,231,0.011,232,0.011,298,2.512,306,0.809,307,0.353,389,3.198,407,0.585,413,0.911,415,1.397,417,0.959,418,0.911,427,1.124,435,0.959,443,0.959,460,1.552,465,2.055,467,1.637,482,1.261,530,0.822,627,0.742,642,0.781,648,0.865,652,1.066,654,1.066,726,2.028,754,3.481,770,2.028,814,1.505,870,1.863,903,1.608,948,3.609,972,1.725,1024,2.512,1030,2.028,1031,1.725,1044,2.952,1140,2.191,1214,2.028,1220,2.028,1222,2.028,1224,2.028,1241,0.911,1256,2.426,1306,2.712,1307,1.863,1308,2.234,1309,2.234,1310,2.234,1311,2.234,1312,2.234,1313,3.253,1314,3.253,1315,3.253,1316,2.234,1317,3.253,1318,3.253,1319,3.253,1320,2.234,1321,2.234,1322,3.824,1323,2.952,1324,4.213,1325,4.213,1326,4.213,1327,4.213,1328,4.213,1329,4.213,1330,4.213,1331,3.836,1332,2.234,1333,2.234,1334,2.952,1335,2.234,1336,2.234,1337,2.234,1338,2.234,1339,2.234,1340,2.234,1341,2.234,1342,2.234,1343,2.234,1344,2.234,1345,2.234,1346,3.253,1347,2.234,1348,2.234,1349,2.234,1350,2.234,1351,2.234,1352,2.234,1353,2.234,1354,2.234,1355,2.234,1356,2.234,1357,2.234,1358,2.234,1359,2.234,1360,2.234,1361,2.234,1362,3.253,1363,2.234,1364,2.234,1365,4.478,1366,2.234,1367,3.253,1368,2.234,1369,2.234,1370,2.234,1371,2.952,1372,2.234,1373,3.253,1374,2.234,1375,3.253,1376,2.234,1377,2.234,1378,2.234,1379,2.234,1380,2.234,1381,2.234,1382,2.234,1383,2.234,1384,3.253,1385,3.253,1386,2.234,1387,2.234,1388,3.481,1389,2.234,1390,2.234,1391,2.234,1392,2.234,1393,3.253,1394,3.253,1395,2.234,1396,3.253,1397,2.234,1398,2.234,1399,2.234,1400,2.234,1401,2.234,1402,3.253,1403,2.234,1404,2.234,1405,3.253,1406,2.234,1407,3.253,1408,2.234,1409,2.234,1410,2.234,1411,2.234,1412,2.234,1413,2.234,1414,2.234,1415,2.234,1416,2.234,1417,2.234,1418,2.234,1419,2.234,1420,2.234,1421,2.234,1422,2.234,1423,2.234,1424,2.234,1425,2.234,1426,2.234,1427,2.234,1428,2.234,1429,2.234,1430,2.234,1431,2.234,1432,2.234,1433,2.234,1434,2.234,1435,2.234,1436,2.234,1437,2.234,1438,2.234,1439,2.234,1440,3.253,1441,2.234,1442,3.836,1443,3.253,1444,2.234,1445,3.836,1446,3.253,1447,2.234,1448,2.234,1449,2.234,1450,2.234,1451,2.234]],["title/interfaces/IValidator.html",[74,0.3,492,1.189]],["body/interfaces/IValidator.html",[3,0.254,4,0.19,5,0.19,8,0.254,9,0.605,29,0.505,34,0.02,36,0.358,37,0.678,73,0.254,74,0.426,79,1.257,231,0.017,232,0.017,318,2.977,451,3.154,452,3.154,453,3.154,454,3.154,456,3.154,482,1.715,492,2.04,518,3.154,1241,1.607,1452,4.43]],["title/components/InfoDialogSimpleComponent.html",[407,0.498,633,1.019]],["body/components/InfoDialogSimpleComponent.html",[0,0.275,3,0.353,4,0.134,5,0.183,8,0.179,9,0.483,10,0.877,13,1.672,14,2.215,17,0.969,27,0.917,29,0.428,31,0.989,33,0.749,34,0.02,35,0.638,36,0.299,37,0.327,41,1.078,42,0.641,51,0.71,58,0.877,72,0.877,73,0.179,104,0.71,128,1.658,136,0.79,148,1.856,231,0.013,232,0.013,306,0.6,307,0.44,407,0.778,408,1.078,409,1.718,410,1.327,411,1.259,413,1.548,415,1.856,416,1.259,417,2.405,418,2.275,419,1.327,421,1.327,435,1.994,478,1.195,534,1.078,609,1.327,610,1.718,611,1.811,612,1.327,613,2.215,614,1.327,615,1.135,616,1.327,617,1.327,618,1.078,619,1.327,620,1.024,621,1.259,622,1.327,623,1.078,624,1.327,625,1.811,626,1.024,627,1.886,628,1.811,629,1.078,630,1.078,631,1.327,632,1.327,633,1.709,634,1.078,635,1.327,636,1.078,637,1.327,638,1.078,639,1.327,640,1.078,641,1.327,642,0.973,643,1.327,644,1.078,645,1.327,646,1.327,647,1.4,648,1.943,652,1.811,654,1.811,703,2.262,729,2.525,799,3.611,801,2.782,802,3.923,803,4.215,806,2.525,807,3.797,812,2.782,813,2.782,814,1.874,815,2.782,816,3.797,817,2.782,826,3.797,827,2.525,828,3.446,829,2.782,830,2.32,831,2.525,832,2.782,833,2.782,834,2.782,835,4.645,836,2.782,837,3.797,838,2.782,839,3.446,840,2.782,841,2.782,842,2.782,843,2.782,844,3.338,846,2.782,847,2.525,848,3.446,849,3.446,850,3.797,1062,5.464,1070,4.554,1071,4.554,1084,2.782,1085,4.268,1086,4.858,1087,4.268,1088,4.268,1089,3.127,1090,3.127,1091,3.127,1102,4.268,1104,3.127,1105,4.268,1453,4.981,1454,3.65,1455,4.981,1456,3.65,1457,4.981,1458,3.65,1459,3.65,1460,3.65,1461,4.268]],["title/interfaces/MenuNode.html",[74,0.3,406,2.513]],["body/interfaces/MenuNode.html",[0,0.419,3,0.272,4,0.204,5,0.204,8,0.272,9,0.631,29,0.547,34,0.02,35,0.814,36,0.319,37,0.583,73,0.319,74,0.457,231,0.017,232,0.017,401,4.13,402,4.228,403,3.973,406,5.011,1241,1.724]],["title/interfaces/Options.html",[30,1.073,74,0.3]],["body/interfaces/Options.html",[0,0.293,1,1.326,3,0.127,4,0.171,5,0.095,6,1.52,7,1.52,8,0.229,9,0.377,10,1.122,11,1.968,12,3.059,13,1.702,14,2.529,15,4.507,16,1.968,19,1.968,20,1.968,21,1.968,22,1.968,23,1.968,24,1.968,25,4.123,28,1.968,29,0.539,30,1.729,34,0.021,36,0.339,38,2.961,45,1.641,47,1.968,49,1.968,53,1.786,54,1.52,56,3.595,57,2.287,58,1.122,60,1.968,61,1.52,62,3.961,65,1.249,67,2.759,68,1.968,70,1.786,71,1.786,72,1.122,73,0.255,74,0.213,75,3.056,76,3.056,77,3.056,78,3.056,79,1.249,80,3.056,81,3.056,82,3.056,83,3.855,84,3.056,85,3.855,86,3.855,87,3.855,88,1.641,89,1.968,90,1.968,91,1.968,92,1.968,93,1.968,94,1.968,95,1.968,96,1.968,97,1.619,98,1.968,99,1.968,100,1.968,101,1.968,102,1.968,103,1.968,104,0.755,105,1.968,106,1.968,107,1.968,108,1.968,109,1.968,110,1.968,111,1.701,112,2.469,113,1.786,114,1.786,115,1.786,116,1.786,117,1.786,118,1.786,119,1.786,120,1.786,121,1.786,122,1.786,123,1.786,124,1.786,125,1.786,126,1.786,127,1.208,128,1.172,129,2.252,130,1.968,131,2.961,132,1.641,133,2.961,134,1.968,135,2.138,136,1.482,137,1.968,138,1.968,139,3.764,140,1.968,141,4.875,142,1.968,143,1.968,144,1.968,145,1.968,146,1.968,147,2.961,148,1.988,149,1.968,150,1.968,151,1.968,152,1.968,153,1.968,154,1.968,155,1.968,156,1.011,157,1.968,158,1.968,159,1.968,160,2.961,161,2.961,162,2.961,163,1.968,164,1.968,165,1.968,166,1.786,167,1.968,168,1.968,169,1.968,170,1.968,171,1.968,172,1.968,173,1.968,174,1.968,175,1.968,176,1.968,177,1.968,178,1.968,179,1.968,180,1.968,181,4.736,182,1.968,183,1.968,184,4.248,185,3.961,186,3.961,187,2.961,188,1.968,189,2.131,190,2.131,191,2.131,192,2.287,193,1.968,194,1.968,195,2.961,196,1.968,197,1.968,198,3.56,199,1.968,200,2.961,201,1.968,202,1.968,203,1.968,204,3.56,205,1.968,206,1.968,207,1.968,208,1.968,209,1.641,210,1.786,211,1.641,212,1.786,213,1.786,214,1.968,215,1.994,216,1.786,217,2.287,218,1.574,219,1.994,220,1.968,221,1.968,222,1.786,223,1.968,224,1.968,225,1.786,226,1.641,227,1.786,228,1.968,229,1.968,230,2.961,231,0.01,232,0.01,1241,0.803]],["title/components/RadiobuttonComponent.html",[407,0.498,634,1.073]],["body/components/RadiobuttonComponent.html",[0,0.203,3,0.196,4,0.099,5,0.147,8,0.132,9,0.389,10,0.963,13,1.582,17,0.779,27,0.495,29,0.51,30,1.413,31,1.161,33,0.982,34,0.02,35,0.692,36,0.363,37,0.429,41,1.464,42,0.888,51,1.299,58,1.275,65,0.647,72,1.151,73,0.132,79,0.697,97,0.717,104,0.523,127,0.836,135,2.362,156,0.867,231,0.011,232,0.011,306,0.716,307,0.324,318,1.153,407,0.657,408,2.219,409,1.382,410,0.978,411,0.928,413,1.245,414,1.488,415,1.567,416,0.928,417,2.307,418,2.177,419,0.978,420,1.537,421,0.978,422,2.558,423,2.867,424,1.932,425,1.82,426,1.932,427,2.281,428,2.735,429,2.308,430,1.932,431,2.308,432,2.308,433,2.308,434,2.308,435,1.736,436,1.932,437,2.308,438,1.82,439,1.537,440,1.312,441,1.932,442,1.382,443,1.312,444,1.717,445,2.035,446,1.537,447,1.537,448,1.537,449,1.537,450,1.932,451,2.174,452,2.174,453,2.174,454,2.174,455,1.537,456,2.174,457,1.537,458,1.537,459,1.297,460,2.062,461,2.575,462,1.956,465,1.649,467,1.032,469,0.836,472,1.222,476,0.928,478,1.312,482,1.21,487,1.222,492,0.881,498,1.297,505,1.297,511,1.297,512,1.932,513,1.932,514,1.297,515,1.297,516,1.297,517,1.297,518,1.222,519,1.297,520,1.297,521,1.297,522,1.297,523,1.297,526,1.861,530,0.755,531,1.297,532,1.222,534,0.794,609,0.978,610,1.382,611,1.457,612,0.978,613,1.928,614,0.978,615,0.836,616,0.978,617,0.978,618,0.794,619,0.978,620,0.755,621,0.928,622,0.978,623,0.794,624,0.978,625,1.457,626,0.755,627,1.014,628,1.457,629,0.794,630,0.794,631,0.978,632,0.978,633,0.755,634,1.566,635,0.978,636,0.794,637,0.978,638,0.794,639,0.978,640,0.794,641,0.978,642,0.717,643,0.978,644,0.794,645,0.978,646,0.978,647,1.032,648,1.413,650,2.057,652,1.457,654,1.457,659,3.838,660,1.381,661,1.381,662,1.381,663,1.381,664,1.381,665,1.381,666,1.381,667,1.381,668,1.381,669,1.381,670,1.381,671,1.381,672,1.381,673,1.381,674,1.381,675,1.381,676,1.381,677,1.381,678,1.381,679,1.381,680,1.381,681,1.381,682,1.71,683,1.381,684,1.381,685,1.381,686,1.381,687,1.381,688,1.381,689,1.381,690,1.381,691,1.381,692,1.381,694,1.584,695,1.476,696,1.381,697,1.381,698,1.381,699,1.297,700,1.381,701,1.381,702,1.381,703,1.82,1021,1.71,1114,1.861,1250,2.458,1462,2.305,1463,4.007,1464,4.787,1465,4.007,1466,4.007,1467,2.051,1468,2.691,1469,3.433,1470,2.691]],["title/components/SelectComponent.html",[407,0.498,636,1.073]],["body/components/SelectComponent.html",[0,0.202,3,0.196,4,0.098,5,0.147,8,0.132,9,0.388,10,0.961,13,1.581,17,0.777,27,0.494,29,0.51,30,1.411,31,1.161,33,0.981,34,0.02,35,0.692,36,0.363,37,0.428,41,1.463,42,0.887,51,1.298,58,1.273,65,0.645,72,1.148,73,0.132,79,0.696,97,0.715,104,0.522,127,0.834,135,2.36,156,0.865,231,0.011,232,0.011,306,0.715,307,0.323,318,1.15,407,0.656,408,2.219,409,1.379,410,0.975,411,0.925,413,1.243,414,1.485,415,1.564,416,0.925,417,2.306,418,2.176,419,0.975,420,1.534,421,0.975,422,2.554,423,2.864,424,1.928,425,1.815,426,1.928,427,2.278,428,2.731,429,2.304,430,1.928,431,2.304,432,2.304,433,2.304,434,2.304,435,1.734,436,1.928,437,2.304,438,1.815,439,1.534,440,1.309,441,1.928,442,1.379,443,1.309,444,1.713,445,2.032,446,1.534,447,1.534,448,1.534,449,1.534,450,1.928,451,2.17,452,2.17,453,2.17,454,2.17,455,1.534,456,2.17,457,1.534,458,1.534,459,1.293,460,2.059,461,2.572,462,1.953,465,1.646,467,1.029,469,0.834,472,1.218,476,0.925,478,1.309,482,1.208,487,1.218,492,0.878,498,1.293,505,1.293,511,1.293,512,1.928,513,1.928,514,1.293,515,1.293,516,1.293,517,1.293,518,1.218,519,1.293,520,1.293,521,1.293,522,1.293,523,1.293,526,1.856,530,0.752,531,1.293,532,1.218,534,0.792,609,0.975,610,1.379,611,1.453,612,0.975,613,1.925,614,0.975,615,0.834,616,0.975,617,0.975,618,0.792,619,0.975,620,0.752,621,0.925,622,0.975,623,0.792,624,0.975,625,1.453,626,0.752,627,1.012,628,1.453,629,0.792,630,0.792,631,0.975,632,0.975,633,0.752,634,0.792,635,0.975,636,1.564,637,0.975,638,0.792,639,0.975,640,0.792,641,0.975,642,0.715,643,0.975,644,0.792,645,0.975,646,0.975,647,1.029,648,1.411,650,2.052,652,1.453,654,1.453,659,3.837,660,1.377,661,1.377,662,1.377,663,1.377,664,1.377,665,1.377,666,1.377,667,1.377,668,1.377,669,1.377,670,1.377,671,1.377,672,1.377,673,1.377,674,1.377,675,1.377,676,2.052,677,1.377,678,1.377,679,1.377,680,1.377,681,1.377,683,1.377,684,1.377,685,1.377,686,1.377,687,1.377,688,1.377,689,1.377,690,1.377,691,1.377,692,1.377,696,1.377,697,1.377,698,1.377,699,1.293,700,1.377,701,1.377,702,1.377,703,1.815,1022,2.298,1112,2.298,1114,1.856,1250,2.453,1388,2.766,1467,2.045,1469,3.425,1471,2.298,1472,4.778,1473,3.998,1474,3.998,1475,2.682,1476,3.425,1477,3.998,1478,3.998,1479,3.998]],["title/components/SlideToggleComponent.html",[407,0.498,640,1.073]],["body/components/SlideToggleComponent.html",[0,0.203,3,0.196,4,0.099,5,0.147,8,0.132,9,0.388,10,0.962,13,1.581,17,0.778,27,0.494,29,0.52,31,1.161,33,0.982,34,0.021,35,0.692,36,0.363,37,0.429,41,1.463,42,0.888,51,1.298,58,1.274,65,0.646,72,1.15,73,0.132,79,0.696,97,0.716,104,0.522,127,0.835,135,2.361,156,0.866,231,0.011,232,0.011,306,0.716,307,0.324,318,1.151,407,0.656,408,2.219,409,1.38,410,0.977,411,0.927,413,1.244,414,1.487,415,1.566,416,0.927,417,2.307,418,2.177,419,0.977,420,1.535,421,0.977,422,2.556,423,2.865,424,1.93,425,1.817,426,1.93,427,2.28,428,2.733,429,2.306,430,1.93,431,2.733,432,2.306,433,2.306,434,2.306,435,1.735,436,1.93,437,2.306,438,1.817,439,1.535,440,1.31,441,1.93,442,1.38,443,1.31,444,1.715,445,2.033,446,1.535,447,1.535,448,1.535,449,1.535,450,1.93,451,2.172,452,2.172,453,2.172,454,2.172,455,1.535,456,2.172,457,1.535,458,1.535,459,1.295,460,2.061,461,2.574,462,1.955,465,1.647,467,1.031,469,0.835,472,1.22,476,0.927,478,1.31,482,1.209,487,1.22,492,0.879,498,1.295,505,1.295,511,1.295,512,1.93,513,1.93,514,1.295,515,1.295,516,1.295,517,1.295,518,1.22,519,1.295,520,1.295,521,1.295,522,1.295,523,1.295,530,0.754,531,1.295,532,1.22,534,0.793,594,3.051,609,0.977,610,1.38,611,1.455,612,0.977,613,1.927,614,0.977,615,0.835,616,0.977,617,0.977,618,0.793,619,0.977,620,0.754,621,0.927,622,0.977,623,0.793,624,0.977,625,1.455,626,0.754,627,1.013,628,1.455,629,0.793,630,0.793,631,0.977,632,0.977,633,0.754,634,0.793,635,0.977,636,0.793,637,0.977,638,0.793,639,0.977,640,1.565,641,0.977,642,0.716,643,0.977,644,0.793,645,0.977,646,0.977,647,1.031,648,1.412,650,2.055,652,1.455,654,1.455,659,3.838,660,1.379,661,1.379,662,1.379,663,1.379,664,1.379,665,1.379,666,1.379,667,1.379,668,1.379,669,1.379,670,1.379,671,1.379,672,1.379,673,1.379,674,1.379,675,1.379,676,1.379,677,1.379,678,1.379,679,1.379,680,1.379,681,1.379,682,1.707,683,1.379,684,1.379,685,1.379,686,1.379,687,1.379,688,1.379,689,1.379,690,1.379,691,1.379,692,1.379,694,1.581,695,1.474,696,1.379,697,1.379,698,1.379,699,1.295,700,1.379,701,1.379,702,1.379,703,1.817,1021,1.707,1114,1.859,1255,1.295,1467,2.048,1480,2.302,1481,4.002,1482,4.783,1483,4.002,1484,4.783,1485,4.002,1486,2.302]],["title/components/SliderComponent.html",[407,0.498,638,1.073]],["body/components/SliderComponent.html",[0,0.199,3,0.194,4,0.097,5,0.145,8,0.129,9,0.383,10,0.949,13,1.575,17,0.768,27,0.486,29,0.508,31,1.161,33,0.971,34,0.021,35,0.688,36,0.362,37,0.424,41,1.458,42,0.885,51,1.31,58,1.263,65,0.635,72,1.138,73,0.129,79,0.687,97,0.703,104,0.513,127,1.633,135,2.348,136,0.855,148,1.293,156,0.855,231,0.011,232,0.011,306,0.711,307,0.318,318,1.132,407,0.649,408,2.216,409,1.362,410,0.96,411,0.911,413,1.228,414,1.471,415,1.549,416,0.911,417,2.301,418,2.17,419,0.96,420,1.515,421,0.96,422,2.534,423,2.847,424,1.905,425,1.794,426,1.905,427,2.265,428,2.282,429,2.282,430,1.905,431,2.282,432,2.282,433,2.282,434,2.282,435,1.72,436,1.905,437,2.282,438,1.794,439,1.515,440,1.293,441,1.905,442,1.362,443,1.293,444,1.693,445,1.515,446,1.515,447,1.515,448,1.515,449,1.515,450,1.905,451,2.386,452,2.15,453,2.15,454,2.15,455,1.515,456,2.15,457,1.515,458,1.515,459,1.273,460,2.045,461,2.555,462,1.94,465,1.633,467,1.013,469,0.821,472,1.199,476,0.911,478,1.293,482,1.199,487,1.199,492,0.864,498,1.273,505,1.273,511,1.273,512,1.905,513,1.905,514,1.273,515,1.273,516,1.273,517,1.273,518,1.199,519,1.273,520,1.273,521,1.273,522,1.273,523,1.273,530,0.74,531,1.273,532,1.199,534,0.779,609,0.96,610,1.362,611,1.436,612,0.96,613,1.91,614,0.96,615,0.821,616,0.96,617,0.96,618,0.779,619,0.96,620,0.74,621,0.911,622,0.96,623,0.779,624,0.96,625,1.436,626,0.74,627,1,628,1.436,629,0.779,630,0.779,631,0.96,632,0.96,633,0.74,634,0.779,635,0.96,636,0.779,637,0.96,638,1.551,639,0.96,640,0.779,641,0.96,642,0.703,643,0.96,644,0.779,645,0.96,646,0.96,647,1.013,648,1.551,650,2.028,652,1.436,654,1.436,659,3.833,660,1.355,661,1.355,662,1.355,663,1.355,664,1.355,665,1.355,666,1.355,667,1.355,668,1.355,669,1.355,670,1.355,671,1.355,672,1.355,673,1.355,674,1.355,675,1.355,676,1.355,677,1.355,678,1.355,679,1.355,680,1.355,681,1.355,682,1.678,683,1.355,684,1.355,685,1.355,686,1.355,687,1.355,688,1.355,689,1.355,690,1.355,691,1.355,692,1.355,694,1.554,695,1.448,696,1.355,697,1.355,698,1.355,699,1.273,700,1.355,701,1.355,702,1.355,703,1.794,844,1.554,1021,1.678,1082,2.733,1255,2.534,1486,2.262,1487,2.262,1488,4.733,1489,4.733,1490,3.95,1491,5.254,1492,3.95,1493,2.64,1494,2.64,1495,3.95,1496,2.64,1497,2.64,1498,2.64,1499,3.95,1500,3.384,1501,2.64,1502,1.826,1503,2.64]],["title/components/TableComponent.html",[407,0.498,642,0.968]],["body/components/TableComponent.html",[0,0.153,1,1.043,3,0.158,4,0.075,5,0.212,8,0.1,9,0.313,10,0.776,12,1.196,14,1.931,17,0.628,27,0.594,29,0.497,30,0.953,31,1.113,33,1.221,34,0.021,35,0.7,36,0.338,37,0.534,41,1.251,42,0.717,51,1.281,54,2.364,58,1.496,67,0.923,71,2.778,72,1.199,73,0.245,74,0.266,75,1.115,76,1.115,77,1.115,78,1.115,79,1.005,80,1.115,81,1.115,82,1.115,84,1.115,97,1.219,104,0.889,111,1.948,128,1.823,136,1.205,148,1.633,156,1.32,181,3.452,189,1.115,190,1.115,191,1.115,192,1.196,231,0.009,232,0.009,298,1.9,306,0.734,307,0.245,389,2.906,407,0.551,408,0.6,409,1.113,410,0.739,411,0.701,413,1.003,415,1.314,416,0.701,417,2.198,418,2.068,419,0.739,421,0.739,427,1.54,435,1.497,438,1.466,443,0.665,460,1.174,465,1.998,467,1.54,478,0.665,482,1.27,530,0.57,534,0.6,609,0.739,610,1.113,611,1.174,612,0.739,613,1.663,614,0.739,615,0.632,616,0.739,617,0.739,618,0.6,619,0.739,620,0.57,621,0.701,622,0.739,623,0.6,624,0.739,625,1.174,626,0.57,627,1.157,628,1.174,629,0.6,630,0.6,631,0.739,632,0.739,633,0.57,634,0.6,635,0.739,636,0.6,637,0.739,638,0.6,639,0.739,640,0.6,641,0.739,642,1.219,643,0.739,644,0.6,645,0.739,646,0.739,647,0.78,648,2.126,652,1.174,654,1.174,703,1.466,726,1.406,754,3.852,770,1.406,806,2.233,814,1.043,827,1.406,828,2.233,839,2.233,844,1.9,847,2.233,848,3.452,849,1.406,870,2.552,903,1.115,948,3.127,972,1.196,1024,1.9,1030,1.406,1031,1.196,1043,1.741,1044,3.164,1082,3.452,1140,2.348,1214,1.406,1220,1.406,1222,1.406,1224,1.406,1256,1.936,1306,2.552,1307,1.291,1308,1.549,1309,1.549,1310,1.549,1311,1.549,1312,1.549,1313,3.061,1314,3.061,1315,3.486,1316,1.549,1317,3.061,1318,3.061,1319,3.061,1320,1.549,1321,1.549,1322,2.233,1323,2.233,1324,1.549,1325,1.549,1326,1.549,1327,1.549,1328,1.549,1329,1.549,1330,1.549,1331,3.061,1332,1.549,1333,1.549,1334,3.452,1335,1.549,1336,1.549,1337,1.549,1338,1.549,1339,1.549,1340,1.549,1341,1.549,1342,1.549,1343,1.549,1344,2.461,1345,3.061,1346,3.803,1347,2.461,1348,3.061,1349,3.061,1350,3.061,1351,3.061,1352,3.061,1353,3.061,1354,3.061,1355,2.461,1356,3.061,1357,2.461,1358,3.061,1359,3.803,1360,3.061,1361,2.461,1362,2.461,1363,1.549,1364,1.549,1365,3.803,1366,2.461,1367,3.486,1368,2.461,1369,2.461,1370,2.461,1371,3.164,1372,3.486,1373,2.461,1374,1.549,1375,2.461,1376,1.549,1377,2.461,1378,2.461,1379,2.461,1380,3.486,1381,1.549,1382,1.549,1383,1.549,1384,2.461,1385,2.461,1386,1.549,1387,1.549,1388,3.164,1389,1.549,1390,1.549,1391,1.549,1392,1.549,1393,2.461,1394,2.461,1395,1.549,1396,2.461,1397,1.549,1398,1.549,1399,1.549,1400,3.486,1401,1.549,1402,2.461,1403,1.549,1404,1.549,1405,2.461,1406,1.549,1407,2.461,1408,1.549,1409,1.549,1410,1.549,1411,1.549,1412,1.549,1413,2.461,1414,1.549,1415,1.549,1416,1.549,1417,1.549,1418,1.549,1419,1.549,1420,2.461,1421,1.549,1422,2.461,1423,1.549,1424,2.461,1425,1.549,1426,3.486,1427,1.549,1428,1.549,1429,1.549,1430,1.549,1431,2.461,1432,1.549,1433,1.549,1434,1.549,1435,1.549,1436,1.549,1437,2.461,1438,1.549,1439,1.549,1440,2.461,1441,1.549,1442,3.061,1443,2.461,1444,1.549,1445,3.061,1446,2.461,1447,1.549,1448,1.549,1449,1.549,1450,1.549,1451,1.549,1461,1.741,1502,1.406,1504,3.228,1505,4.015,1506,3.228,1507,3.228,1508,3.228,1509,3.228,1510,3.228,1511,3.228,1512,3.228,1513,4.015,1514,3.228,1515,3.228,1516,2.032,1517,2.032,1518,2.032,1519,2.032,1520,2.032,1521,2.032,1522,2.032,1523,2.032,1524,1.741,1525,2.032,1526,2.032,1527,2.032,1528,3.228,1529,2.032,1530,2.032,1531,2.032,1532,2.032,1533,2.032,1534,2.032,1535,2.032,1536,2.032,1537,2.032,1538,2.032,1539,2.032,1540,2.032,1541,2.032,1542,2.032,1543,2.032,1544,2.032,1545,2.032,1546,2.032,1547,2.032,1548,2.032,1549,3.228,1550,4.573,1551,3.228,1552,3.228,1553,3.228,1554,3.228,1555,3.228,1556,3.228,1557,2.032,1558,2.032,1559,2.032,1560,2.032,1561,2.032,1562,3.228,1563,2.032,1564,2.032,1565,2.032,1566,2.032,1567,2.032,1568,3.228,1569,2.032,1570,2.032,1571,2.032,1572,2.032]],["title/components/TextInputComponent.html",[407,0.498,644,1.073]],["body/components/TextInputComponent.html",[0,0.195,3,0.191,4,0.095,5,0.143,8,0.127,9,0.378,10,0.936,13,1.567,17,0.757,27,0.477,29,0.512,31,1.16,33,0.96,34,0.021,35,0.684,36,0.362,37,0.42,41,1.483,42,0.896,51,1.287,58,1.251,65,0.622,72,1.409,73,0.127,79,0.678,97,0.69,104,0.503,127,0.805,135,2.333,156,0.843,231,0.01,232,0.01,306,0.672,307,0.312,318,1.11,407,0.642,408,2.213,409,1.343,410,0.941,411,0.893,413,1.21,414,1.454,415,1.532,416,0.893,417,2.294,418,2.163,419,0.941,420,1.795,421,0.941,422,2.509,423,2.826,424,1.877,425,1.768,426,1.877,427,2.248,428,2.932,429,2.256,430,1.877,431,2.256,432,2.256,433,2.256,434,2.256,435,1.703,436,1.877,437,2.256,438,1.768,439,1.494,440,1.274,441,1.877,442,1.343,443,1.274,444,2.005,445,2.248,446,1.494,447,1.494,448,1.494,449,1.494,450,2.826,451,2.363,452,2.125,453,2.125,454,2.125,455,1.494,456,2.125,457,1.494,458,1.494,459,1.249,460,2.028,461,2.534,462,1.924,465,1.617,467,0.993,469,0.805,472,1.176,476,0.893,478,2.168,482,1.273,487,1.176,492,0.848,498,1.249,505,1.249,511,1.249,512,1.877,513,1.877,514,1.249,515,1.249,516,1.249,517,1.249,518,1.176,519,1.249,520,1.249,521,1.249,522,1.249,523,1.249,530,0.726,531,1.249,532,1.176,534,0.765,609,0.941,610,1.343,611,1.416,612,0.941,613,1.892,614,0.941,615,0.805,616,0.941,617,0.941,618,0.765,619,0.941,620,0.726,621,0.893,622,0.941,623,0.765,624,0.941,625,1.416,626,0.726,627,0.985,628,1.416,629,0.765,630,0.765,631,0.941,632,0.941,633,0.726,634,0.765,635,0.941,636,0.765,637,0.941,638,0.765,639,0.941,640,0.765,641,0.941,642,0.69,643,0.941,644,1.536,645,0.941,646,0.941,647,0.993,648,1.536,650,1.999,652,1.416,654,1.416,659,3.827,660,1.329,661,1.329,662,1.329,663,1.329,664,1.329,665,1.329,666,1.329,667,1.329,668,1.329,669,1.329,670,1.329,671,1.329,672,1.329,673,1.329,674,1.329,675,1.329,676,1.329,677,1.329,678,1.329,679,1.329,680,1.329,681,1.329,682,1.646,683,1.329,684,1.329,685,1.329,686,1.329,687,1.329,688,1.329,689,1.329,690,1.329,691,1.329,692,1.329,694,1.524,695,1.42,696,1.329,697,1.329,698,1.329,699,1.249,700,1.329,701,1.329,702,1.329,844,1.524,1009,1.791,1010,3.567,1011,2.968,1021,1.646,1082,2.694,1111,3.335,1197,3.967,1198,3.967,1371,3.237,1500,2.218,1502,1.791,1573,4.679,1574,3.335,1575,2.589]],["title/pipes/TranslatePipe.html",[1140,1.865,1576,2.309]],["body/pipes/TranslatePipe.html",[0,0.404,3,0.263,4,0.197,5,0.197,17,1.042,31,0.831,33,1.1,34,0.02,35,0.764,36,0.263,37,0.481,51,1.042,73,0.263,97,1.428,136,1.16,219,2.752,231,0.017,232,0.017,306,0.767,307,0.646,319,2.752,413,1.666,416,1.849,462,2.196,703,3.085,765,2.585,1140,3.27,1576,4.047,1577,5.36,1578,4.592,1579,5.36,1580,6.368,1581,5.36,1582,6.368,1583,5.36,1584,5.36,1585,4.592,1586,4.592,1587,5.36,1588,5.36]],["title/injectables/TranslationService.html",[233,0.919,462,1.253]],["body/injectables/TranslationService.html",[0,0.257,3,0.167,4,0.125,5,0.125,8,0.167,9,0.461,10,1.316,14,2.344,17,0.925,27,0.628,29,0.542,31,1.105,33,1.358,34,0.021,35,0.744,36,0.344,37,0.593,41,1.282,42,0.868,51,1.312,58,1.423,65,0.82,72,0.82,73,0.167,97,0.909,104,0.663,111,1.557,128,2.827,136,1.282,156,1.282,189,2.608,190,2.608,191,2.608,217,2.009,222,2.361,231,0.013,232,0.013,233,1.204,235,1.55,306,0.573,307,0.411,315,1.463,316,1.463,319,1.752,462,1.64,465,1.935,534,1.404,718,2.361,719,3.763,721,3.022,751,2.009,765,3.109,948,3.665,969,3.625,1031,2.799,1585,4.074,1586,2.923,1589,2.923,1590,5.474,1591,6.616,1592,5.474,1593,4.755,1594,4.755,1595,5.921,1596,5.921,1597,4.755,1598,4.755,1599,4.755,1600,4.074,1601,4.755,1602,4.755,1603,3.412,1604,5.474,1605,4.755,1606,3.412,1607,3.412,1608,3.412,1609,4.755,1610,3.412,1611,4.755,1612,3.412,1613,4.755,1614,3.412,1615,4.755,1616,3.412,1617,4.755,1618,3.412,1619,3.412,1620,3.412,1621,4.755,1622,3.412,1623,3.412,1624,3.412,1625,5.474,1626,3.412,1627,4.755,1628,4.755,1629,4.755,1630,3.412,1631,4.755,1632,4.755,1633,4.755,1634,5.474,1635,4.755,1636,3.412,1637,5.474,1638,5.921,1639,5.921,1640,4.755,1641,3.412,1642,3.412,1643,4.755,1644,4.755,1645,3.412,1646,3.412,1647,3.412,1648,3.412,1649,4.755,1650,3.412,1651,4.755,1652,3.412,1653,3.412,1654,3.412,1655,3.412,1656,3.412]],["title/injectables/UserService.html",[233,0.919,255,2.513]],["body/injectables/UserService.html",[0,0.224,3,0.145,4,0.109,5,0.109,8,0.145,9,0.417,10,1.526,17,0.836,27,0.545,29,0.567,30,1.988,31,1.102,33,1.429,34,0.021,35,0.783,36,0.352,37,0.624,41,0.931,42,0.553,51,1.341,65,1.034,67,3.263,70,2.05,73,0.145,104,1.08,111,2.204,136,1.519,156,1.202,166,3.503,218,1.201,231,0.011,232,0.011,233,1.089,235,1.346,242,3.685,245,3.685,246,3.685,255,2.976,272,3.685,274,4.46,288,6.23,298,4.295,306,0.669,307,0.357,310,1.625,315,1.27,316,1.27,319,1.521,332,2.538,363,3.685,389,2.733,425,2.299,482,1.155,534,0.875,718,2.05,719,3.531,721,2.733,751,1.744,896,2.259,897,4.235,904,3.86,919,3.279,921,2.259,989,4.338,999,2.538,1036,4.392,1476,5.769,1576,1.883,1657,2.538,1658,5.063,1659,4.301,1660,4.301,1661,4.301,1662,4.301,1663,4.301,1664,4.301,1665,4.301,1666,4.301,1667,4.301,1668,4.301,1669,4.301,1670,2.963,1671,4.301,1672,2.963,1673,4.301,1674,2.963,1675,4.301,1676,2.963,1677,4.301,1678,2.963,1679,4.301,1680,5.063,1681,2.963,1682,2.963,1683,4.301,1684,5.555,1685,5.555,1686,4.301,1687,2.963,1688,4.301,1689,4.301,1690,2.963,1691,4.301,1692,2.963,1693,2.963,1694,4.301,1695,2.963,1696,4.301,1697,2.963,1698,5.063,1699,5.063,1700,5.063,1701,2.963,1702,5.063,1703,2.963,1704,2.963,1705,2.963,1706,2.963,1707,2.963,1708,2.963,1709,2.963,1710,2.963,1711,2.963,1712,2.963,1713,2.963,1714,5.063,1715,4.301,1716,2.963,1717,5.063,1718,2.963,1719,2.963,1720,2.963,1721,4.301,1722,2.963,1723,2.963,1724,2.963,1725,4.301,1726,2.963,1727,2.963,1728,2.963,1729,2.963,1730,4.301,1731,2.963,1732,2.963,1733,2.963,1734,4.301,1735,2.963,1736,2.963,1737,2.963,1738,2.963,1739,2.963]],["title/coverage.html",[1740,4.254]],["body/coverage.html",[0,0.428,1,1.872,5,0.134,6,4.036,7,4.036,30,1.077,34,0.02,36,0.179,74,0.603,88,2.317,112,2.317,132,2.317,148,2.502,156,0.789,209,2.317,211,2.317,215,3.127,231,0.013,232,0.013,233,1.78,234,2.779,236,3.124,255,2.522,257,2.522,401,2.317,402,3.795,406,2.522,407,0.999,408,1.077,412,3.124,414,1.133,461,1.656,462,1.257,469,1.133,476,1.257,492,1.194,615,1.133,618,1.077,620,1.023,623,1.077,626,1.023,627,1.541,629,1.077,630,1.077,633,1.023,634,1.077,636,1.077,638,1.077,640,1.077,642,0.972,644,1.077,648,2.169,649,3.124,705,2.522,706,3.124,748,2.146,793,2.522,794,2.522,795,3.124,867,2.522,868,3.753,869,3.795,900,2.522,923,3.795,937,2.522,979,3.124,1007,2.779,1008,2.779,1009,3.921,1036,2.522,1037,3.124,1067,2.522,1068,2.522,1070,2.522,1071,2.522,1084,3.795,1107,2.779,1108,2.779,1128,3.124,1140,1.872,1197,2.779,1198,2.779,1237,2.779,1238,3.124,1240,2,1242,3.124,1250,1.872,1251,3.871,1255,1.758,1256,1.758,1266,2,1267,3.795,1268,3.795,1273,2.522,1295,2.779,1296,3.124,1300,3.124,1306,2.317,1307,3.602,1334,2.522,1452,3.124,1462,3.124,1471,3.124,1480,3.124,1487,3.124,1502,3.444,1576,2.317,1578,3.124,1589,3.124,1657,3.124,1740,3.124,1741,3.646,1742,3.646,1743,3.646,1744,3.646,1745,3.646,1746,3.646,1747,3.646,1748,4.978,1749,3.124,1750,6.09,1751,6.856,1752,3.646,1753,6.09,1754,3.646,1755,6.09,1756,4.978,1757,6.09,1758,3.646,1759,5.668,1760,4.265,1761,3.646,1762,3.646,1763,3.646,1764,4.978,1765,3.124,1766,3.646,1767,3.646,1768,4.265,1769,3.646,1770,3.124,1771,3.646,1772,3.646,1773,3.646,1774,4.321,1775,3.646,1776,3.124,1777,3.124,1778,6.09,1779,3.646,1780,5.668,1781,3.646,1782,3.646,1783,3.646,1784,3.646]],["title/dependencies.html",[1135,3.024,1785,3.03]],["body/dependencies.html",[34,0.02,57,3.127,231,0.017,232,0.017,307,0.64,308,4.551,310,2.914,530,1.49,753,4.551,1024,3.728,1135,3.675,1154,5.426,1155,4.828,1207,5.426,1208,4.551,1211,4.551,1786,5.312,1787,7.543,1788,5.312,1789,5.312,1790,5.312,1791,5.312,1792,5.312,1793,5.312,1794,5.312,1795,5.312,1796,4.551,1797,5.312,1798,5.312,1799,5.312,1800,5.312,1801,5.312,1802,5.312,1803,5.312,1804,5.312,1805,5.312,1806,5.312,1807,5.312,1808,5.312]],["title/miscellaneous/enumerations.html",[1809,1.784,1810,3.745]],["body/miscellaneous/enumerations.html",[5,0.244,8,0.283,34,0.019,42,0.902,231,0.018,232,0.018,298,3.916,648,1.705,1307,3.67,1322,4.602,1323,4.602,1809,3.399,1810,4.947,1811,5.775]],["title/miscellaneous/functions.html",[1809,1.784,1812,3.745]],["body/miscellaneous/functions.html",[4,0.232,6,3.117,7,3.979,8,0.26,14,1.926,29,0.528,33,1.437,34,0.02,35,0.787,36,0.343,37,0.628,42,0.814,50,3.722,65,1.52,132,4.018,156,1.146,213,3.664,216,3.664,217,3.117,219,2.719,225,3.664,226,3.366,227,3.664,231,0.017,232,0.017,427,2.032,462,2.18,648,1.564,903,3.468,1749,5.416,1768,4.537,1770,5.416,1774,4.037,1776,5.416,1809,3.117,1812,4.537,1813,4.537,1814,5.296,1815,5.416,1816,4.537,1817,5.296,1818,6.322,1819,5.296]],["title/index.html",[8,0.149,1820,3.03,1821,3.03]],["body/index.html",[4,0.182,34,0.017,35,0.557,37,0.444,53,4.542,156,1.072,231,0.016,232,0.016,263,4.243,395,3.426,407,0.901,418,1.539,440,1.621,460,2.488,725,6.123,778,5.201,831,4.945,1065,3.33,1600,5.201,1760,5.201,1796,4.243,1822,4.952,1823,6.565,1824,4.952,1825,6.565,1826,6.071,1827,6.565,1828,4.952,1829,4.952,1830,4.952,1831,4.952,1832,6.071,1833,7.309,1834,6.844,1835,4.952,1836,6.071,1837,4.952,1838,4.952,1839,4.952,1840,4.952,1841,4.952,1842,6.844,1843,6.071,1844,4.952,1845,4.952,1846,4.952,1847,7.023,1848,4.952,1849,6.565,1850,6.071,1851,4.952,1852,4.952,1853,4.952,1854,4.952,1855,4.952,1856,4.952,1857,4.952,1858,4.952,1859,4.952,1860,4.952,1861,4.952,1862,4.952,1863,4.952,1864,4.952,1865,4.952,1866,4.952,1867,4.952,1868,4.952,1869,4.952,1870,4.952,1871,4.952,1872,4.952]],["title/modules.html",[1134,3.785]],["body/modules.html",[34,0.018,231,0.018,232,0.018,1133,4.089,1134,4.506,1155,4.506,1873,5.911,1874,5.911,1875,5.911]],["title/overview.html",[1876,4.254]],["body/overview.html",[2,3.098,34,0.02,139,3.356,231,0.015,232,0.015,235,2.034,408,1.852,409,1.545,615,2.202,618,2.091,620,1.759,623,2.091,626,1.759,629,2.091,630,2.137,633,1.759,634,2.091,636,2.091,638,2.091,640,2.091,642,1.887,644,2.091,1132,3.837,1133,5.34,1135,3.944,1136,3.837,1138,3.837,1139,3.837,1140,3.636,1141,4.884,1142,3.098,1143,3.837,1241,1.392,1574,3.837,1576,2.846,1765,3.837,1876,3.837,1877,4.479,1878,4.479]],["title/interfaces/searchObj.html",[74,0.3,900,2.513]],["body/interfaces/searchObj.html",[0,0.302,3,0.197,4,0.147,5,0.147,8,0.197,9,0.515,29,0.563,30,1.566,34,0.021,36,0.338,37,0.606,42,0.683,57,2.359,67,2.99,72,0.963,73,0.26,74,0.331,104,0.779,136,1.581,148,1.947,156,0.868,231,0.014,232,0.014,233,1.343,274,2.547,306,0.762,307,0.483,310,2.199,312,2.773,315,1.718,316,1.718,317,5.537,319,2.058,378,4.044,420,1.538,478,2.072,534,1.183,719,3.372,721,2.547,751,2.359,830,4.022,867,2.773,868,2.359,869,3.056,870,2.547,873,3.434,877,3.434,878,5.911,880,5.422,881,3.434,883,3.434,885,3.434,886,5.094,887,5.094,889,3.434,892,3.434,894,3.434,896,4.533,897,4.533,898,3.434,899,4.545,900,4.114,901,5.422,902,3.434,903,2.91,904,4.825,905,3.434,906,3.434,907,4.545,908,3.434,909,3.434,910,3.434,911,3.434,912,5.094,913,3.434,914,3.434,915,3.434,916,3.434,917,3.434,918,3.434,919,3.056,920,3.434,921,3.056,922,3.434,1241,1.246]],["title/miscellaneous/variables.html",[1809,1.784,1879,3.745]],["body/miscellaneous/variables.html",[6,2.961,7,4.051,8,0.247,15,3.48,29,0.499,30,1.485,34,0.02,36,0.247,41,1.489,42,0.908,67,2.284,75,2.759,76,2.759,77,2.759,78,2.759,80,2.759,81,2.759,82,2.759,83,3.48,84,2.759,85,3.48,86,3.48,87,3.48,111,1.647,112,3.895,113,3.48,114,3.48,115,3.48,116,3.48,117,3.48,118,3.48,119,3.48,120,3.48,121,3.48,122,3.48,123,3.48,124,3.48,125,3.48,126,3.48,129,2.426,136,1.431,209,3.895,210,3.48,211,3.895,212,3.48,231,0.016,232,0.016,648,1.485,903,3.362,1524,5.663,1774,3.835,1777,5.251,1809,2.961,1813,4.309,1815,5.663,1816,5.251,1879,4.309,1880,6.129,1881,5.03,1882,5.03,1883,5.03,1884,5.03,1885,5.03,1886,5.03]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["0.11.4",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["0.12.4",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":139,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["1\">es",{"_index":1101,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["1.19.0",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1878,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1502,"title":{},"body":{"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["104px",{"_index":1569,"title":{},"body":{"components/TableComponent.html":{}}}],["12",{"_index":1760,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["12.2.9",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1830,"title":{},"body":{"index.html":{}}}],["14px",{"_index":843,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["15",{"_index":1877,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1765,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["17",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1282,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["2.0.8",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["2/32",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":850,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["3",{"_index":1574,"title":{},"body":{"components/TextInputComponent.html":{},"overview.html":{}}}],["3/17",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":836,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["350px",{"_index":1083,"title":{},"body":{"injectables/DialogService.html":{}}}],["4.17.1",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1461,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["520px",{"_index":1563,"title":{},"body":{"components/TableComponent.html":{}}}],["560px",{"_index":1565,"title":{},"body":{"components/TableComponent.html":{}}}],["5px",{"_index":1560,"title":{},"body":{"components/TableComponent.html":{}}}],["6",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":837,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["7",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":166,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["8px",{"_index":1567,"title":{},"body":{"components/TableComponent.html":{}}}],["_",{"_index":162,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_blank",{"_index":173,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_filter",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_isloggedin",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_options",{"_index":11,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_path",{"_index":1590,"title":{},"body":{"injectables/TranslationService.html":{}}}],["accessors",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{}}}],["according",{"_index":60,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["action",{"_index":1336,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["actionresp",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actionresp.hasownproperty('actions",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actions",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":646,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["adapter",{"_index":1208,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["add",{"_index":1340,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["additional",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["addtxtfile",{"_index":1593,"title":{},"body":{"injectables/TranslationService.html":{}}}],["addtxtfile(path",{"_index":1602,"title":{},"body":{"injectables/TranslationService.html":{}}}],["adduser",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(url",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles(url",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserres.id",{"_index":1729,"title":{},"body":{"injectables/UserService.html":{}}}],["afterdialogcallback",{"_index":1055,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterdialogcallback(result",{"_index":1076,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterviewinit",{"_index":1313,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["age",{"_index":1281,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["align",{"_index":832,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["allactionswithduplicates",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["allowed",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedactions",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["already",{"_index":1723,"title":{},"body":{"injectables/UserService.html":{}}}],["anderen",{"_index":1286,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["angular",{"_index":1825,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1312,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/common",{"_index":1211,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":751,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["angular/common/locales/de",{"_index":1213,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/compiler",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["angular/forms",{"_index":530,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1207,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1171,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/button",{"_index":1183,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/card",{"_index":1193,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/checkbox",{"_index":1175,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/core",{"_index":1023,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["angular/material/datepicker",{"_index":1173,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/dialog",{"_index":814,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["angular/material/expansion",{"_index":1185,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/form",{"_index":1163,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/grid",{"_index":1187,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/icon",{"_index":1161,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/input",{"_index":1165,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/list",{"_index":1167,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/paginator",{"_index":1224,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/radio",{"_index":1189,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/select",{"_index":1169,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sidenav",{"_index":1159,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slide",{"_index":1228,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slider",{"_index":1226,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sort",{"_index":1222,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/stepper",{"_index":1177,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/table",{"_index":1220,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/tooltip",{"_index":1179,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/tree",{"_index":1181,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/platform",{"_index":1154,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["angularcsv",{"_index":1,"title":{"classes/AngularCsv.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["angularcsv(tmpdata",{"_index":1450,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angularcsv.isfloat(data",{"_index":200,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["angularformbuilder",{"_index":1822,"title":{},"body":{"index.html":{}}}],["api",{"_index":896,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["apibaseurl",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["apiendpoint",{"_index":1243,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["app",{"_index":418,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["appdata",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["appdata[page",{"_index":781,"title":{},"body":{"injectables/ConfigService.html":{}}}],["application",{"_index":1832,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":904,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["applyfilter",{"_index":1504,"title":{},"body":{"components/TableComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1361,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["array",{"_index":45,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["array.from(new",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["array.isarray(this.data.errormsg",{"_index":1093,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["array.isarray(this.data.infomsg",{"_index":1454,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["array.isarray(value",{"_index":956,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["artifacts",{"_index":1867,"title":{},"body":{"index.html":{}}}],["assign",{"_index":225,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["asyncvalidatorfn",{"_index":1253,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["auf",{"_index":1285,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["aufgetreten",{"_index":1100,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["authentication",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":234,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["auto",{"_index":1500,"title":{},"body":{"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete",{"_index":439,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete'},{'name",{"_index":616,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["autocompletecomponent",{"_index":615,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1855,"title":{},"body":{"index.html":{}}}],["autosearch",{"_index":401,"title":{"classes/AutoSearch.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["availableactions",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["availableactions.indexof(systemaction",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["base",{"_index":419,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent",{"_index":408,"title":{"components/BaseFieldComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basefieldcomponent:103",{"_index":691,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:14",{"_index":698,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:15",{"_index":693,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{}}}],["basefieldcomponent:158",{"_index":689,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:16",{"_index":694,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:162",{"_index":687,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:166",{"_index":692,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:17",{"_index":695,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:18",{"_index":1021,"title":{},"body":{"components/DateInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:19",{"_index":1475,"title":{},"body":{"components/SelectComponent.html":{}}}],["basefieldcomponent:192",{"_index":688,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:196",{"_index":685,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:199",{"_index":690,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:20",{"_index":1022,"title":{},"body":{"components/DateInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:21",{"_index":1112,"title":{},"body":{"components/FileInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:22",{"_index":682,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:25",{"_index":676,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:27",{"_index":681,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:28",{"_index":677,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:29",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:30",{"_index":675,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:31",{"_index":673,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:32",{"_index":674,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:33",{"_index":672,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:34",{"_index":678,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:35",{"_index":665,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:36",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:37",{"_index":667,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:38",{"_index":666,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:39",{"_index":679,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:40",{"_index":669,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:41",{"_index":671,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:42",{"_index":670,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:43",{"_index":680,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:44",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:45",{"_index":668,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:46",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:49",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:50",{"_index":697,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:51",{"_index":696,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:59",{"_index":683,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:63",{"_index":684,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:76",{"_index":686,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basic",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{}}}],["basierend",{"_index":1284,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["before",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["behaviorsubject",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataStoreService.html":{}}}],["behaviorsubject(true",{"_index":1001,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["bitte",{"_index":1478,"title":{},"body":{"components/SelectComponent.html":{}}}],["bkuuser",{"_index":1722,"title":{},"body":{"injectables/UserService.html":{}}}],["bla",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["blob",{"_index":155,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blob([this.csv",{"_index":157,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blur",{"_index":1264,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["body",{"_index":57,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["body).pipe",{"_index":920,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["bom",{"_index":91,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["boolean(input",{"_index":138,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["bootstrap",{"_index":1147,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["bottom",{"_index":1559,"title":{},"body":{"components/TableComponent.html":{}}}],["break",{"_index":1105,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["browse",{"_index":1875,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1155,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1157,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browseranimationsmodule",{"_index":1156,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browsermodule",{"_index":1153,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["btn",{"_index":608,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["btoa(credentials",{"_index":1709,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["buildfiletree",{"_index":711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildfiletree(obj",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree(config",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buttons",{"_index":1337,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["c",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["calc(100",{"_index":1562,"title":{},"body":{"components/TableComponent.html":{}}}],["called",{"_index":223,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["case",{"_index":1409,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["categories",{"_index":901,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["center",{"_index":834,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["change",{"_index":440,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["changes",{"_index":1535,"title":{},"body":{"components/TableComponent.html":{}}}],["changes.data.currentvalue",{"_index":1415,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["changes['data",{"_index":1414,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["check",{"_index":70,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["checkbox",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox'},{'name",{"_index":619,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["checkbox.component.html",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":618,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkifuserisalreadyloggedin",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkkey",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkkey(ts",{"_index":1816,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["children",{"_index":403,"title":{},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/MenuNode.html":{}}}],["children.push(value.name",{"_index":769,"title":{},"body":{"injectables/ConfigService.html":{}}}],["choose",{"_index":1127,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"overview.html":{}}}],["classes/angular",{"_index":1320,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["classes/field",{"_index":699,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["clear",{"_index":1379,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["cli",{"_index":1826,"title":{},"body":{"index.html":{}}}],["cluster_formbuildermodule",{"_index":1136,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_bootstrap",{"_index":1137,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["cluster_formbuildermodule_declarations",{"_index":1138,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_exports",{"_index":1139,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["code",{"_index":1863,"title":{},"body":{"index.html":{}}}],["codetables",{"_index":1341,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumn.collumnkey",{"_index":1550,"title":{},"body":{"components/TableComponent.html":{}}}],["collumn.collumnname",{"_index":1551,"title":{},"body":{"components/TableComponent.html":{}}}],["collumnkey",{"_index":1308,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnname",{"_index":1309,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnstobedisplayed",{"_index":1348,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["color",{"_index":1484,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["column",{"_index":1568,"title":{},"body":{"components/TableComponent.html":{}}}],["column.collumnname",{"_index":1396,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnname",{"_index":1432,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames",{"_index":1443,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames.filter((el",{"_index":1444,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns",{"_index":1440,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns.filter((el",{"_index":1441,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["colums",{"_index":1528,"title":{},"body":{"components/TableComponent.html":{}}}],["command",{"_index":1848,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1210,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["component",{"_index":407,"title":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":614,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["components",{"_index":409,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"overview.html":{}}}],["components/autocomplete/autocomplete.component",{"_index":1200,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/autocomplete/autocomplete.component.ts",{"_index":1774,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component",{"_index":1201,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":649,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:13",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":1007,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/confirm",{"_index":793,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/error",{"_index":1067,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/info",{"_index":1070,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["components/file",{"_index":1107,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component",{"_index":1202,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/radiobutton/radiobutton.component.ts",{"_index":1462,"title":{},"body":{"components/RadiobuttonComponent.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component.ts:14",{"_index":1466,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["components/select/select.component",{"_index":1196,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/select/select.component.ts",{"_index":1471,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:17",{"_index":1474,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/slider/slider.component",{"_index":1203,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slider/slider.component.ts",{"_index":1487,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["components/slider/slider.component.ts:14",{"_index":1492,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slider/slider.component.ts:30",{"_index":1493,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slidetoggle/slidetoggle.component",{"_index":1230,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slidetoggle/slidetoggle.component.ts",{"_index":1480,"title":{},"body":{"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:14",{"_index":1485,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/table/table.component",{"_index":1218,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["components/table/table.component.ts",{"_index":1307,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/table/table.component.ts:116",{"_index":1533,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:132",{"_index":1534,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:146",{"_index":1540,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:151",{"_index":1539,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:155",{"_index":1537,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:160",{"_index":1538,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:166",{"_index":1526,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:179",{"_index":1527,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:195",{"_index":1530,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:211",{"_index":1541,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:215",{"_index":1525,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:58",{"_index":1547,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:59",{"_index":1542,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:60",{"_index":1544,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:61",{"_index":1519,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:62",{"_index":1546,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:63",{"_index":1543,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:64",{"_index":1517,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:65",{"_index":1518,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:66",{"_index":1516,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:67",{"_index":1545,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:68",{"_index":1548,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:69",{"_index":1522,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:70",{"_index":1521,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:71",{"_index":1520,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:72",{"_index":1515,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:79",{"_index":1523,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:85",{"_index":1531,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:92",{"_index":1532,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:98",{"_index":1536,"title":{},"body":{"components/TableComponent.html":{}}}],["components/text",{"_index":1197,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["config",{"_index":127,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["config.disabled",{"_index":571,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hint",{"_index":561,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hintlabel",{"_index":563,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute",{"_index":587,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute.autocomplete",{"_index":588,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmltype",{"_index":584,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.icon",{"_index":586,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.name",{"_index":564,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators",{"_index":570,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.max",{"_index":575,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.maxlength",{"_index":579,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.min",{"_index":577,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.minlength",{"_index":581,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.required",{"_index":572,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.value",{"_index":582,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config[page",{"_index":761,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[page][formn",{"_index":762,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configdefaults",{"_index":112,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":705,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["configurable",{"_index":1338,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["confirm",{"_index":621,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["confirm(messagestring",{"_index":1046,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmdialogcomponent",{"_index":620,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connector.service.ts",{"_index":869,"title":{},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["connector.service.ts:17",{"_index":876,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:23",{"_index":879,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:31",{"_index":895,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:42",{"_index":888,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:69",{"_index":882,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:79",{"_index":891,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:83",{"_index":893,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:87",{"_index":884,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:91",{"_index":890,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["console.log(\"newtree",{"_index":773,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log('[authenticationservice",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('csv",{"_index":1451,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log('invalid",{"_index":153,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["console.log('saveallowedactions",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('saveuserprofile",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(`${key",{"_index":767,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(columnname",{"_index":1434,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(columns",{"_index":1446,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(config",{"_index":757,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(data",{"_index":1433,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(e",{"_index":1122,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(form",{"_index":764,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(key",{"_index":1585,"title":{},"body":{"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["console.log(langpath",{"_index":1632,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(messagestring",{"_index":1079,"title":{},"body":{"injectables/DialogService.html":{}}}],["console.log(reader",{"_index":1126,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.control",{"_index":554,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/FileInputComponent.html":{}}}],["console.log(this.field",{"_index":551,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.field.config",{"_index":1496,"title":{},"body":{"components/SliderComponent.html":{}}}],["console.log(this.flatcontrolls",{"_index":756,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(this.form",{"_index":1114,"title":{},"body":{"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["console.log(this.message",{"_index":823,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["console.log(this.name",{"_index":552,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/FileInputComponent.html":{}}}],["console.log(this.options",{"_index":1467,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["console.log(this.required",{"_index":573,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.translate.data",{"_index":1587,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(tmpdata",{"_index":1448,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(translation",{"_index":1635,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(type",{"_index":541,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(value",{"_index":777,"title":{},"body":{"injectables/ConfigService.html":{}}}],["const",{"_index":111,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":801,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["constructor(datajson",{"_index":28,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["constructor(dialog",{"_index":1043,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{}}}],["constructor(fb",{"_index":459,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(http",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DialogService.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["constructor(public",{"_index":700,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(router",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["content",{"_index":830,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/searchObj.html":{}}}],["content#confirm",{"_index":845,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["content#error",{"_index":1106,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["content#info",{"_index":1460,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["control",{"_index":441,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["convet",{"_index":213,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["cookie",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["coverage",{"_index":1740,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":56,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{}}}],["create(post",{"_index":877,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["credentials",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{}}}],["csv",{"_index":12,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["csv.ts",{"_index":7,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["csv.ts:142",{"_index":66,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:156",{"_index":64,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:170",{"_index":59,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:19",{"_index":866,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:191",{"_index":55,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:20",{"_index":851,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:218",{"_index":48,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:22",{"_index":853,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:23",{"_index":852,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:24",{"_index":859,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:25",{"_index":861,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:258",{"_index":63,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:26",{"_index":862,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:27",{"_index":854,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:28",{"_index":860,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:29",{"_index":863,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:30",{"_index":855,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:31",{"_index":858,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:32",{"_index":865,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:33",{"_index":864,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:34",{"_index":856,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:35",{"_index":857,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:56",{"_index":44,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:57",{"_index":46,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:58",{"_index":43,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:60",{"_index":40,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:61",{"_index":32,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:81",{"_index":69,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:88",{"_index":52,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csvconfigconsts",{"_index":88,"title":{"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["csvconfigconsts.bom",{"_index":142,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvconfigconsts.default_decimal_separator",{"_index":116,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_field_separator",{"_index":114,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_filename",{"_index":113,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_header",{"_index":121,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_no_download",{"_index":125,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_null_to_empty_string",{"_index":126,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_obj_header",{"_index":122,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_quote",{"_index":115,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_labels",{"_index":117,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_title",{"_index":118,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_title",{"_index":119,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_bom",{"_index":120,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_header",{"_index":124,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_obj_header",{"_index":123,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.eol",{"_index":186,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvexport",{"_index":1505,"title":{},"body":{"components/TableComponent.html":{}}}],["current",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdepth",{"_index":951,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["currently",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuser",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["currentuserroles",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuserroles.indexof(systemrole",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentvalue",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["customfilterbasedondisplaycolumns",{"_index":1506,"title":{},"body":{"components/TableComponent.html":{}}}],["customfilterbasedondisplaycolumns(data",{"_index":1431,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["customvalidation",{"_index":442,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["d",{"_index":1034,"title":{},"body":{"components/DateInputComponent.html":{}}}],["data",{"_index":14,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["data.indexof",{"_index":205,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\n",{"_index":206,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\r",{"_index":207,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.replace(/\"/g",{"_index":203,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tolocalestring",{"_index":201,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tostring().replace",{"_index":202,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data:attachment/csv;charset=utf",{"_index":165,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data[columnname",{"_index":1435,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[columnname].tostring().trim().tolowercase().indexof(filter.tolowercase",{"_index":1436,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[page][form][key",{"_index":789,"title":{},"body":{"injectables/ConfigService.html":{}}}],["datachange",{"_index":708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataconnectorservice",{"_index":867,"title":{"injectables/DataConnectorService.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["dataflattnerservice",{"_index":748,"title":{"injectables/DataFlattnerService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["dataflattnerservice.flatten(tmpdata",{"_index":772,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataflattnerservice.isbuffer(value",{"_index":958,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataflattnerservice.unflatten(target[key",{"_index":978,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataimporterrors",{"_index":1073,"title":{},"body":{"injectables/DialogService.html":{}}}],["datajson",{"_index":38,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["datasource",{"_index":1350,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datastore",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["datastoreservice",{"_index":257,"title":{"injectables/DataStoreService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["date",{"_index":624,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["date.patchvalue(moment(date.value",{"_index":1029,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter",{"_index":1015,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["dateadapter.setlocale(lang",{"_index":1027,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(ts.lang",{"_index":1025,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateinputcomponent",{"_index":623,"title":{"components/DateInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datestringtodatefilter",{"_index":1330,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["de",{"_index":1031,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["de'}.json",{"_index":1631,"title":{},"body":{"injectables/TranslationService.html":{}}}],["debug=express",{"_index":1843,"title":{},"body":{"index.html":{}}}],["decimalseparator",{"_index":77,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1145,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["decorators",{"_index":806,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default_decimal_separator",{"_index":94,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_field_separator",{"_index":93,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_filename",{"_index":100,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_header",{"_index":105,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_no_download",{"_index":109,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_null_to_empty_string",{"_index":110,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_obj_header",{"_index":106,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_quote",{"_index":95,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_labels",{"_index":102,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_title",{"_index":96,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_title",{"_index":98,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_bom",{"_index":103,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_header",{"_index":108,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_obj_header",{"_index":107,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":870,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"interfaces/searchObj.html":{}}}],["delete(id",{"_index":881,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["delete_forever",{"_index":1553,"title":{},"body":{"components/TableComponent.html":{}}}],["deletebulk",{"_index":1360,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["deletefield",{"_index":871,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["deletefield(id",{"_index":883,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["deletekeys",{"_index":1594,"title":{},"body":{"injectables/TranslationService.html":{}}}],["deletekeys(data",{"_index":1605,"title":{},"body":{"injectables/TranslationService.html":{}}}],["deleteuser",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(url",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["delimiter",{"_index":943,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dependencies",{"_index":1135,"title":{"dependencies.html":{}},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":1236,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/AngularCsv.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1852,"title":{},"body":{"index.html":{}}}],["development",{"_index":1851,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":627,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["dialog'},{'name",{"_index":622,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dialog.component",{"_index":1066,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["dialog.component.html",{"_index":797,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.less",{"_index":796,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":795,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":811,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":809,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":804,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":808,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":805,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.service",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["dialog/confirm",{"_index":794,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["dialog_content",{"_index":846,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_message",{"_index":840,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_title",{"_index":826,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogdata",{"_index":1072,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":802,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogref.afterclosed().subscribe((result:any",{"_index":1075,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogservice",{"_index":1036,"title":{"injectables/DialogService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["difference",{"_index":1770,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["difference(newobj",{"_index":1817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":1557,"title":{},"body":{"components/TableComponent.html":{}}}],["directive",{"_index":612,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directives",{"_index":645,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1866,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1869,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":443,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["display",{"_index":827,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["displayedcolumns",{"_index":1353,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["dist",{"_index":1868,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(link",{"_index":177,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.body.removechild(link",{"_index":179,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.createelement('a",{"_index":169,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.queryselector('#file",{"_index":1116,"title":{},"body":{"components/FileInputComponent.html":{}}}],["documentation",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":410,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["done",{"_index":1725,"title":{},"body":{"injectables/UserService.html":{}}}],["done.next(updateroleresp",{"_index":1732,"title":{},"body":{"injectables/UserService.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1121,"title":{},"body":{"components/FileInputComponent.html":{}}}],["e.target.result",{"_index":1124,"title":{},"body":{"components/FileInputComponent.html":{}}}],["edit",{"_index":1359,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["edituser",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(url",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles(url",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["eg",{"_index":1339,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ein",{"_index":1098,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["el",{"_index":1445,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["el.collumnname",{"_index":1442,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["element",{"_index":611,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["element[collumn.collumnname",{"_index":1552,"title":{},"body":{"components/TableComponent.html":{}}}],["elements",{"_index":1368,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["email",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["emptyobj",{"_index":709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["encodeuri(this.csv",{"_index":167,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["entitytype",{"_index":1290,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entitäten",{"_index":1287,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entries",{"_index":758,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entries.push(tmpdata",{"_index":771,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entriesperpage",{"_index":1244,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["entry",{"_index":1342,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enum",{"_index":1321,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enumerations",{"_index":1810,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eol",{"_index":89,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["errobj",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error",{"_index":534,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["errordataarray",{"_index":1057,"title":{},"body":{"injectables/DialogService.html":{}}}],["errordialogsimplecomponent",{"_index":626,"title":{"components/ErrorDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormsg",{"_index":798,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["es",{"_index":1096,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["event",{"_index":1269,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["event.target",{"_index":1363,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["eventemitter",{"_index":465,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["exists",{"_index":1724,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":73,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["exports",{"_index":1146,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["express",{"_index":1796,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":650,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["false",{"_index":97,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["fb",{"_index":422,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["fbapp",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fehler",{"_index":1099,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["field",{"_index":420,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["field'},{'name",{"_index":617,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["fieldseparator",{"_index":75,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fieldtocheck",{"_index":1270,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["fieldtoupdate",{"_index":1271,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/searchObj.html":{}}}],["fileinputcomponent",{"_index":629,"title":{"components/FileInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":15,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["filereader",{"_index":1117,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":1857,"title":{},"body":{"index.html":{}}}],["filter",{"_index":754,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtercontrol",{"_index":1352,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtereddatasource",{"_index":1427,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtervalue",{"_index":1524,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fixme",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["flag",{"_index":1871,"title":{},"body":{"index.html":{}}}],["flatcontrolls",{"_index":710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["flatten",{"_index":924,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flatten(target",{"_index":929,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flattner.service",{"_index":749,"title":{},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{}}}],["flattner.service.ts",{"_index":923,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["flattner.service.ts:10",{"_index":928,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:15",{"_index":936,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:26",{"_index":933,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:3",{"_index":1294,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["flattner.service.ts:31",{"_index":931,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:66",{"_index":939,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flex",{"_index":828,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["float",{"_index":71,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["focus",{"_index":1274,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["font",{"_index":841,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["for(const",{"_index":1640,"title":{},"body":{"injectables/TranslationService.html":{}}}],["foreignfieldcheck",{"_index":1283,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["forkjoin",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["forkjoin(this.edituser(url",{"_index":1735,"title":{},"body":{"injectables/UserService.html":{}}}],["form",{"_index":444,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["form[key",{"_index":785,"title":{},"body":{"injectables/ConfigService.html":{}}}],["format",{"_index":49,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formatdata",{"_index":18,"title":{},"body":{"classes/AngularCsv.html":{}}}],["formatdata(data",{"_index":47,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formbuilder",{"_index":460,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["formbuilder'},{'name",{"_index":632,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder.component",{"_index":1152,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["formbuilderapp",{"_index":1850,"title":{},"body":{"index.html":{}}}],["formbuildercomponent",{"_index":630,"title":{"components/FormbuilderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formbuildermodule",{"_index":1133,"title":{"modules/FormbuilderModule.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["formbuilderservice",{"_index":1237,"title":{"injectables/FormbuilderService.html":{}},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["formbuilderui",{"_index":1849,"title":{},"body":{"index.html":{}}}],["formcontrol",{"_index":467,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formgroup",{"_index":472,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["formn",{"_index":760,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formobj",{"_index":780,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formobj[form",{"_index":783,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formservice",{"_index":461,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["forroot",{"_index":1148,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["found",{"_index":1651,"title":{},"body":{"injectables/TranslationService.html":{}}}],["fs",{"_index":423,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["function",{"_index":215,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["functions",{"_index":1812,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":161,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generate",{"_index":53,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"index.html":{}}}],["generatecsv",{"_index":19,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generated",{"_index":1824,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1858,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1333,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["generic",{"_index":1323,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["get(itemtype",{"_index":885,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["get_app",{"_index":1554,"title":{},"body":{"components/TableComponent.html":{}}}],["getallowedactions",{"_index":981,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getappconfigs",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getappconfigs(appdata",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getasyncvalidation",{"_index":872,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["getasyncvalidation(url",{"_index":889,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getbody",{"_index":20,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getbodyaccordingheader",{"_index":21,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getconfigbyname",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfigbyname(name",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontrolls",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcsvdata",{"_index":22,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcurrentuser",{"_index":982,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getdata",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdisplaydata",{"_index":1507,"title":{},"body":{"components/TableComponent.html":{}}}],["getdisplaydata(colums",{"_index":1437,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["getdisplayrepresentation",{"_index":1343,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["geterrormeesage",{"_index":428,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfbconfig",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getfbconfig(appdata",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getfbdata",{"_index":1595,"title":{},"body":{"injectables/TranslationService.html":{}}}],["getfieldconfig",{"_index":429,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfields",{"_index":873,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getfiltereddisplaydata",{"_index":1508,"title":{},"body":{"components/TableComponent.html":{}}}],["getfiltereddisplaydata(colums",{"_index":1529,"title":{},"body":{"components/TableComponent.html":{}}}],["getflatcontrolls",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getform",{"_index":1297,"title":{},"body":{"interfaces/IForm.html":{}}}],["getform(name",{"_index":1298,"title":{},"body":{"interfaces/IForm.html":{}}}],["getheaderfromobj",{"_index":23,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getheaders",{"_index":24,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getisloggedin",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getkey(split.shift",{"_index":968,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getkey(split[0",{"_index":970,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getmeesage",{"_index":430,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getmeesage(type",{"_index":498,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname",{"_index":431,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname()+'#label",{"_index":1468,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getname()+\\'#label",{"_index":1470,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getnavbarstate",{"_index":983,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["gets",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["gettickintervall",{"_index":1491,"title":{},"body":{"components/SliderComponent.html":{}}}],["getting",{"_index":1820,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(url",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseractions",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserdata",{"_index":1596,"title":{},"body":{"injectables/TranslationService.html":{}}}],["getuserprofile",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserprofile(url",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserroles",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserroles(url",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers(url",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalidators",{"_index":432,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getvalue",{"_index":433,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["groupby",{"_index":1245,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["h2",{"_index":838,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["hammerjs",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["handlesessiontimeout",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasavailableaction(systemresource",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasownproperty",{"_index":209,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasrole(systemrole",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["header",{"_index":62,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["header.collumnkey",{"_index":1438,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["header.collumnname",{"_index":1393,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["headerrow",{"_index":183,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["headers",{"_index":67,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["headers.reduce((headerrow",{"_index":182,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["height",{"_index":1459,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["helps",{"_index":1332,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["hidden",{"_index":175,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["hint",{"_index":445,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["hintlabel",{"_index":446,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["his.loadallowedactions",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["home_ui_new",{"_index":487,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["html",{"_index":610,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlattribute",{"_index":447,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1364,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["htmltype",{"_index":448,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["http",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["http://localhost:4200",{"_index":1854,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["httpclientmodule",{"_index":1194,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["httpheaders",{"_index":897,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["iautocompleteoption",{"_index":1257,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["iautocompleteoptions",{"_index":1240,"title":{"interfaces/IAutoCompleteOptions.html":{}},"body":{"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["icodeentry",{"_index":1250,"title":{"interfaces/ICodeEntry.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["icon",{"_index":799,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["iconact",{"_index":434,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconaction",{"_index":449,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconbtn",{"_index":450,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["icustom",{"_index":1252,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["icustomvalidation",{"_index":469,"title":{"interfaces/ICustomValidation.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["id",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["identifier",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["idialogconfig",{"_index":1273,"title":{"interfaces/IDialogConfig.html":{}},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["if(!found",{"_index":1654,"title":{},"body":{"injectables/TranslationService.html":{}}}],["if(!moment.ismoment(date.value",{"_index":1028,"title":{},"body":{"components/DateInputComponent.html":{}}}],["if(!this.config",{"_index":1494,"title":{},"body":{"components/SliderComponent.html":{}}}],["if(!this.configs[page",{"_index":792,"title":{},"body":{"injectables/ConfigService.html":{}}}],["if(!this.userdata[key",{"_index":1656,"title":{},"body":{"injectables/TranslationService.html":{}}}],["if(key",{"_index":1586,"title":{},"body":{"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["if(this.configs[page",{"_index":786,"title":{},"body":{"injectables/ConfigService.html":{}}}],["if(this.field.disabled",{"_index":590,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.init",{"_index":555,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.msgerrors[type](param",{"_index":542,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.userdata",{"_index":1642,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ifield",{"_index":414,"title":{"interfaces/IField.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["iflatobject",{"_index":937,"title":{"interfaces/IFlatObject.html":{}},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["iform",{"_index":1295,"title":{"interfaces/IForm.html":{}},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["iformobj",{"_index":1266,"title":{"interfaces/IFormObj.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["ihtmlattributes",{"_index":476,"title":{"interfaces/IHTMLAttributes.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["implements",{"_index":413,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["import",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["important",{"_index":848,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["imports",{"_index":1232,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["included",{"_index":1860,"title":{},"body":{"index.html":{}}}],["incoorect",{"_index":906,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1293,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["infodialogsimplecomponent",{"_index":633,"title":{"components/InfoDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infomsg",{"_index":1062,"title":{},"body":{"injectables/DialogService.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["information",{"_index":1457,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["informations",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inherited",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["init",{"_index":424,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["initialcolumns",{"_index":1349,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["inject",{"_index":812,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["inject(mat_dialog_data",{"_index":807,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["injectable",{"_index":233,"title":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["injectables",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":72,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"interfaces/searchObj.html":{}}}],["input'},{'name",{"_index":625,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component",{"_index":1199,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["input.component.html",{"_index":1011,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.scss",{"_index":1010,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts",{"_index":1009,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":1575,"title":{},"body":{"components/TextInputComponent.html":{}}}],["input.component.ts:14",{"_index":1111,"title":{},"body":{"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:15",{"_index":1016,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input.component.ts:28",{"_index":1113,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:31",{"_index":1018,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input.component.ts:37",{"_index":1020,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input.component.ts:42",{"_index":1019,"title":{},"body":{"components/DateInputComponent.html":{}}}],["input/date",{"_index":1008,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/file",{"_index":1108,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/text",{"_index":1198,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["inputnode",{"_index":1115,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputnode.files[0",{"_index":1118,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputs",{"_index":438,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["insert",{"_index":917,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["insertfield",{"_index":874,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["insertfield(field",{"_index":892,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["install",{"_index":1835,"title":{},"body":{"index.html":{}}}],["int",{"_index":1288,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["interface",{"_index":74,"title":{"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/searchObj.html":{}},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["interfaces",{"_index":1241,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"overview.html":{},"interfaces/searchObj.html":{}}}],["interfaces/icustom",{"_index":527,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["interfaces/ifield",{"_index":526,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["interfaces/imenu",{"_index":750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interfaces/isliderconfig",{"_index":1486,"title":{},"body":{"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["interfaces/ivalidator",{"_index":529,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["internaltype",{"_index":1573,"title":{},"body":{"components/TextInputComponent.html":{}}}],["inverted",{"_index":1301,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["isallselected",{"_index":1372,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["isarray",{"_index":954,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer",{"_index":925,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer(obj",{"_index":932,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfinite(input",{"_index":137,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isflat",{"_index":926,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["isflat(object",{"_index":935,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfloat",{"_index":26,"title":{},"body":{"classes/AngularCsv.html":{}}}],["isfloat(input",{"_index":68,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isliderconfig",{"_index":1255,"title":{"interfaces/ISliderConfig.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"coverage.html":{}}}],["isloggedin",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isloggedin(value",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ismoment",{"_index":1012,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ismoment(date",{"_index":1017,"title":{},"body":{"components/DateInputComponent.html":{}}}],["isobject",{"_index":959,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["ist",{"_index":1097,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["itableheader",{"_index":1306,"title":{"interfaces/ITableHeader.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["itableviewoptions",{"_index":1256,"title":{"interfaces/ITableViewOptions.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["item",{"_index":903,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["item.error",{"_index":1103,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["item.info",{"_index":1458,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["item.key",{"_index":1469,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["item.name",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[property",{"_index":1412,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["items",{"_index":833,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["itemtype",{"_index":878,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["ivalidator",{"_index":492,"title":{"interfaces/IValidator.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["ja",{"_index":825,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["json",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(datajson",{"_index":130,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["json.parse(localstorage.getitem(this.user_allowed_actions",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.parse(res",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(actions",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(rolesobject",{"_index":1739,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":1721,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(userprofile",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":829,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["kat",{"_index":886,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["kat.length",{"_index":909,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["key",{"_index":765,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{}}}],["key.split(delimiter",{"_index":966,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key1",{"_index":967,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key2",{"_index":969,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{}}}],["keya.length",{"_index":962,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keyb.length",{"_index":963,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keydown",{"_index":1013,"title":{},"body":{"components/DateInputComponent.html":{}}}],["keytosave",{"_index":1249,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["keyup",{"_index":1014,"title":{},"body":{"components/DateInputComponent.html":{}}}],["l",{"_index":1030,"title":{},"body":{"components/DateInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["label",{"_index":594,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/SlideToggleComponent.html":{}}}],["labels",{"_index":16,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["lang",{"_index":1591,"title":{},"body":{"injectables/TranslationService.html":{}}}],["langpath",{"_index":1629,"title":{},"body":{"injectables/TranslationService.html":{}}}],["left",{"_index":847,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["legend",{"_index":609,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["level",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib",{"_index":631,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["libraries",{"_index":1862,"title":{},"body":{"index.html":{}}}],["line",{"_index":191,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["link",{"_index":168,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.click",{"_index":178,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.download",{"_index":176,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.href",{"_index":170,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('target",{"_index":172,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('visibility",{"_index":174,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["list",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["literal",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IAutoCompleteOptions.html":{}}}],["loadafterpercentscrolled",{"_index":1246,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["loadallowedactions",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loaduserprofile",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locale",{"_index":199,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["localede",{"_index":1212,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["locally",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem(this.bla",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.bla",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.user_allowed_actions",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.bla",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.user_allowed_actions",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lodash",{"_index":753,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["login",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["login(credentials",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{}}}],["login(loginurl",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpage",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginurl",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginurl).pipe",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["logout(navigatetologinpage",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout(url",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["long",{"_index":1561,"title":{},"body":{"components/TableComponent.html":{}}}],["löschen",{"_index":1556,"title":{},"body":{"components/TableComponent.html":{}}}],["main",{"_index":1837,"title":{},"body":{"index.html":{}}}],["make",{"_index":1335,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map",{"_index":899,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["map((column",{"_index":1397,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map(value",{"_index":921,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["margin",{"_index":839,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["mastertoggle",{"_index":1380,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mat",{"_index":844,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["mat_date_formats",{"_index":1191,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_date_locale",{"_index":1190,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_dialog_data",{"_index":813,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["mat_moment_date_formats",{"_index":1206,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matautocompletemodule",{"_index":1170,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matbuttonmodule",{"_index":1182,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcardmodule",{"_index":1192,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcheckboxmodule",{"_index":1174,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matches",{"_index":1369,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matching",{"_index":232,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1172,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdatepickerparse",{"_index":522,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["matdialog",{"_index":1044,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matdialogmodule",{"_index":1217,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdialogref",{"_index":803,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matexpansionmodule",{"_index":1184,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matformfieldmodule",{"_index":1162,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matgridlistmodule",{"_index":1186,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["maticonmodule",{"_index":1160,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matinputmodule",{"_index":1164,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matlistmodule",{"_index":1166,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matmomentdatemodule",{"_index":1204,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matpaginator",{"_index":1319,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matpaginatormodule",{"_index":1223,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matradiomodule",{"_index":1188,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matselectmodule",{"_index":1168,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsidenavmodule",{"_index":1158,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidermodule",{"_index":1225,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidetogglemodule",{"_index":1227,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsort",{"_index":1318,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matsortmodule",{"_index":1221,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsteppermodule",{"_index":1176,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattabledatasource",{"_index":1317,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mattablemodule",{"_index":1219,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattooltipmodule",{"_index":1178,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattreemodule",{"_index":1180,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["max",{"_index":451,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxdepth",{"_index":944,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["maxlength",{"_index":452,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["menunode",{"_index":406,"title":{"interfaces/MenuNode.html":{}},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["merge",{"_index":752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merge(data",{"_index":790,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":800,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagecode",{"_index":1289,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagestring",{"_index":1050,"title":{},"body":{"injectables/DialogService.html":{}}}],["metadata",{"_index":416,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":453,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minlength",{"_index":454,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["miscellaneous",{"_index":1809,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":1132,"title":{"modules/FormbuilderModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":1134,"title":{"modules.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{}}}],["moment",{"_index":1024,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"dependencies.html":{}}}],["moment(item[property",{"_index":1410,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["momentdateadapter",{"_index":1205,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["more",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ms",{"_index":1262,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["msg",{"_index":1291,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["msgerrors",{"_index":426,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mycsv.csv",{"_index":101,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name+'#label",{"_index":1501,"title":{},"body":{"components/SliderComponent.html":{}}}],["name+\\'#label",{"_index":1503,"title":{},"body":{"components/SliderComponent.html":{}}}],["names",{"_index":1846,"title":{},"body":{"index.html":{}}}],["navbarvisibility",{"_index":980,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["navigate",{"_index":1853,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigatetologinpage",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigator.mssaveblob",{"_index":159,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["navigator.mssaveblob(blob",{"_index":163,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["need",{"_index":1841,"title":{},"body":{"index.html":{}}}],["negativecallback",{"_index":1048,"title":{},"body":{"injectables/DialogService.html":{}}}],["nein",{"_index":824,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["new",{"_index":156,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["newdata",{"_index":1649,"title":{},"body":{"injectables/TranslationService.html":{}}}],["newkey",{"_index":960,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["newobj",{"_index":1819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["newvalidators",{"_index":595,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.email",{"_index":604,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.max",{"_index":597,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.maxlength",{"_index":599,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.min",{"_index":598,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.minlength",{"_index":600,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.pattern",{"_index":602,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.required",{"_index":596,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["next",{"_index":190,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["ng",{"_index":1847,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1400,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngmodule",{"_index":1150,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["ngonchanges",{"_index":1509,"title":{},"body":{"components/TableComponent.html":{}}}],["ngonchanges(changes",{"_index":1413,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngoninit",{"_index":435,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["noaction",{"_index":1275,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["node",{"_index":778,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["node.name",{"_index":779,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodejs",{"_index":1829,"title":{},"body":{"index.html":{}}}],["nodownload",{"_index":84,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":1839,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1834,"title":{},"body":{"index.html":{}}}],["null",{"_index":218,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["nulltoemptystring",{"_index":87,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":482,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["numrows",{"_index":1375,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["numselected",{"_index":1373,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["obj",{"_index":61,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["obj.constructor",{"_index":940,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer",{"_index":941,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer(obj",{"_index":942,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj[key",{"_index":776,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object",{"_index":65,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object(val",{"_index":224,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.assign",{"_index":222,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{}}}],["object.assign(newdata",{"_index":1655,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.assign(this.data",{"_index":1647,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.assign(txtfile",{"_index":1643,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(data",{"_index":1653,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(form",{"_index":766,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.entries(this.data",{"_index":1650,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.keys(actions).length",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object.keys(appdata).foreach(page",{"_index":791,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(form).foreach(key",{"_index":784,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(formobj).foreach(form",{"_index":782,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(obj).reduce((accumulator",{"_index":775,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(object).foreach((key",{"_index":952,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.keys(this._options.objheader).foreach(key",{"_index":187,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(this._options.objheader).length",{"_index":147,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(value).length",{"_index":961,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.hasownproperty",{"_index":210,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.propertyisenumerable",{"_index":212,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.tostring.call(recipient[key1",{"_index":973,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.tostring.call(value",{"_index":957,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.values(roles",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object[key",{"_index":953,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["objectassign",{"_index":132,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectassign(target",{"_index":227,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["objheader",{"_index":83,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":1710,"title":{},"body":{"injectables/UserService.html":{}}}],["ok",{"_index":1102,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["okaction",{"_index":1292,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["oncancel",{"_index":1276,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["onchanges",{"_index":1314,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onclose",{"_index":1277,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["ondatachange",{"_index":1623,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ondeleterecord",{"_index":1510,"title":{},"body":{"components/TableComponent.html":{}}}],["ondeleterecord(row",{"_index":1424,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondeleteselectedrecords",{"_index":1426,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondownload",{"_index":1511,"title":{},"body":{"components/TableComponent.html":{}}}],["ondownload(row",{"_index":1422,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onedit",{"_index":1512,"title":{},"body":{"components/TableComponent.html":{}}}],["onedit(row",{"_index":1420,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onfileselected",{"_index":1109,"title":{},"body":{"components/FileInputComponent.html":{}}}],["oninit",{"_index":415,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["onlangchange",{"_index":1622,"title":{},"body":{"injectables/TranslationService.html":{}}}],["operator",{"_index":1272,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["opt",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter(item",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt[0",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["options",{"_index":30,"title":{"interfaces/Options.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["opts",{"_index":930,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.delimiter",{"_index":946,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.maxdepth",{"_index":947,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.object",{"_index":976,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.safe",{"_index":955,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["origobj",{"_index":1818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1378,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["out",{"_index":1143,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["output",{"_index":948,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["outputs",{"_index":1514,"title":{},"body":{"components/TableComponent.html":{}}}],["overview",{"_index":1876,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":974,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["package",{"_index":1785,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":835,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["page",{"_index":759,"title":{},"body":{"injectables/ConfigService.html":{}}}],["paginator",{"_index":1356,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["param",{"_index":135,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.max",{"_index":515,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.min",{"_index":517,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredlength",{"_index":513,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredpattern",{"_index":520,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":912,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["parser",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["path",{"_index":1604,"title":{},"body":{"injectables/TranslationService.html":{}}}],["path}${this.lang",{"_index":1630,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pattern",{"_index":518,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pipe",{"_index":1576,"title":{"pipes/TranslatePipe.html":{}},"body":{"pipes/TranslatePipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1577,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["pipetransform",{"_index":1582,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["placeholder",{"_index":455,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["position",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["positivecallback",{"_index":1047,"title":{},"body":{"injectables/DialogService.html":{}}}],["positivecallback(result",{"_index":1081,"title":{},"body":{"injectables/DialogService.html":{}}}],["post",{"_index":880,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["prefer",{"_index":192,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["prefix",{"_index":1621,"title":{},"body":{"injectables/TranslationService.html":{}}}],["prev",{"_index":950,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["previousvalue.concat(currentvalue",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1870,"title":{},"body":{"index.html":{}}}],["production",{"_index":1872,"title":{},"body":{"index.html":{}}}],["profile",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["project",{"_index":1823,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1845,"title":{},"body":{"index.html":{}}}],["projects/.../angular",{"_index":1815,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../autocomplete.component.ts",{"_index":1813,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form.service.ts",{"_index":1814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../table.component.ts",{"_index":1811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/formbuilder/src/lib/classes/angular",{"_index":6,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts",{"_index":412,"title":{},"body":{"components/BaseFieldComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:103",{"_index":506,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:14",{"_index":524,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:158",{"_index":502,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:162",{"_index":500,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:166",{"_index":507,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:192",{"_index":501,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:196",{"_index":497,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:199",{"_index":503,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:25",{"_index":488,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:27",{"_index":494,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:28",{"_index":489,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:29",{"_index":471,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:30",{"_index":486,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:31",{"_index":484,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:32",{"_index":485,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:33",{"_index":483,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:34",{"_index":490,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:35",{"_index":473,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:36",{"_index":468,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:37",{"_index":475,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:38",{"_index":474,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:39",{"_index":491,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:40",{"_index":479,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:41",{"_index":481,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:42",{"_index":480,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:43",{"_index":493,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:44",{"_index":470,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:45",{"_index":477,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:46",{"_index":464,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:49",{"_index":466,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:50",{"_index":510,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:51",{"_index":463,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:54",{"_index":508,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:55",{"_index":509,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:56",{"_index":525,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:59",{"_index":495,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:63",{"_index":496,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:76",{"_index":499,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:83",{"_index":504,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts",{"_index":1128,"title":{},"body":{"components/FormbuilderComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:13",{"_index":1130,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:17",{"_index":1131,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts",{"_index":1144,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts:131",{"_index":1149,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts",{"_index":1238,"title":{},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts:6",{"_index":1239,"title":{},"body":{"injectables/FormbuilderService.html":{}}}],["projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts",{"_index":1242,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/icustom",{"_index":1267,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ifield.ts",{"_index":1251,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts",{"_index":1296,"title":{},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts:8",{"_index":1299,"title":{},"body":{"interfaces/IForm.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts",{"_index":402,"title":{},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:7",{"_index":405,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:8",{"_index":404,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/isliderconfig.ts",{"_index":1300,"title":{},"body":{"interfaces/ISliderConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ivalidator.ts",{"_index":1452,"title":{},"body":{"interfaces/IValidator.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:111",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:127",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:13",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:138",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:14",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:154",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:158",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:16",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:163",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:185",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:189",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:193",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:200",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:22",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:72",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:89",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts",{"_index":706,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:112",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:133",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:14",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:15",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:16",{"_index":741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:17",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:19",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:27",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:58",{"_index":747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:65",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:89",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:93",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:97",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/data",{"_index":868,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts",{"_index":1037,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:10",{"_index":1045,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:100",{"_index":1064,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:114",{"_index":1053,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:14",{"_index":1056,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:33",{"_index":1059,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:52",{"_index":1061,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:79",{"_index":1049,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/form.service.ts",{"_index":1768,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts",{"_index":1578,"title":{},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts:11",{"_index":1581,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts",{"_index":1589,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:106",{"_index":1607,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:13",{"_index":1618,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:14",{"_index":1619,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:15",{"_index":1620,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:17",{"_index":1601,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:24",{"_index":1612,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:28",{"_index":1603,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:46",{"_index":1608,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:58",{"_index":1610,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:64",{"_index":1614,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:69",{"_index":1616,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:89",{"_index":1606,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:101",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:105",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:109",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:11",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:15",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:17",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:25",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:39",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:47",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:58",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:71",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:77",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:81",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:85",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:97",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/ui",{"_index":648,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/server/app.js",{"_index":1844,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1617,"title":{},"body":{"injectables/TranslationService.html":{}}}],["promise((resolve",{"_index":1627,"title":{},"body":{"injectables/TranslationService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["property",{"_index":1407,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["propisenumerable",{"_index":211,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":1233,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["providedin",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["providers",{"_index":1151,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["public",{"_index":13,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pure",{"_index":1584,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["questionmark",{"_index":810,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["quotestrings",{"_index":76,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["r\\n",{"_index":90,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["r\\n\\n",{"_index":145,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["radiobutton",{"_index":1463,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton'},{'name",{"_index":635,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["radiobutton.component.html",{"_index":1465,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton.component.scss",{"_index":1464,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobuttoncomponent",{"_index":634,"title":{"components/RadiobuttonComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":1195,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reader",{"_index":1119,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.onload",{"_index":1120,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.readasarraybuffer(inputnode.files[0",{"_index":1125,"title":{},"body":{"components/FileInputComponent.html":{}}}],["readonly",{"_index":425,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["recipient",{"_index":971,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["recipient[key1",{"_index":975,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["reduce((previousvalue",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refresh",{"_index":1513,"title":{},"body":{"components/TableComponent.html":{}}}],["registerallowedactions",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registercurrentuser",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerlocaledata",{"_index":1209,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["registerlocaledata(localede",{"_index":1231,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reject",{"_index":1628,"title":{},"body":{"injectables/TranslationService.html":{}}}],["reload",{"_index":1856,"title":{},"body":{"index.html":{}}}],["removes",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replaysubject",{"_index":989,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":999,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["repo",{"_index":1861,"title":{},"body":{"index.html":{}}}],["report",{"_index":99,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["required",{"_index":456,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["requirements",{"_index":1828,"title":{},"body":{"index.html":{}}}],["res",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["reset",{"_index":1142,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"overview.html":{}}}],["resolve(this.data",{"_index":1638,"title":{},"body":{"injectables/TranslationService.html":{}}}],["resp",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response",{"_index":1711,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":972,"title":{},"body":{"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["results",{"_index":231,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["resultslength",{"_index":1351,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":1558,"title":{},"body":{"components/TableComponent.html":{}}}],["right",{"_index":849,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["roles",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["rolesobject",{"_index":1737,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["router",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["row",{"_index":181,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["row.slice(0",{"_index":185,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["rows",{"_index":1371,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["run",{"_index":1833,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["rxjs/operators",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["s",{"_index":230,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["safe",{"_index":945,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["saveallowedactions(actions",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile(userprofile",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["scaffolding",{"_index":1864,"title":{},"body":{"index.html":{}}}],["search",{"_index":907,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.categories",{"_index":910,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.id",{"_index":908,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.text",{"_index":911,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["searchable",{"_index":1324,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["searchafternthcharacter",{"_index":1247,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["searchobj",{"_index":900,"title":{"interfaces/searchObj.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["select",{"_index":1388,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{}}}],["select'},{'name",{"_index":637,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["select.component.html",{"_index":1473,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":1472,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":636,"title":{"components/SelectComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1367,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selection",{"_index":1346,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel",{"_index":1311,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel(true",{"_index":1347,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selector",{"_index":417,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["selects",{"_index":1377,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["serve",{"_index":1836,"title":{},"body":{"index.html":{}}}],["server",{"_index":1842,"title":{},"body":{"index.html":{}}}],["server/app.js",{"_index":1859,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":1215,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/data",{"_index":1216,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/form.service",{"_index":531,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["services/translation.pipe",{"_index":1214,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["services/translation.service",{"_index":532,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["set",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"index.html":{}}}],["set('authorization",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{}}}],["set('charset",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["set('content",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["set(allactionswithduplicates",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setallowedactions",{"_index":984,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setallowedactions(value",{"_index":992,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser",{"_index":985,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser(value",{"_index":994,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setisloggedin(value",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setlang",{"_index":1597,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setlang(lang",{"_index":1609,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath",{"_index":1598,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath(path",{"_index":1611,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setupconfig",{"_index":436,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setupconfig(config",{"_index":505,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setvalid",{"_index":1038,"title":{},"body":{"injectables/DialogService.html":{}}}],["setvalid(positivecallback",{"_index":1052,"title":{},"body":{"injectables/DialogService.html":{}}}],["short",{"_index":1564,"title":{},"body":{"components/TableComponent.html":{}}}],["shouldnavbarbevisible",{"_index":998,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showactions",{"_index":1327,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showasobject",{"_index":1248,"title":{},"body":{"interfaces/IAutoCompleteOptions.html":{}}}],["showcheckbox",{"_index":1326,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showcsvexport",{"_index":1328,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showdataimporterrordialog",{"_index":1039,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdataimporterrordialog(errordataarray",{"_index":1054,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdeleteallbutton",{"_index":1329,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showerrordialog",{"_index":1040,"title":{},"body":{"injectables/DialogService.html":{}}}],["showerrordialog(errormsg",{"_index":1058,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog",{"_index":1041,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog(infomsg",{"_index":1060,"title":{},"body":{"injectables/DialogService.html":{}}}],["showlabels",{"_index":78,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["shownavbar",{"_index":986,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["shownavbar(shouldnavbarbevisible",{"_index":996,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showpaginator",{"_index":1325,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showthumb",{"_index":1302,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showticks",{"_index":1303,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showtitle",{"_index":80,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["sicher",{"_index":822,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["sie",{"_index":821,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["simple",{"_index":1085,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple'},{'name",{"_index":628,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["simple.component",{"_index":1069,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["simple.component.html",{"_index":1087,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.less",{"_index":1086,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts",{"_index":1084,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simple.component.ts:11",{"_index":1091,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:12",{"_index":1088,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:15",{"_index":1090,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:20",{"_index":1089,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple/error",{"_index":1068,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["simple/info",{"_index":1071,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simplechanges",{"_index":1315,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sind",{"_index":820,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["size",{"_index":842,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["slider",{"_index":1488,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":639,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slider.component.html",{"_index":1490,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider.component.scss",{"_index":1489,"title":{},"body":{"components/SliderComponent.html":{}}}],["slidercomponent",{"_index":638,"title":{"components/SliderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slidetoggle",{"_index":1481,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle'},{'name",{"_index":641,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slidetoggle.component.html",{"_index":1483,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle.component.scss",{"_index":1482,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetogglecomponent",{"_index":640,"title":{"components/SlideToggleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort",{"_index":1358,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sortkeys.foreach((key",{"_index":964,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["space",{"_index":1571,"title":{},"body":{"components/TableComponent.html":{}}}],["split",{"_index":965,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["split.length",{"_index":977,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["src",{"_index":1258,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["src/app",{"_index":1865,"title":{},"body":{"index.html":{}}}],["srcresult",{"_index":1110,"title":{},"body":{"components/FileInputComponent.html":{}}}],["start",{"_index":831,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"index.html":{}}}],["started",{"_index":1821,"title":{"index.html":{}},"body":{}}],["startfb",{"_index":1838,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["statischen",{"_index":1279,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["step",{"_index":1259,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{}}}],["step(object",{"_index":949,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["store.service",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store.service.ts",{"_index":979,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:11",{"_index":1000,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:12",{"_index":987,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:17",{"_index":997,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":991,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:25",{"_index":990,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:29",{"_index":995,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:33",{"_index":988,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:37",{"_index":993,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:9",{"_index":1002,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["stored",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["storedallowedactions",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["storeduserprofile",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["string(this.data.errormsg",{"_index":1095,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["string(this.data.infomsg",{"_index":1456,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["structure",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["styles",{"_index":647,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["styleurls",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["sub",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl",{"_index":763,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl.push(value.name",{"_index":768,"title":{},"body":{"injectables/ConfigService.html":{}}}],["submit",{"_index":1265,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["subtask.name",{"_index":704,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["successful",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["super(fb",{"_index":701,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["super.ngoninit",{"_index":702,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["support",{"_index":1873,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1051,"title":{},"body":{"injectables/DialogService.html":{}}}],["svg",{"_index":1874,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1408,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["symbols",{"_index":229,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["synchronizevalidator",{"_index":437,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["systemaction",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemresource",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemrole",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1334,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":643,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["table.component.html",{"_index":1344,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1345,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tablecomponent",{"_index":642,"title":{"components/TableComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["tabletype",{"_index":1322,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tap",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(resp",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["target",{"_index":226,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":421,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["templateurl",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["test",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["text",{"_index":478,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["text/csv;charset=utf8",{"_index":158,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["textinputcomponent",{"_index":644,"title":{"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this._isloggedin",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._options",{"_index":131,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.decimalseparator",{"_index":198,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.fieldseparator",{"_index":184,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename",{"_index":133,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename.replace",{"_index":160,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers",{"_index":194,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers.length",{"_index":180,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nodownload",{"_index":154,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nulltoemptystring",{"_index":208,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.objheader[key",{"_index":188,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.quotestrings",{"_index":204,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.showtitle",{"_index":143,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.title",{"_index":144,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.usebom",{"_index":140,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.useobjheader",{"_index":146,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._path",{"_index":1626,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this._path}${lang",{"_index":1648,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.adduser(url",{"_index":1726,"title":{},"body":{"injectables/UserService.html":{}}}],["this.allowedactions",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.allowedactions.next(value",{"_index":1006,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.allowedactions[systemresource",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.apibaseurl",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{}}}],["this.autocomplete",{"_index":589,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.collumnstobedisplayed",{"_index":1391,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.config",{"_index":1497,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.config.showticks",{"_index":1498,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.config.tickinterval",{"_index":1499,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.configs[page][form",{"_index":787,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configs[page][form][key",{"_index":788,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.control",{"_index":533,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.dirty",{"_index":538,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.disable",{"_index":591,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors",{"_index":535,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors.hasownproperty(error",{"_index":536,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors[error",{"_index":540,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.patchvalue(this.control.value.add(1",{"_index":1033,"title":{},"body":{"components/DateInputComponent.html":{}}}],["this.control.patchvalue(this.control.value.subtract(1",{"_index":1035,"title":{},"body":{"components/DateInputComponent.html":{}}}],["this.control.touched",{"_index":537,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.valuechanges.subscribe(val",{"_index":558,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.csv",{"_index":141,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.currentuser",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.currentuser.next(value",{"_index":1005,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.currentuser.roles",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.customfilterbasedondisplaycolumns(data",{"_index":1399,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data",{"_index":128,"title":{},"body":{"classes/AngularCsv.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.data.errormsg",{"_index":1092,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.data.icon",{"_index":816,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.data.infomsg",{"_index":1453,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.data.length",{"_index":1417,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data.message",{"_index":818,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.data[i",{"_index":196,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[i][index",{"_index":197,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[key",{"_index":1644,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.datachange.value",{"_index":774,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.datasource.data",{"_index":1384,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filter",{"_index":1362,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.filter(item",{"_index":1428,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.foreach(row",{"_index":1382,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.length",{"_index":1376,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1398,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator",{"_index":1401,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":1419,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sort",{"_index":1403,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sortingdataaccessor",{"_index":1406,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datastore.getallowedactions().subscribe((actions",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.getcurrentuser().subscribe((user",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(actionresp['actions",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(null",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(storedallowedactions",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(null",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(profile",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(storeduserprofile",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.delete.emit(row",{"_index":1425,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.deletebulk.emit(filtereddatasource",{"_index":1430,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1080,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(errordialogsimplecomponent",{"_index":1077,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(infodialogsimplecomponent",{"_index":1078,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(matdialog",{"_index":1074,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogref.disableclose",{"_index":815,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.dialogservice.showerrordialog('error",{"_index":1733,"title":{},"body":{"injectables/UserService.html":{}}}],["this.disabled",{"_index":568,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.displayedcolumns.filter((column",{"_index":1395,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.map(header",{"_index":1392,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.push({collumnname",{"_index":1390,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.unshift({collumnname",{"_index":1387,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.download.emit(row",{"_index":1423,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.edit.emit(row",{"_index":1421,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.errormsg",{"_index":1094,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.field",{"_index":544,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.field.config",{"_index":1495,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.filtercontrol.patchvalue",{"_index":1418,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.flatcontrolls",{"_index":755,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.form",{"_index":549,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.formatdata(this.data[i][index",{"_index":195,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.formatdata(this.data[i][key",{"_index":193,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.fs.addfield(this",{"_index":556,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname",{"_index":545,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname(this.name).options",{"_index":1477,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.fs.getform(this.field.name",{"_index":550,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getformcontrol(this.field",{"_index":553,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.generatecsv",{"_index":134,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbody",{"_index":152,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbodyaccordingheader",{"_index":150,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getdisplaydata(columns",{"_index":1447,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getfiltereddisplaydata(columns",{"_index":1449,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getheaderfromobj",{"_index":149,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getheaders",{"_index":151,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getmeesage(error",{"_index":539,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getname",{"_index":606,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getuseractions",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuserprofile",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getvalue",{"_index":607,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.headers",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{}}}],["this.headers.set('usemockup",{"_index":1714,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hint",{"_index":560,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.hintlabel",{"_index":562,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.htmltype",{"_index":583,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.http.delete('/api",{"_index":914,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete(`${url}${user.id",{"_index":1736,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.url",{"_index":918,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete(url",{"_index":1713,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get('/api",{"_index":913,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get(`${url}${userid",{"_index":1720,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(langpath).subscribe",{"_index":1633,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.http.get(this.apibaseurl",{"_index":1715,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.url",{"_index":915,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get(url",{"_index":1717,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post",{"_index":902,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(this.url",{"_index":916,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(url",{"_index":919,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put",{"_index":905,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put(`${url}${user.id",{"_index":1734,"title":{},"body":{"injectables/UserService.html":{}}}],["this.icon",{"_index":817,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.iconaction.emit",{"_index":605,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.iconbtn",{"_index":585,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.infomsg",{"_index":1455,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.init",{"_index":557,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.initialcolumns",{"_index":1394,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isallselected",{"_index":1381,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isloggedin",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ismoment(this.control",{"_index":1032,"title":{},"body":{"components/DateInputComponent.html":{}}}],["this.lang",{"_index":1625,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.loadallowedactions",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loaduserprofile",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.max",{"_index":574,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.maxlength",{"_index":578,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.message",{"_index":819,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.min",{"_index":576,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.minlength",{"_index":580,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.msgerrors[type](param",{"_index":543,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.name",{"_index":547,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.navbarvisibility",{"_index":1004,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navbarvisibility.next(shouldnavbarbevisible",{"_index":1003,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navigatetologinpage",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ondatachange.emit(this.data",{"_index":1637,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.emit(this.lang",{"_index":1646,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.subscribe(val",{"_index":1624,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.options",{"_index":1476,"title":{},"body":{"components/SelectComponent.html":{},"injectables/UserService.html":{}}}],["this.paginator",{"_index":1402,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.placeholder",{"_index":546,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.registerallowedactions",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.registercurrentuser",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.required",{"_index":567,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.resultslength",{"_index":1416,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.router.navigate(['login",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveallowedactions(actions",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveuserprofile(user",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.selection.clear",{"_index":1365,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.select(row",{"_index":1383,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.indexof(item",{"_index":1429,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.length",{"_index":1374,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.setupconfig(this.field",{"_index":548,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.sort",{"_index":1404,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.srcresult",{"_index":1123,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.synchronizevalidator",{"_index":592,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.translate.data[key",{"_index":1588,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.ts.data.datepicker_error",{"_index":523,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.email_error",{"_index":521,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.max_error.replace('${param",{"_index":514,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.min_error.replace('${param",{"_index":516,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.minlength_error.replace('${param",{"_index":512,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.pattern_error.replace('${param",{"_index":519,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data.required_error",{"_index":511,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["this.ts.data[this.value",{"_index":593,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.ts.transform(header.collumnkey",{"_index":1439,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.updatedata(translation",{"_index":1636,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updateroles(url",{"_index":1730,"title":{},"body":{"injectables/UserService.html":{}}}],["this.use(this.lang",{"_index":1645,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userdata",{"_index":1641,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userservice.getuserprofile(url).subscribe((profile:any",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.getuserroles().subscribe((actionresp",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.login(usernameandpassword",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.logout(url).subscribe(null",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validators",{"_index":569,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.email",{"_index":603,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.pattern",{"_index":601,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.value",{"_index":559,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.viewoptions.datestringtodatefilter",{"_index":1405,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showactions",{"_index":1389,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showcheckbox",{"_index":1386,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showdeleteallbutton",{"_index":1385,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["throw",{"_index":220,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["throwerror",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throwerror(errobj",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tickinterval",{"_index":1304,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["timer",{"_index":898,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["timer(2000).pipe",{"_index":922,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["title",{"_index":81,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["tmpdata",{"_index":770,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tmpdis",{"_index":566,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["tmpreq",{"_index":565,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["todo",{"_index":1331,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["toggle",{"_index":1229,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["toobject",{"_index":1749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toobject(target",{"_index":228,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["toobject(val",{"_index":216,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":457,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["tooltipdelay",{"_index":1261,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["tooltipposition",{"_index":1260,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["top",{"_index":1566,"title":{},"body":{"components/TableComponent.html":{}}}],["total",{"_index":1370,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["transform",{"_index":1579,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["transform(key",{"_index":1580,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translate",{"_index":703,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{}}}],["translatepipe",{"_index":1140,"title":{"pipes/TranslatePipe.html":{}},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["translation",{"_index":1634,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translation.service",{"_index":1583,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translationservice",{"_index":462,"title":{"injectables/TranslationService.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":411,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["true).unix",{"_index":1411,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ts",{"_index":427,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"miscellaneous/functions.html":{}}}],["ts.onlangchange.subscribe(lang",{"_index":1026,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ts:translationservice",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":189,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["txt",{"_index":887,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["txtfile",{"_index":1639,"title":{},"body":{"injectables/TranslationService.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IAutoCompleteOptions.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["typeerror",{"_index":221,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["typeof",{"_index":129,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ufeff",{"_index":92,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["ui",{"_index":1065,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"index.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"pipes/TranslatePipe.html":{},"miscellaneous/functions.html":{}}}],["unflatten",{"_index":927,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["unflatten(target",{"_index":938,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["unset",{"_index":1572,"title":{},"body":{"components/TableComponent.html":{}}}],["up",{"_index":1831,"title":{},"body":{"index.html":{}}}],["update",{"_index":875,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["update(id",{"_index":894,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["updatedata",{"_index":1599,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updatedata(data",{"_index":1613,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updateon",{"_index":1263,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["updateroles",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(url",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":1555,"title":{},"body":{"components/TableComponent.html":{}}}],["uri",{"_index":164,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["url",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/IAutoCompleteOptions.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["url.createobjecturl(blob",{"_index":171,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["use",{"_index":1600,"title":{},"body":{"injectables/TranslationService.html":{},"index.html":{}}}],["use(lang",{"_index":1615,"title":{},"body":{"injectables/TranslationService.html":{}}}],["usebom",{"_index":82,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":1235,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["used",{"_index":934,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["useful",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["useheader",{"_index":86,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["useobjheader",{"_index":85,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user).subscribe(adduserres",{"_index":1727,"title":{},"body":{"injectables/UserService.html":{}}}],["user).subscribe(updateroleresp",{"_index":1731,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":1728,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1738,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user/profile",{"_index":1716,"title":{},"body":{"injectables/UserService.html":{}}}],["user/role",{"_index":1718,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata",{"_index":1592,"title":{},"body":{"injectables/TranslationService.html":{}}}],["userid",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usernameandpassword",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userprofile",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":255,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":1234,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["utf",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["util",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":217,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["val:any",{"_index":214,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["valid",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validation",{"_index":528,"title":{},"body":{"components/BaseFieldComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validation.ts",{"_index":1268,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["validatorfn",{"_index":1254,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validators",{"_index":458,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value2",{"_index":1652,"title":{},"body":{"injectables/TranslationService.html":{}}}],["value['actions",{"_index":1719,"title":{},"body":{"injectables/UserService.html":{}}}],["var",{"_index":613,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["variable",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1879,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1827,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1305,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["vertical_align_bottom",{"_index":1549,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild",{"_index":1316,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matpaginator",{"_index":1355,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matsort",{"_index":1357,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewoptions",{"_index":1354,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["von",{"_index":1278,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["werten",{"_index":1280,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["whether",{"_index":1366,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["white",{"_index":1570,"title":{},"body":{"components/TableComponent.html":{}}}],["width",{"_index":1082,"title":{},"body":{"injectables/DialogService.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["widthinpercentage",{"_index":1310,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["withcredentials",{"_index":1712,"title":{},"body":{"injectables/UserService.html":{}}}],["word",{"_index":1104,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["work",{"_index":1840,"title":{},"body":{"index.html":{}}}],["works",{"_index":1129,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["wählen",{"_index":1479,"title":{},"body":{"components/SelectComponent.html":{}}}],["xmlexport",{"_index":1042,"title":{},"body":{"injectables/DialogService.html":{}}}],["xmlexport(positivecallback",{"_index":1063,"title":{},"body":{"injectables/DialogService.html":{}}}],["yes",{"_index":39,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{}}}],["zone.js",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1141,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AngularCsv.html":{"url":"classes/AngularCsv.html","title":"class - AngularCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                labels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Private\n                                generateCsv\n                            \n                            \n                                getBody\n                            \n                            \n                                getBodyAccordingHeader\n                            \n                            \n                                getCsvData\n                            \n                            \n                                getHeaderFromObj\n                            \n                            \n                                getHeaders\n                            \n                            \n                                    Static\n                                isFloat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(DataJSON: any, filename: string, options?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DataJSON\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:218\n                \n            \n\n\n            \n                \n                    Format Data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCsv\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCsv()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:88\n                \n            \n\n\n            \n                \n                    Generate and Download Csv\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:191\n                \n            \n\n\n            \n                \n                    Create Body\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBodyAccordingHeader\n                        \n                    \n                \n            \n            \n                \ngetBodyAccordingHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:170\n                \n            \n\n\n            \n                \n                    Create Body according to obj header\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCsvData\n                        \n                    \n                \n            \n            \n                \ngetCsvData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaderFromObj\n                        \n                    \n                \n            \n            \n                \ngetHeaderFromObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:156\n                \n            \n\n\n            \n                \n                    Create Header from Object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:142\n                \n            \n\n\n            \n                \n                    Create Headers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFloat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFloat(input: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:81\n                \n            \n\n\n            \n                \n                    Check if is Float\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isLoggedIn\n                            \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                bla\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfUserIsAlreadyLoggedIn\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                    Public\n                                handleSessionTimeout\n                            \n                            \n                                loadUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                navigateToLoginPage\n                            \n                            \n                                registerAllowedActions\n                            \n                            \n                                registerCurrentUser\n                            \n                            \n                                saveUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, dataStore: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataStore\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAlreadyLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAlreadyLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:138\n                \n            \n\n\n            \n                \n                    Checks currently only if the userProfile is stored locally\nFIXME: An additional test for a valid cookie would be more useful.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleSessionTimeout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSessionTimeout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:127\n                \n            \n\n\n            \n                \n                    Removes Authentication Informations from Localstorage\nand navigates to the loginpage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserProfile\n                        \n                    \n                \n            \n            \n                \nloadUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginurl: string, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginurl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(navigateToLoginpage: boolean, url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    navigateToLoginpage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLoginPage\n                        \n                    \n                \n            \n            \n                \nnavigateToLoginPage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAllowedActions\n                        \n                    \n                \n            \n            \n                \nregisterAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerCurrentUser\n                        \n                    \n                \n            \n            \n                \nregisterCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(userProfile: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bla\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fbapp-user'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:185\n                                \n                            \n\n                \n                    \n                        setisLoggedIn(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:189\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DataStoreService } from './data-store.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private _isLoggedIn = false;\n  bla = 'fbapp-user';\n\n  private currentUser: {\n    id?: string;\n    name?: string;\n    email?: string;\n\n  };\n  private allowedActions: Object;\n\n  constructor(private router: Router,\n    private userService: UserService,\n    private dataStore: DataStoreService\n  ) {\n\n    this.registerCurrentUser();\n    this.registerAllowedActions();\n\n    const storedUserProfile = this.loadUserProfile();\n   //const storedAllowedActions = this.loadAllowedActions();\n\n    if (!!storedUserProfile) {\n      this.dataStore.setCurrentUser(storedUserProfile);\n    }\n/*\n    if (!!storedAllowedActions) {\n      this.dataStore.setAllowedActions(storedAllowedActions);\n    }\n*/\n  }\n/*\n  hasAvailableAction(systemResource: SystemResource, systemAction: SystemAction) {\n    if (systemResource && systemAction && this.allowedActions && systemResource in this.allowedActions) {\n      const roles: Object = this.allowedActions[systemResource];\n      const allActionsWithDuplicates = Object.values(roles)\n        .reduce((previousValue, currentValue) => {\n          return previousValue.concat(currentValue);\n        });\n      const availableActions = Array.from(new Set(allActionsWithDuplicates)); // [C, C, R, R, U] => [C, R, U]\n      if (!!availableActions && availableActions.indexOf(systemAction) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasRole(systemRole: SystemRole) {\n    if (!systemRole || !this.currentUser) {\n      return false;\n    }\n\n    const currentUserRoles: string[] = this.currentUser.roles;\n    if (currentUserRoles.indexOf(systemRole) >= 0) {\n      return true;\n    }\n    return false;\n  }\n*/\n  login(loginurl: string, username: string, password: string): Observable {\n    const usernameAndPassword = username + ':' + password;\n\n    return this.userService.login(usernameAndPassword, loginurl).pipe(\n      tap(resp => {\n        // console.log('[authenticationService] - login successful', resp);\n        this.isLoggedIn = true;\n      }),\n      tap(() => {\n        // this.getUserProfile();\n      }),\n      tap(() => {\n        // this.getUserActions();\n      })\n    );\n  }\n\n  getUserProfile(url: string) {\n    this.userService.getUserProfile(url).subscribe((profile:any) => {\n      // console.log('[AuthenticationService] - getUserProfile', profile);\n      this.dataStore.setCurrentUser(profile);\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n/*\n  getUserActions() {\n    this.userService.getUserRoles().subscribe((actionResp: Object) => {\n      if (actionResp.hasOwnProperty('actions')) {\n        // console.log('[AuthenticationService] - getUserActions', actionResp);\n        this.dataStore.setAllowedActions(actionResp['actions']);\n      } else {\n        this.dataStore.setAllowedActions(null);\n      }\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n*/\n  public logout(navigateToLoginpage: boolean = true, url: string): void {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    // this.dataStore.setAllowedActions(null);\n\n    this.userService.logout(url).subscribe(null, null, () => {\n      if (navigateToLoginpage) {\n        this.navigateToLoginPage();\n      }\n    });\n  }\n\n  /**\n   * Removes Authentication Informations from Localstorage\n   * and navigates to the loginpage.\n   */\n  public handleSessionTimeout() {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    this.navigateToLoginPage();\n  }\n\n  /**\n   * Checks currently only if the userProfile is stored locally\n   * FIXME: An additional test for a valid cookie would be more useful.\n   */\n  checkIfUserIsAlreadyLoggedIn(): boolean {\n    const storedUserProfile = this.loadUserProfile();\n    const storedAllowedActions = true ; //his.loadAllowedActions();\n\n    if (!!storedUserProfile && !!storedAllowedActions) {\n      this.isLoggedIn = true;\n      this.dataStore.setCurrentUser(storedUserProfile);\n      // this.dataStore.setAllowedActions(storedAllowedActions);\n      return true;\n    }\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    return false;\n  }\n\n  navigateToLoginPage() {\n    this.router.navigate(['login']);\n  }\n\n  loadUserProfile(): any {\n    let res = localStorage.getItem(this.bla);\n      return JSON.parse(res != null? res : '') as any;\n  }\n\n  saveUserProfile(userProfile: any): void {\n    // console.log('saveUserProfile', userProfile);\n    if (!!userProfile) {\n      localStorage.setItem(this.bla, JSON.stringify(userProfile));\n    } else {\n      localStorage.removeItem(this.bla);\n    }\n  }\n/*\n  loadAllowedActions(): any {\n    return JSON.parse(localStorage.getItem(this.USER_ALLOWED_ACTIONS));\n  }\n\n  saveAllowedActions(actions: any): void {\n    // console.log('saveAllowedActions', actions);\n    if (!!actions && Object.keys(actions).length > 0) {\n      localStorage.setItem(this.USER_ALLOWED_ACTIONS, JSON.stringify(actions));\n    } else {\n      localStorage.removeItem(this.USER_ALLOWED_ACTIONS);\n    }\n  }\n*/\n  get isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n\n  set isLoggedIn(value: boolean) {\n    this._isLoggedIn = value;\n  }\n\n  registerCurrentUser() {\n    this.dataStore.getCurrentUser().subscribe((user: any) => {\n      this.currentUser = user;\n      this.saveUserProfile(user);\n    });\n  }\n\n  registerAllowedActions() {\n    this.dataStore.getAllowedActions().subscribe((actions: Object) => {\n      this.allowedActions = actions;\n      //this.saveAllowedActions(actions);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoSearch.html":{"url":"classes/AutoSearch.html","title":"class - AutoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoSearch[] | string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFieldComponent.html":{"url":"components/BaseFieldComponent.html","title":"component - BaseFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/classes/field.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    IField\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                field\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                            \n                                    Public\n                                ts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { IField, IHTMLAttributes } from '../interfaces/ifield';\nimport { ICustomValidation } from '../interfaces/icustom-validation';\nimport { IValidator } from '../interfaces/ivalidator';\nimport { EventEmitter, Input, OnInit, Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { FormService } from '../services/form.service';\nimport { TranslationService } from '../services/translation.service';\n\n@Component({\n  selector: 'app-base-field',\n  template: ''\n})\nexport class BaseFieldComponent implements IField, OnInit {\n  private readonly MSGerrors = {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  };\n\n  @Input() name = 'home_ui_new';\n\n  @Input() value = '';\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() minLength: number;\n  @Input() maxLength: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() required: boolean;\n  @Input() form: FormGroup;\n  @Input() control: FormControl;\n  @Input() hintlabel = '';\n  @Input() hint = '';\n  @Input() tooltip = '';\n  @Input() htmlType = 'text';\n  @Input() iconBtn: string;\n  @Input() iconAction: EventEmitter = new EventEmitter();\n  @Input() validators: IValidator;\n  @Input() customValidation: ICustomValidation[];\n  @Input() htmlAttribute: IHTMLAttributes;\n  @Input() autocomplete = 'off';\n\n\n  @Input() change: EventEmitter = new EventEmitter();\n  init = true;\n  field: IField;\n\n  constructor(\n    public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService\n  ) {}\n\n  get(): BaseFieldComponent {\n    return this;\n  }\n\n  getErrorMeesage() {\n    if (this.control) {\n      for (const error in this.control.errors) {\n        if (\n          (this.control.errors.hasOwnProperty(error) && this.control.touched) ||\n          this.control.dirty\n        ) {\n          return this.getMeesage(error, this.control.errors[error]);\n        }\n      }\n    }\n  }\n\n  getMeesage(type: string, param: any) {\n    // console.log(type);\n    if(this.MSGerrors[type](param)) {\n      return this.MSGerrors[type](param);\n    }\n  }\n\n  ngOnInit(): void {\n    this.field = this.fs.getConfigByName(\n      this.placeholder ? this.placeholder : this.name\n    );\n\n    this.setUpConfig(this.field);\n    this.form = this.fs.getForm(this.field.name);\n    // console.log(this.field);\n    // console.log(this.name);\n\n    this.control = this.fs.getFormControl(this.field);\n    // console.log(this.control);\n\n    if(this.init) {\n      this.fs.addField(this);\n    }\n    this.init = false;\n    this.control.valueChanges.subscribe(val => (this.value = val));\n  }\n\n  public setUpConfig(config: IField) {\n    this.hint = config.hint;\n    this.hintlabel = config.hintlabel;\n\n    if (!this.hintlabel) {\n      this.hintlabel = config.name + '#hintlabel';\n    }\n\n    let tmpReq = false;\n    let tmpDis = false;\n\n    if (this.init) {\n      tmpReq = this.required ? this.required : null;\n      tmpDis = this.disabled ? this.disabled : null;\n    }\n\n    this.validators = config.validators;\n    this.disabled = config.disabled ? config.disabled : tmpDis;\n    this.required = config.validators ? config.validators.required : tmpReq;\n    // console.log(this.required);\n\n    this.max = config.validators\n      ? config.validators.max\n      : this.max\n      ? this.max\n      : null;\n    this.min = config.validators\n      ? config.validators.min\n      : this.min\n      ? this.min\n      : null;\n    this.maxLength = config.validators\n      ? config.validators.maxLength\n      : this.maxLength\n      ? this.maxLength\n      : null;\n    this.minLength = config.validators\n      ? config.validators.minLength\n      : this.minLength\n      ? this.minLength\n      : null;\n    this.value = config.value || '';\n    this.htmlType = config.htmlType ? config.htmlType : this.htmlType;\n    this.iconBtn = config.icon? config.icon: this.iconBtn;\n\n    if (config.htmlAttribute && config.htmlAttribute.autocomplete) {\n      this.autocomplete = config.htmlAttribute.autocomplete;\n    }\n\n    if(this.field.disabled && this.control) {\n      this.control.disable();\n    }\n    this.synchronizeValidator();\n  }\n\n  getValue() {\n    return this.ts.data[this.value + '#label'] || this.value;\n  }\n\n  getName() {\n    return this.placeholder ? this.placeholder : this.name;\n  }\n\n  synchronizeValidator() {\n    const newValidators: IValidator = {};\n    if (this.required) {\n      newValidators.required = this.required;\n    }\n    if (this.max) {\n      newValidators.max = this.max;\n    }\n    if (this.min) {\n      newValidators.min = this.min;\n    }\n    if (this.maxLength) {\n      newValidators.maxLength = this.maxLength;\n    }\n    if (this.minLength) {\n      newValidators.minLength = this.minLength;\n    }\n    if (this.validators && this.validators.pattern) {\n      newValidators.pattern = this.validators.pattern;\n    }\n    if (this.validators && this.validators.email) {\n      newValidators.email = this.validators.email;\n    }\n    this.validators = newValidators;\n  }\n\n  getValidators() {\n    return this.validators? this.validators : {};\n  }\n\n  getFieldConfig() {\n    return this as IField;\n  }\n  iconAct() {\n    this.iconAction.emit(\n      {\n        name: this.getName(),\n        value: this.getValue(),\n        btn: this.iconBtn\n      }\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'before'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseFieldComponent implements OnInit {\n  @Input() position = 'before';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService\n  ) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        {{ getName() + \"#label\" | translate }}\n      \n    \n\n\n\n  \n    {{ getName() + \"#label\" | translate }}\n  \n  \n    \n      \n        {{ subtask.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getName() + \"#label\" | translate }}                {{ getName() + \"#label\" | translate }}                      {{ subtask.name }}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configs\n                            \n                            \n                                dataChange\n                            \n                            \n                                emptyObj\n                            \n                            \n                                flatControlls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                buildTree\n                            \n                            \n                                getAppConfigs\n                            \n                            \n                                getConfigByName\n                            \n                            \n                                getControlls\n                            \n                            \n                                getFBConfig\n                            \n                            \n                                getFlatControlls\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildFileTree\n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: literal type, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:65\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of AutoSearch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AutoSearch[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTree\n                        \n                    \n                \n            \n            \n                \nbuildTree(config: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppConfigs\n                        \n                    \n                \n            \n            \n                \ngetAppConfigs(appData: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appData\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfigByName\n                        \n                    \n                \n            \n            \n                \ngetConfigByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlls\n                        \n                    \n                \n            \n            \n                \ngetControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFBConfig\n                        \n                    \n                \n            \n            \n                \ngetFBConfig(appData: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appData\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFlatControlls\n                        \n                    \n                \n            \n            \n                \ngetFlatControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyObj\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: 'home_ui_new'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatControlls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/config.service.ts:58\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataFlattnerService } from './data-flattner.service';\nimport { IField } from '../interfaces/ifield';\nimport { AutoSearch } from '../interfaces/imenu';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { merge } from 'lodash';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  flatControlls: any[];\n  dataChange = new BehaviorSubject([]);\n  configs: any;\n  emptyObj: IField = {\n    name: 'home_ui_new'\n  };\n\n\n  constructor(private http: HttpClient) {\n    this.flatControlls = [];\n    // console.log(this.flatControlls);\n  }\n\n  buildTree(config: any) {\n    // console.log(config);\n    const entries = [];\n    for (const page in config) {\n      if (page) {\n        for (const formN in config[page]) {\n          if (config[page][formN]) {\n            const subLvl = [];\n            const form: IField[] = config[page][formN];\n            // console.log(form);\n            for (const [key, value] of Object.entries(form)) {\n              // console.log(`${key}: ${value}`);\n              subLvl.push(value.name);\n              // children.push(value.name);\n            }\n            const tmpData = [\n              {\n                name: formN,\n                children: subLvl\n              }\n            ];\n            entries.push(tmpData);\n          }\n        }\n      }\n    }\n    // DataFlattnerService.flatten(tmpData)\n    // this.flatControlls = tmpData;\n    // console.log(\"newtree\", this.flatControlls);\n  }\n\n  get data(): AutoSearch[] {\n    return this.dataChange.value;\n  }\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `AutoSearch`.\n   */\n  buildFileTree(obj: { [key: string]: any }, level: number): AutoSearch[] {\n    return Object.keys(obj).reduce((accumulator, key) => {\n      const value = obj[key];\n      // console.log(value);\n\n      const node = new AutoSearch();\n      node.name = key;\n      if (value != null) {\n        if (typeof value === 'object' && level  {\n      const formObj = appData[page];\n      if (formObj) {\n        Object.keys(formObj).forEach(form => {\n          const forM: any = formObj[form];\n          Object.keys(forM).forEach(key => {\n            const field: IField = forM[key];\n\n            if(this.configs[page] && this.configs[page][form] && this.configs[page][form][key]) {\n              // data[page][form][key] = field;\n              merge(data, {[page]: {[form]: {[key]: field}}});\n            }\n          });\n        });\n      }\n    });\n    return data;\n  }\n\n  getFBConfig(appData: any[]) {\n    let data = {};\n    Object.keys(appData).forEach(page => {\n      const formObj = appData[page];\n      if (formObj) {\n        Object.keys(formObj).forEach(form => {\n          const forM: any = formObj[form];\n          Object.keys(forM).forEach(key => {\n            const field: IField = forM[key];\n\n            if(!this.configs[page] || !this.configs[page][form] || !this.configs[page][form][key]) {\n              // data[page][form][key] = field;\n              merge(data, {[page]: {[form]: {[key]: field}}});\n            }\n          });\n        });\n      }\n    });\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.less\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'questionmark'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  public icon = 'questionmark';\n  public errorMsg: string[] = [];\n  public message: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.message) {\n      this.message = this.data.message;\n    } else {\n      this.message = 'Sind Sie sicher?';\n    }\n    console.log(this.message);\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Sind Sie sicher?\n\n\n\n\n  {{message | translate}}\n\n\n\n\n  Nein\n  \n  \n  \n    Ja\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.less\n                \n                #confirm-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#confirm-dialog_title > h2 {\n  margin: 0;\n}\n\n#confirm-dialog_message {\n  font-size: 14px;\n}\n\nmat-dialog-content#confirm-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Sind Sie sicher?  {{message | translate}}  Nein          Ja  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvConfigConsts.html":{"url":"classes/CsvConfigConsts.html","title":"class - CsvConfigConsts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvConfigConsts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BOM\n                            \n                            \n                                    Static\n                                DEFAULT_DECIMAL_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FIELD_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FILENAME\n                            \n                            \n                                    Static\n                                DEFAULT_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_NO_DOWNLOAD\n                            \n                            \n                                    Static\n                                DEFAULT_NULL_TO_EMPTY_STRING\n                            \n                            \n                                    Static\n                                DEFAULT_OBJ_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_QUOTE\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_LABELS\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_USE_BOM\n                            \n                            \n                                    Static\n                                DEFAULT_USE_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_USE_OBJ_HEADER\n                            \n                            \n                                    Static\n                                EOL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BOM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\ufeff'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_DECIMAL_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FIELD_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ','\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mycsv.csv'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NO_DOWNLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NULL_TO_EMPTY_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_QUOTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\"'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_LABELS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'My Report'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_BOM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\r\\n'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataConnectorService.html":{"url":"injectables/DataConnectorService.html","title":"injectable - DataConnectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataConnectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteField\n                            \n                            \n                                get\n                            \n                            \n                                getAsyncValidation\n                            \n                            \n                                getFields\n                            \n                            \n                                insertField\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(id)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(itemType: string, id: string, kat: string[], txt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"0\"\n                                    \n\n                                \n                                \n                                    kat\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    txt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsyncValidation\n                        \n                    \n                \n            \n            \n                \ngetAsyncValidation(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFields\n                        \n                    \n                \n            \n            \n                \ngetFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertField\n                        \n                    \n                \n            \n            \n                \ninsertField(field: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataFlattnerService.html":{"url":"injectables/DataFlattnerService.html","title":"injectable - DataFlattnerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataFlattnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flatten\n                            \n                            \n                                    Static\n                                isBuffer\n                            \n                            \n                                    Static\n                                isFlat\n                            \n                            \n                                    Static\n                                unflatten\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    flatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBuffer(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:26\n                \n            \n\n\n            \n                \n                    isBuffer\nused for flatten unflatten\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFlat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFlat(object: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unflatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    unflatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                navbarVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllowedActions\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getNavbarState\n                            \n                            \n                                    Public\n                                setAllowedActions\n                            \n                            \n                                    Public\n                                setCurrentUser\n                            \n                            \n                                    Public\n                                showNavbar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNavbarState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavbarState()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllowedActions(value: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentUser(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showNavbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    showNavbar(shouldNavbarBeVisible: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shouldNavbarBeVisible\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        navbarVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n\n  private navbarVisibility: BehaviorSubject = new BehaviorSubject(true);\n\n  private currentUser: ReplaySubject = new ReplaySubject(1);\n  private allowedActions: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n  }\n\n  public showNavbar(shouldNavbarBeVisible: boolean): void {\n    this.navbarVisibility.next(shouldNavbarBeVisible);\n  }\n\n  public getNavbarState(): BehaviorSubject {\n    return this.navbarVisibility;\n  }\n\n  public getCurrentUser(): ReplaySubject {\n    return this.currentUser;\n  }\n\n  public setCurrentUser(value: any) {\n    this.currentUser.next(value);\n  }\n\n  public getAllowedActions(): ReplaySubject {\n    return this.allowedActions;\n  }\n\n  public setAllowedActions(value: Object): void {\n    this.allowedActions.next(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateInputComponent.html":{"url":"components/DateInputComponent.html","title":"component - DateInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-input\n            \n\n            \n                styleUrls\n                ./date-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isMoment\n                            \n                            \n                                keydown\n                            \n                            \n                                keyup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, dateAdapter: DateAdapter, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateAdapter\n                                                  \n                                                        \n                                                                    DateAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isMoment\n                        \n                    \n                \n            \n            \n                \nisMoment(date: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keydown\n                        \n                    \n                \n            \n            \n                \nkeydown()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keyup\n                        \n                    \n                \n            \n            \n                \nkeyup()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { DateAdapter } from '@angular/material/core';\nimport { TranslationService } from '../../services/translation.service';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss']\n})\nexport class DateInputComponent extends BaseFieldComponent implements OnInit {\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    private dateAdapter: DateAdapter,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n    dateAdapter.setLocale(ts.lang);\n\n    ts.onLangChange.subscribe(lang => dateAdapter.setLocale(lang));\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  isMoment(date: FormControl) {\n    if(!moment.isMoment(date.value)) {\n      date.patchValue(moment(date.value, 'L', 'de', true));\n    }\n  }\n\n  keyup(){\n    this.isMoment(this.control);\n    this.control.patchValue(this.control.value.add(1, 'd'));\n  }\n\n  keydown(){\n    this.isMoment(this.control);\n    this.control.patchValue(this.control.value.subtract(1, 'd'));\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./date-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                setValid\n                            \n                            \n                                    Public\n                                showDataImportErrorDialog\n                            \n                            \n                                    Public\n                                showErrorDialog\n                            \n                            \n                                    Public\n                                showInfoDialog\n                            \n                            \n                                    Public\n                                xmlExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/dialog.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:79\n                \n            \n\n\n            \n                \n                    messageString may also be an html String like:\nAre you sure?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    setValid(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showDataImportErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDataImportErrorDialog(errorDataArray: any[], afterDialogCallback: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorDataArray\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showErrorDialog(errorMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showInfoDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInfoDialog(infoMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        xmlExport\n                        \n                    \n                \n            \n            \n                \n                    \n                    xmlExport(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from '../ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from '../ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  public showDataImportErrorDialog(errorDataArray: any[],\n    afterDialogCallback: Function\n  ): MatDialogRef {\n\n    const dialogData = {\n      dataImportErrors: errorDataArray\n    };\n\n    const dialogRef = this.dialog.open(MatDialog, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      afterDialogCallback(result);\n    });\n\n    return dialogRef;\n  }\n\n  public showErrorDialog(errorMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      errorMsg: errorMsg\n    };\n\n    const dialogRef = this.dialog.open(ErrorDialogSimpleComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  public showInfoDialog(infoMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      infoMsg: infoMsg\n    };\n\n    const dialogRef = this.dialog.open(InfoDialogSimpleComponent, {\n      data: dialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  /**\n   * messageString may also be an html String like:\n   * Are you sure?\n   *\n   * @param {string} messageString\n   * @param {Function} positiveCallback\n   * @param {Function} negativeCallback\n   */\n  public confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function): void {\n    console.log(messageString);\n\n    const dialogData = {\n      message: messageString\n    };\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result === true) {\n        positiveCallback();\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public xmlExport(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog);\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public setValid(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog, {width: '350px'});\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogSimpleComponent.html":{"url":"components/ErrorDialogSimpleComponent.html","title":"component - ErrorDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-simple\n            \n\n            \n                styleUrls\n                ./error-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog-simple',\n  templateUrl: './error-dialog-simple.component.html',\n  styleUrls: ['./error-dialog-simple.component.less']\n})\nexport class ErrorDialogSimpleComponent implements OnInit {\n\n  public icon = 'error';\n  public errorMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.errorMsg && Array.isArray(this.data.errorMsg)) {\n      this.errorMsg = this.data.errorMsg;\n    } else {\n      this.errorMsg = [String(this.data.errorMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Es ist ein Fehler aufgetreten!\n   1\">Es sind Fehler aufgetreten!\n\n\n\n\n  \n    {{errorMsg | translate}}\n  \n\n\n\n\n  \n    OK\n  \n\n\n    \n\n    \n                \n                    ./error-dialog-simple.component.less\n                \n                \n#error-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#error-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.error-dialog_message {\n  font-size: 14px;\n  word-break: break-all;\n}\n\nmat-dialog-content#error-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Es ist ein Fehler aufgetreten!   1\">Es sind Fehler aufgetreten!      {{errorMsg | translate}}        OK  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-input\n            \n\n            \n                styleUrls\n                ./file-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcResult\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        srcResult\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.scss']\n})\nexport class FileInputComponent extends BaseFieldComponent implements OnInit {\n\n  @Input() srcResult: any;\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.name);\n    // console.log(this.control);\n    // console.log(this.form);\n  }\n\n  onFileSelected() {\n    const inputNode: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined' && typeof (inputNode.files[0]) !== 'undefined') {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        // console.log(e);\n\n        this.srcResult = e.target.result;\n      };\n\n      reader.readAsArrayBuffer(inputNode.files[0]);\n      // console.log(reader);\n\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Choose File\n  \n  \n\n    \n\n    \n                \n                    ./file-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose File    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormbuilderComponent.html":{"url":"components/FormbuilderComponent.html","title":"component - FormbuilderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormbuilderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/formbuilder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-formbuilder\n            \n\n\n\n            \n                template\n                \n  formbuilder works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-formbuilder',\n  template: `\n    \n      formbuilder works!\n    \n  `,\n  styles: [\n  ]\n})\nexport class FormbuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  formbuilder works!'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormbuilderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormbuilderModule.html":{"url":"modules/FormbuilderModule.html","title":"module - FormbuilderModule","body":"\n                   \n\n\n\n\n    Modules\n    FormbuilderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_bootstrap\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nFormbuilderModule->TranslatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            BaseFieldComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            ErrorDialogSimpleComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            InfoDialogSimpleComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            FormbuilderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.module.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { ngModule: typeof FormbuilderModule; providers: {}; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormbuilderComponent } from './formbuilder.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MAT_DATE_LOCALE, DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectComponent } from './ui-components/select/select.component';\nimport { TextInputComponent } from './ui-components/text-input/text-input.component';\nimport { DateInputComponent } from './ui-components/date-input/date-input.component';\nimport { FileInputComponent } from './ui-components/file-input/file-input.component';\nimport { AutocompleteComponent } from './ui-components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './ui-components/checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './ui-components/radiobutton/radiobutton.component';\nimport { SliderComponent } from './ui-components/slider/slider.component';\nimport { MatMomentDateModule, MomentDateAdapter, MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { BaseFieldComponent } from './classes/field';\nimport { TranslatePipe } from './services/translation.pipe';\nimport { TranslationService } from './services/translation.service';\nimport { ConfigService } from './services/config.service';\nimport { DataFlattnerService } from './services/data-flattner.service';\nimport { ConfirmDialogComponent } from './ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from './ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from './ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TableComponent } from './ui-components/table/table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { SlideToggleComponent } from './ui-components/slideToggle/slideToggle.component';\n\nregisterLocaleData(localeDe, 'de');\n\n@NgModule({\n  declarations: [\n    FormbuilderComponent,\n    BaseFieldComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TranslatePipe,\n    ConfirmDialogComponent,\n    ErrorDialogSimpleComponent,\n    InfoDialogSimpleComponent,\n    TableComponent,\n    SlideToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSliderModule,\n    MatSlideToggleModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'de' },\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n    TranslatePipe\n  ],\n  bootstrap: [FormbuilderComponent],\n  exports: [\n    FormbuilderComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TableComponent,\n    SlideToggleComponent,\n    TranslatePipe\n  ]\n})\n\nexport class FormbuilderModule {\n\n  static forRoot() {\n    return {\n      ngModule: FormbuilderModule,\n      providers: [\n        TranslationService,\n        ConfigService,\n        DataFlattnerService,\n        TranslatePipe\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormbuilderService.html":{"url":"injectables/FormbuilderService.html","title":"injectable - FormbuilderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormbuilderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormbuilderService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAutoCompleteOptions.html":{"url":"interfaces/IAutoCompleteOptions.html","title":"interface - IAutoCompleteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAutoCompleteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entriesPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadAfterPercentscrolled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchAfterNthCharacter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showAsObject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entriesPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entriesPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupBy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadAfterPercentscrolled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadAfterPercentscrolled:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAfterNthCharacter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchAfterNthCharacter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAsObject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAsObject:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAutoCompleteOptions {\n    showAsObject?: {\n        KeyToSave: string | null\n    };\n    groupBy?: boolean;\n    apiEndpoint?: URL;\n    entriesPerPage?: number;\n    searchAfterNthCharacter?: number;\n    loadAfterPercentscrolled?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeEntry.html":{"url":"interfaces/ICodeEntry.html","title":"interface - ICodeEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomValidation.html":{"url":"interfaces/ICustomValidation.html","title":"interface - ICustomValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICustomValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToCheck\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToUpdate\n                                        \n                                \n                                \n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         IDialogConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDialogConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToCheck\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToCheck:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDialogConfig.html":{"url":"interfaces/IDialogConfig.html","title":"interface - IDialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            okAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onCancel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        okAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        okAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onCancel:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IField.html":{"url":"interfaces/IField.html","title":"interface - IField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customValidation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hintlabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlAttribute\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconAction\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipdelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipposition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidatorFn:         AsyncValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AsyncValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     ISliderConfig | ITableViewOptions | IAutoCompleteOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ISliderConfig | ITableViewOptions | IAutoCompleteOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customValidation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customValidation:         ICustomValidation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICustomValidation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintlabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hintlabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlAttribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlAttribute:         IHTMLAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHTMLAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconAction:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ICodeEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICodeEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipdelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipdelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipposition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateOn:     \"change\" | \"blur\" | \"submit\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"change\" | \"blur\" | \"submit\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validatorFn:         ValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:         IValidator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IValidator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlatObject.html":{"url":"interfaces/IFlatObject.html","title":"interface - IFlatObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlatObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForm.html":{"url":"interfaces/IForm.html","title":"interface - IForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iform.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            form\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getForm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/interfaces/iform.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        form:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\nimport { IField, IFormObj } from './ifield';\n\nexport interface IForm {\n  form: FormGroup;\n  name: string;\n\n  getForm(name: string): FormGroup;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormObj.html":{"url":"interfaces/IFormObj.html","title":"interface - IFormObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     IFormObj[] | IField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormObj[] | IField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHTMLAttributes.html":{"url":"interfaces/IHTMLAttributes.html","title":"interface - IHTMLAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHTMLAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autocomplete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autocomplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autocomplete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { ISliderConfig } from './isliderconfig';\nimport { ITableViewOptions } from '../ui-components/table/table.component';\nimport { IAutoCompleteOptions } from './iautocompleteoption';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n  config?: ISliderConfig | ITableViewOptions | IAutoCompleteOptions;\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISliderConfig.html":{"url":"interfaces/ISliderConfig.html","title":"interface - ISliderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISliderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inverted\n                                        \n                                \n                                \n                                        \n                                            showThumb\n                                        \n                                \n                                \n                                        \n                                            showTicks\n                                        \n                                \n                                \n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            tickInterval\n                                        \n                                \n                                \n                                        \n                                            vertical\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inverted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inverted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showThumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showThumb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTicks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTicks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tickInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tickInterval:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertical\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertical:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISliderConfig {\n    step: number;\n    showThumb: boolean;\n    vertical: boolean;\n    inverted: boolean;\n    showTicks: boolean;\n    tickInterval: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableHeader.html":{"url":"interfaces/ITableHeader.html","title":"interface - ITableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collumnKey\n                                        \n                                \n                                \n                                        \n                                            collumnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            widthInPercentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collumnKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collumnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthInPercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widthInPercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\nimport * as moment from 'moment';\n\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n\n  dateStringToDateFilter?: string;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (this.viewOptions.dateStringToDateFilter) {\n      this.dataSource.sortingDataAccessor = (item, property): string | number => {\n        switch (property) {\n          case this.viewOptions.dateStringToDateFilter: {\n            return moment(item[property], 'L', 'de', true).unix();\n          };\n          default: return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableViewOptions.html":{"url":"interfaces/ITableViewOptions.html","title":"interface - ITableViewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableViewOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dateStringToDateFilter\n                                        \n                                \n                                \n                                        \n                                            searchable\n                                        \n                                \n                                \n                                        \n                                            showActions\n                                        \n                                \n                                \n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                        \n                                            showCSVExport\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDeleteAllButton\n                                        \n                                \n                                \n                                        \n                                            showPaginator\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateStringToDateFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateStringToDateFilter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showActions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCSVExport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCSVExport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeleteAllButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDeleteAllButton:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TableType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\nimport * as moment from 'moment';\n\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n\n  dateStringToDateFilter?: string;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (this.viewOptions.dateStringToDateFilter) {\n      this.dataSource.sortingDataAccessor = (item, property): string | number => {\n        switch (property) {\n          case this.viewOptions.dateStringToDateFilter: {\n            return moment(item[property], 'L', 'de', true).unix();\n          };\n          default: return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidator.html":{"url":"interfaces/IValidator.html","title":"interface - IValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ivalidator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IValidator {\n  required?: boolean;\n  maxLength?: number;\n  minLength?: number;\n  max?: number;\n  min?: number;\n  pattern?: string;\n  email?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogSimpleComponent.html":{"url":"components/InfoDialogSimpleComponent.html","title":"component - InfoDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog-simple\n            \n\n            \n                styleUrls\n                ./info-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                infoMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'info'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-info-dialog-simple',\n  templateUrl: './info-dialog-simple.component.html',\n  styleUrls: ['./info-dialog-simple.component.less']\n})\nexport class InfoDialogSimpleComponent implements OnInit {\n\n  public icon = 'info';\n  public infoMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.infoMsg && Array.isArray(this.data.infoMsg)) {\n      this.infoMsg = this.data.infoMsg;\n    } else {\n      this.infoMsg = [String(this.data.infoMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Information\n\n\n\n\n  \n    \n                   {{infoMsg | translate}}\n    \n  \n\n\n\n\n  OK\n\n\n    \n\n    \n                \n                    ./info-dialog-simple.component.less\n                \n                \n#info-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#info-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.info-dialog_message {\n  font-size: 14px;\n  height: 20px;\n  padding: 0;\n  word-break: break-all;\n}\n\nmat-dialog-content#info-dialog_content {\n  padding-left: 50px !important;\n  padding-right: 50px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Information                         {{infoMsg | translate}}        OK'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuNode.html":{"url":"interfaces/MenuNode.html","title":"interface - MenuNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MenuNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decimalseparator\n                                        \n                                \n                                \n                                        \n                                            fieldSeparator\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            noDownload\n                                        \n                                \n                                \n                                        \n                                            nullToEmptyString\n                                        \n                                \n                                \n                                        \n                                            objHeader\n                                        \n                                \n                                \n                                        \n                                            quoteStrings\n                                        \n                                \n                                \n                                        \n                                            showLabels\n                                        \n                                \n                                \n                                        \n                                            showTitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            useBom\n                                        \n                                \n                                \n                                        \n                                            useHeader\n                                        \n                                \n                                \n                                        \n                                            useObjHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decimalseparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimalseparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldSeparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldSeparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullToEmptyString\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nullToEmptyString:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objHeader:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quoteStrings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quoteStrings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTitle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useBom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useObjHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useObjHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadiobuttonComponent.html":{"url":"components/RadiobuttonComponent.html","title":"component - RadiobuttonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadiobuttonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-radiobutton\n            \n\n            \n                styleUrls\n                ./radiobutton.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radiobutton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  styleUrls: ['./radiobutton.component.scss']\n})\nexport class RadiobuttonComponent extends BaseFieldComponent implements OnInit {\n  @Input() options: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n  {{ getName()+'#label' | translate }}\n    \n    \n      \n        {{item.key}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./radiobutton.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ getName()+\\'#label\\' | translate }}                      {{item.key}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadiobuttonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { TranslationService } from '../../services/translation.service';\n\n\n\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent extends BaseFieldComponent implements OnInit {\n  @Input() options?: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.options = this.fs.getConfigByName(this.name).options? this.fs.getConfigByName(this.name).options : this.options;\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Bitte Wählen...\n      \n        {{item.key | translate}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitte Wählen...              {{item.key | translate}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideToggleComponent.html":{"url":"components/SlideToggleComponent.html","title":"component - SlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slidetoggle\n            \n\n            \n                styleUrls\n                ./slideToggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slideToggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slidetoggle',\n  templateUrl: './slideToggle.component.html',\n  styleUrls: ['./slideToggle.component.scss']\n})\nexport class SlideToggleComponent extends BaseFieldComponent implements OnInit {\n  @Input() color: string;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n        {{ getName() + \"#label\" | translate }}\n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slideToggle.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ getName() + \"#label\" | translate }}            {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider\n            \n\n            \n                styleUrls\n                ./slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTickIntervall\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTickIntervall\n                        \n                    \n                \n            \n            \n                \ngetTickIntervall()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if(!this.config && this.field.config) {\n      // console.log(this.field.config);\n      this.config = this.field.config as ISliderConfig;\n    }\n  }\n\n  getTickIntervall() {\n    if (this.config.showTicks) {\n      return this.config.tickInterval > 0 ? this.config.tickInterval : 'auto';\n    }\n\n    return 0;\n  }\n}\n\n    \n\n    \n        \n    \n    \n    {{name+'#label' | translate}}\n\n\n    \n\n    \n                \n                    ./slider.component.scss\n                \n                \nmat-slider {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{name+\\'#label\\' | translate}}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collumnsToBeDisplayed\n                            \n                            \n                                filterControl\n                            \n                            \n                                initialColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                resultsLength\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                csvExport\n                            \n                            \n                                customFilterBasedOnDisplayColumns\n                            \n                            \n                                getDisplayData\n                            \n                            \n                                getFilteredDisplayData\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteRecord\n                            \n                            \n                                onDeleteSelectedRecords\n                            \n                            \n                                onDownload\n                            \n                            \n                                onEdit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                viewOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                delete\n                            \n                            \n                                deleteBulk\n                            \n                            \n                                download\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ts: TranslatePipe)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         ITableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewOptions\n                    \n                \n                \n                    \n                        Type :         ITableViewOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:65\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteBulk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:69\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        csvExport\n                        \n                    \n                \n            \n            \n                \ncsvExport()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:215\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFilterBasedOnDisplayColumns\n                        \n                    \n                \n            \n            \n                \ncustomFilterBasedOnDisplayColumns(data: any, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayData\n                        \n                    \n                \n            \n            \n                \ngetDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredDisplayData\n                        \n                    \n                \n            \n            \n                \ngetFilteredDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:85\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:92\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteRecord\n                        \n                    \n                \n            \n            \n                \nonDeleteRecord(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteSelectedRecords\n                        \n                    \n                \n            \n            \n                \nonDeleteSelectedRecords()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDownload\n                        \n                    \n                \n            \n            \n                \nonDownload(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collumnsToBeDisplayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\nimport * as moment from 'moment';\n\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n\n  dateStringToDateFilter?: string;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showActions) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    if (this.viewOptions.dateStringToDateFilter) {\n      this.dataSource.sortingDataAccessor = (item, property): string | number => {\n        switch (property) {\n          case this.viewOptions.dateStringToDateFilter: {\n            return moment(item[property], 'L', 'de', true).unix();\n          };\n          default: return item[property];\n        }\n      };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    vertical_align_bottom\n  \n  \n  \n\n\n  \n    \n      \n        {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}\n      \n      \n        {{ element[collumn.collumnName] }}\n      \n    \n  \n\n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n    \n    \n      \n        delete_forever\n      \n      \n        edit\n      \n      \n        get_app\n      \n    \n  \n\n  \n  \n\n\n\n  \n    File Upload\n  \n\n  \n  \n    Löschen\n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                table {\n  width: 100%;\n}\n.row {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-bottom: 5px;\n}\n\n\n.long-filter {\n  float: left;\n  width: calc(100% - 520px) !important;\n}\n\n.short-filter {\n  float: left;\n  width: calc(100% - 560px) !important;\n}\n\n#table-export {\n  float: right;\n  margin-top: 8px;\n}\n\n.mat-column-actions {\n  width: 104px !important;\n  white-space: unset !important;\n}\n\n.mat-column-select {\n  width: 50px !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              vertical_align_bottom                          {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}                    {{ element[collumn.collumnName] }}                                                                                delete_forever                    edit                    get_app                      File Upload          Löschen  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputComponent.html":{"url":"components/TextInputComponent.html","title":"component - TextInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-input\n            \n\n            \n                styleUrls\n                ./text-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                internalType\n                            \n                            \n                                rows\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        internalType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:162\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:199\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:166\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => this.ts.data.required_error,\n    maxlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    minlength: param => this.ts.data.minLength_error.replace('${param}', param.requiredLength),\n    max: param => this.ts.data.max_error.replace('${param}', param.max),\n    min: param => this.ts.data.min_error.replace('${param}', param.min),\n    pattern: param => this.ts.data.pattern_error.replace('${param}', param.requiredPattern),\n    email: () => this.ts.data.email_error,\n    matDatepickerParse: () => this.ts.data.datepicker_error\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent extends BaseFieldComponent implements OnInit {\n  @Input() rows = 3;\n  @Input() internalType = 'text';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n      \n        {{ iconBtn }}\n      \n    \n      {{iconBtn}}\n     -->\n    {{ hint }}\n    \n      {{ getErrorMeesage() }}\n    \n  \n  \n    \n      \n  {{ hint }}\n  \n    {{ getErrorMeesage() }}\n  \n\n\n\n    \n\n    \n                \n                    ./text-input.component.scss\n                \n                mat-form-field {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ iconBtn }}                {{iconBtn}}     -->    {{ hint }}          {{ getErrorMeesage() }}                    {{ hint }}      {{ getErrorMeesage() }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TranslatePipe.html":{"url":"pipes/TranslatePipe.html","title":"pipe - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        translate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(key: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: TranslationService) { }\n  transform(key: any): any {\n    // console.log(key);\n    if(key !== 'undefined') {\n// console.log(this.translate.data);\n\n      return this.translate.data[key] || '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _path\n                            \n                            \n                                data\n                            \n                            \n                                lang\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTxtFile\n                            \n                            \n                                deleteKeys\n                            \n                            \n                                getFBData\n                            \n                            \n                                getUserData\n                            \n                            \n                                setLang\n                            \n                            \n                                setPath\n                            \n                            \n                                updateData\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTxtFile\n                        \n                    \n                \n            \n            \n                \naddTxtFile(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteKeys\n                        \n                    \n                \n            \n            \n                \ndeleteKeys(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFBData\n                        \n                    \n                \n            \n            \n                \ngetFBData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPath\n                        \n                    \n                \n            \n            \n                \nsetPath(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'de'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onLangChange: EventEmitter = new EventEmitter();\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onDataChange: EventEmitter = new EventEmitter();\n\n  data: any = {};\n  lang = 'de';\n  userData = {};\n\n  private _path = '';\n  constructor(private http: HttpClient) {\n    this.onLangChange.subscribe(val => {\n      this.lang = val;\n    });\n  }\n\n  setPath(path: string) {\n    this._path = path;\n  }\n\n  addTxtFile(path: string) {\n    return new Promise((resolve, reject) => {\n      const langPath = `${path}${this.lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.updateData(translation);\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          resolve(this.data);\n        }\n      );\n    });\n  }\n\n  getUserData() {\n    let txtFile = {};\n    for(const key in this.userData) {\n      if(this.userData) {\n        Object.assign(txtFile, {\n          [key]: this.data[key]\n        });\n      }\n    }\n    return txtFile;\n  }\n\n  setLang(lang: string) {\n    this.lang = lang;\n    this.use(this.lang);\n    this.onLangChange.emit(this.lang);\n  }\n\n  updateData(data: any) {\n    Object.assign(this.data, data);\n    this.onDataChange.emit(this.data);\n  }\n\n  use(lang: string): Promise {\n    return new Promise((resolve, reject) => {\n      const langPath = `${this._path}${lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.data = Object.assign({}, translation || {});\n          this.lang = lang;\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n\n  deleteKeys(data: any) {\n    // this.data.\n    let newdata = {};\n    for (let [key, value] of Object.entries(this.data)) {\n      console.log(key + ':' + value);\n      let found = false;\n      for (let [key2, value2] of Object.entries(data)) {\n        if(key !== key2) { found = true; }\n        // console.log(key + ':' + value);\n      }\n      if(!found) {\n        Object.assign(newdata, {[key]: value});\n      }\n    }\n    this.data = newdata;\n  }\n\n  getFBData() {\n    let txtFile = {};\n    for(const key in this.data) {\n      if(!this.userData[key]) {\n        Object.assign(txtFile, {\n          [key]: this.data[key]\n        });\n      }\n    }\n    return txtFile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiBaseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                headers\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                addUserAndRoles\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                editUserAndRoles\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogService: DialogService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserAndRoles\n                        \n                    \n                \n            \n            \n                \naddUserAndRoles(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReplaySubject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserAndRoles\n                        \n                    \n                \n            \n            \n                \neditUserAndRoles(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(url: string, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets current users profile.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the allowed actions of the current user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:71\n                \n            \n\n\n            \n                \n                    get all users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRoles\n                        \n                    \n                \n            \n            \n                \nupdateRoles(url: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {headers: this.headers}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { DialogService } from './dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8');\n\n  private options = {headers: this.headers};\n\n  apiBaseUrl: string;\n\n  constructor(private http: HttpClient,\n    private dialogService: DialogService\n  ) {\n    this.apiBaseUrl = '/api';\n  }\n\n  login(credentials: any, url: string): Observable {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Charset', 'UTF-8')\n      .set('Authorization', 'Basic ' + btoa(credentials));\n\n    const options: Object = {\n      headers: headers,\n      observe: 'response',\n      withCredentials: true\n    };\n    return this.http.post(url, null, options);\n  }\n\n  logout(url: string): Observable {\n    this.options = {headers: this.headers};\n    return this.http.delete(url, this.options);\n  }\n\n  /**\n   * Gets current users profile.\n   */\n  getUserProfile(url: string): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/profile`, options);\n\n    return this.http.get(url, this.options);\n  }\n\n  /**\n   * Get the allowed actions of the current user\n   */\n  getUserRoles(url: string): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/role`, options)\n    //   .pipe(\n    //     map(value => value['actions'])\n    //   );\n    return this.http.get(url, this.options);\n  }\n\n  /**\n   * get all users\n   */\n  getUsers(url: string): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    return this.http.get(url, this.options);\n  }\n\n  getUser(url: string, userId: number): Observable {\n    return this.http.get(`${url}${userId}`, this.options);\n  }\n\n  addUser(url: string, user: any): Observable {\n    return this.http.post(url, JSON.stringify(user), this.options);\n  }\n\n  addUserAndRoles(url: string, user: any): ReplaySubject {\n    // check if bkuUser already exists\n    const done = new ReplaySubject(1);\n    this.addUser(url, user).subscribe(addUserRes => {\n      user.id = addUserRes.id;\n      this.updateRoles(url, user).subscribe(updateRoleResp => done.next(updateRoleResp));\n    }, error => {\n      this.dialogService.showErrorDialog('Error');\n    });\n    return done;\n  }\n\n  editUser(url: string, user: any): Observable {\n    return this.http.put(`${url}${user.id}`, JSON.stringify(user), this.options);\n  }\n\n  editUserAndRoles(url: string, user: any): Observable {\n    return forkJoin(this.editUser(url, user), this.updateRoles(url, user));\n  }\n\n  deleteUser(url: string, user: any): Observable {\n    return this.http.delete(`${url}${user.id}`, this.options);\n  }\n\n  updateRoles(url: string, user: any) {\n    const rolesObject = {\n      'roles': user.roles\n    };\n    return this.http.put(`${url}${user.id}`, JSON.stringify(rolesObject), this.options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            AngularCsv\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            CsvConfigConsts\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            objectAssign\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            toObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            ConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            hasOwnProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            propIsEnumerable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/field.ts\n            \n            component\n            BaseFieldComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.component.ts\n            \n            component\n            FormbuilderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.service.ts\n            \n            injectable\n            FormbuilderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n            \n            interface\n            IAutoCompleteOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            ICustomValidation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            IDialogConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            ICodeEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IField\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IFormObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IHTMLAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iform.ts\n            \n            interface\n            IForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            class\n            AutoSearch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            interface\n            MenuNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n            \n            interface\n            ISliderConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ivalidator.ts\n            \n            interface\n            IValidator\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            injectable\n            DataConnectorService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            interface\n            searchObj\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            injectable\n            DataFlattnerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            interface\n            IFlatObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            function\n            difference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.pipe.ts\n            \n            pipe\n            TranslatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            function\n            checkKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            variable\n            _filter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n            \n            component\n            DateInputComponent\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n            \n            component\n            ErrorDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n            \n            component\n            InfoDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n            \n            component\n            RadiobuttonComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n            \n            component\n            SlideToggleComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableViewOptions\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n            \n            component\n            TextInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.9\n        \n            @angular/cdk : ~12.2.9\n        \n            @angular/common : ~12.2.9\n        \n            @angular/compiler : ^12.2.9\n        \n            @angular/core : ~12.2.9\n        \n            @angular/forms : ~12.2.9\n        \n            @angular/localize : ^12.2.9\n        \n            @angular/material : ^12.2.9\n        \n            @angular/material-moment-adapter : ^12.2.9\n        \n            @angular/platform-browser : ~12.2.9\n        \n            @angular/platform-browser-dynamic : ~12.2.9\n        \n            @angular/router : ~12.2.9\n        \n            @types/pouchdb : ^6.4.0\n        \n            body-parser : ^1.19.0\n        \n            express : ^4.17.1\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.1\n        \n            util : ^0.12.4\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableType   (projects/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TableType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : FILE\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkKey   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            difference   (projects/.../form.service.ts)\n                        \n                        \n                            objectAssign   (projects/.../angular-csv.ts)\n                        \n                        \n                            toObject   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkKey\n                        \n                    \n                \n            \n            \n                \ncheckKey(ts: TranslationService, item: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ts\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/services/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        difference\n                        \n                    \n                \n            \n            \n                \ndifference(newObj: any, origObj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    origObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        objectAssign\n                        \n                    \n                \n            \n            \n                \nobjectAssign(target: any, ...source: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Assign data  to new Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toObject\n                        \n                    \n                \n            \n            \n                \ntoObject(val: any)\n                \n            \n\n\n\n\n            \n                \n                    Convet to Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularFormbuilder\nThis project was generated with Angular CLI version 12.\nRequirements:\nNodejs Version 14\nangular CLI Version 12\nSet Up\nTo start the Application run:\nnpm install\nRun\nnpm start\nto serve the main Application\nRun \nnpm startFB\nto start the Formbuilder UI\nNOTE:\nFor the Formbuilder UI to work you need to start the express server with:\nDEBUG=express:* node ./projects/server/app.js\nOptional:\nYou can run and build all projects with their names after the ng command: ng serve formbuilderui (formbuilder | formbuilderui| formbuilderapp)\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nTo start the generating server run DEBUG=express:* node ./server/app.js\nIncluded in this Repo are:\nProject: FormbuilderApp, FormbuilderUi\nLibraries: Angular Formbuilder\nCode scaffolding\nRun ng generate component component-name in 'src/app/' to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FormbuilderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nFormbuilderModule->TranslatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/searchObj.html":{"url":"interfaces/searchObj.html","title":"interface - searchObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  searchObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _filter   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            ConfigDefaults   (projects/.../angular-csv.ts)\n                        \n                        \n                            hasOwnProperty   (projects/.../angular-csv.ts)\n                        \n                        \n                            propIsEnumerable   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (opt: any[], value: string, ts:TranslationService): string[] => {\n  const filterValue = value.toLowerCase();\n  if (opt) {\n    if (typeof opt[0] === 'string') {\n      return opt.filter(item => checkKey(ts, item, filterValue));\n    } else {\n      return opt.filter(\n        item => checkKey(ts, item.name, filterValue)\n      );\n    }\n  } else {\n    return [];\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOwnProperty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.hasOwnProperty\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propIsEnumerable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.propertyIsEnumerable\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
