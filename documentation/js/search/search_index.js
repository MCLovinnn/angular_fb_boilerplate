var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AngularCsv.html",[0,0.274,1,1.865]],["body/classes/AngularCsv.html",[0,0.275,1,1.872,2,1.643,3,0.116,4,0.163,5,0.087,6,4.002,7,1.398,8,0.218,9,0.354,10,1.501,11,3.383,12,3.474,13,1.726,14,2.557,15,4.487,16,3.383,17,0.709,18,3.646,19,3.795,20,3.795,21,3.795,22,3.795,23,3.795,24,3.795,25,4.118,26,3.646,27,0.437,28,2.779,29,0.513,30,1.798,31,1.044,32,3.646,33,0.911,34,0.021,35,0.499,36,0.306,37,0.431,38,3.383,39,1.811,40,2.375,41,0.571,42,0.306,43,2.375,44,2.375,45,2.317,46,2.375,47,2.779,48,2.375,49,2.779,50,2.146,51,1.184,52,2.375,53,2.522,54,2.146,55,2.375,56,4.213,57,2.93,58,1.418,59,2.375,60,2.779,61,2.146,62,4.321,63,2.375,64,2.375,65,1.359,66,2.375,67,2.439,68,2.779,69,2.375,70,2.522,71,2.779,72,1.196,73,0.244,74,0.196,75,2,76,2,77,2,78,2,79,1.06,80,2,81,2,82,2,83,2.522,84,2,85,2.522,86,2.522,87,2.522,88,1.509,89,1.811,90,1.811,91,1.811,92,1.811,93,1.811,94,1.811,95,1.811,96,1.811,97,1.655,98,1.811,99,1.811,100,1.811,101,1.811,102,1.811,103,1.811,104,0.748,105,1.811,106,1.811,107,1.811,108,1.811,109,1.811,110,1.811,111,1.629,112,2.317,113,1.643,114,1.643,115,1.643,116,1.643,117,1.643,118,1.643,119,1.643,120,1.643,121,1.643,122,1.643,123,1.643,124,1.643,125,1.643,126,1.643,127,1.399,128,1.079,129,2.14,130,1.811,131,2.779,132,1.509,133,2.779,134,1.811,135,2.06,136,1.537,137,1.811,138,1.811,139,3.676,140,1.811,141,4.761,142,1.811,143,1.811,144,1.811,145,1.811,146,1.811,147,2.779,148,2.035,149,1.811,150,1.811,151,1.811,152,1.811,153,1.811,154,1.811,155,1.811,156,0.961,157,1.811,158,1.811,159,1.811,160,2.779,161,2.779,162,2.779,163,1.811,164,1.811,165,1.811,166,1.643,167,1.811,168,1.811,169,1.811,170,1.811,171,1.811,172,1.811,173,1.811,174,1.811,175,1.811,176,1.811,177,1.811,178,1.811,179,1.811,180,1.811,181,4.66,182,1.811,183,1.811,184,4.094,185,3.795,186,3.795,187,2.779,188,1.811,189,2,190,2,191,2,192,2.146,193,1.811,194,1.811,195,2.779,196,1.811,197,1.811,198,3.383,199,1.811,200,2.779,201,1.811,202,1.811,203,1.811,204,3.383,205,1.811,206,1.811,207,1.811,208,1.811,209,1.509,210,1.643,211,1.509,212,1.643,213,1.643,214,1.811,215,1.872,216,1.643,217,2.146,218,1.477,219,1.872,220,1.811,221,1.811,222,1.643,223,1.811,224,1.811,225,1.643,226,1.509,227,1.643,228,1.811,229,1.811,230,2.779,231,0.01,232,0.01]],["title/injectables/AuthenticationService.html",[233,0.919,234,2.77]],["body/injectables/AuthenticationService.html",[0,0.206,3,0.134,4,0.1,5,0.1,8,0.134,9,0.393,10,1.61,13,1.436,14,0.991,17,0.786,27,0.502,29,0.505,31,1.095,33,1.17,34,0.021,35,0.671,36,0.318,37,0.553,41,1.159,42,0.734,51,1.303,58,1.61,65,1.443,73,0.134,79,1.129,97,1.82,104,1.304,111,2.124,136,1.547,148,1.663,218,1.639,231,0.011,232,0.011,233,1.024,234,3.083,235,1.238,236,2.335,237,4.823,238,4.132,239,4.823,240,4.132,241,5.337,242,4.884,243,5.337,244,5.337,245,4.132,246,3.465,247,5.973,248,5.337,249,5.337,250,4.045,251,3.465,252,4.823,253,2.725,254,5.973,255,4.278,256,4.823,257,3.692,258,4.045,259,2.725,260,4.045,261,4.045,262,5.701,263,3.465,264,4.045,265,4.045,266,4.045,267,4.045,268,4.045,269,4.045,270,4.045,271,4.045,272,2.725,273,2.725,274,4.045,275,4.045,276,4.045,277,4.045,278,4.045,279,4.045,280,2.725,281,4.045,282,5.337,283,2.725,284,4.045,285,4.132,286,4.045,287,2.725,288,2.725,289,2.725,290,2.725,291,4.045,292,2.725,293,2.725,294,4.045,295,3.356,296,2.725,297,1.885,298,2.725,299,2.725,300,2.725,301,2.725,302,2.725,303,0.719,304,0.328,305,2.335,306,2.725,307,1.495,308,4.823,309,2.077,310,2.725,311,2.725,312,1.168,313,1.168,314,2.077,315,1.168,316,1.399,317,2.725,318,2.725,319,5.337,320,4.045,321,5.337,322,2.725,323,4.045,324,4.045,325,2.725,326,4.823,327,4.823,328,4.132,329,2.335,330,2.725,331,2.725,332,2.725,333,2.725,334,2.725,335,2.725,336,4.045,337,2.725,338,2.725,339,4.823,340,4.823,341,4.045,342,2.725,343,2.725,344,4.045,345,3.465,346,2.725,347,2.725,348,2.725,349,2.725,350,2.725,351,2.725,352,4.823,353,2.725,354,2.725,355,5.701,356,2.725,357,2.725,358,2.725,359,2.335,360,2.725,361,4.045,362,4.045,363,4.045,364,2.725,365,2.725,366,2.725,367,2.725,368,5.337,369,4.823,370,2.725,371,4.045,372,2.725,373,2.725,374,3.083,375,2.725,376,2.725,377,2.725,378,2.725,379,2.725,380,2.725,381,2.725,382,2.725,383,2.725,384,2.725,385,3.065,386,2.725,387,2.725,388,2.725,389,2.725,390,4.045,391,2.077,392,2.725,393,2.725,394,2.725,395,2.725,396,2.725]],["title/classes/AutoSearch.html",[0,0.274,397,2.309]],["body/classes/AutoSearch.html",[0,0.416,2,3.813,3,0.27,4,0.202,5,0.202,8,0.27,9,0.628,29,0.546,31,1.004,34,0.02,35,0.797,36,0.317,37,0.628,73,0.317,74,0.455,231,0.017,232,0.017,397,4.508,398,4.202,399,3.891,400,5.512,401,5.512,402,4.114]],["title/components/BaseFieldComponent.html",[403,0.498,404,1.073]],["body/components/BaseFieldComponent.html",[0,0.157,3,0.162,4,0.077,5,0.121,8,0.102,9,0.32,10,0.982,13,1.533,17,0.641,27,0.607,29,0.5,31,1.137,33,0.839,34,0.021,35,0.675,36,0.353,37,0.397,41,1.533,42,0.861,51,1.219,58,1.215,65,0.528,72,1.691,73,0.102,79,0.711,97,1.418,104,0.677,111,1.079,127,0.801,135,2.482,136,1.283,156,1.005,217,1.228,218,2.177,231,0.009,232,0.009,303,0.678,304,0.251,315,1.413,403,0.561,404,1.586,405,1.137,406,0.759,407,0.72,408,1.788,409,1.025,410,1.866,411,1.337,412,0.72,413,2.209,414,2.079,415,1.486,416,2.048,417,1.199,418,2.238,419,2.437,420,1.97,421,1.856,422,1.97,423,1.939,424,2.238,425,2.238,426,1.59,427,2.238,428,2.238,429,2.238,430,2.238,431,1.519,432,1.59,433,2.238,434,1.497,435,1.567,436,1.337,437,1.97,438,1.409,439,1.337,440,1.751,441,1.567,442,1.781,443,1.567,444,1.567,445,1.567,446,1.97,447,2.295,448,2.295,449,2.295,450,2.295,451,1.567,452,2.295,453,1.567,454,1.567,455,1.006,456,1.939,457,2.295,458,1.743,459,3.296,460,2.087,461,1.866,462,2.087,463,1.567,464,2.087,465,1.27,466,2.087,467,2.087,468,1.856,469,2.087,470,2.087,471,2.087,472,1.409,473,2.087,474,1.337,475,2.087,476,2.087,477,2.087,478,1.33,479,2.087,480,2.087,481,2.087,482,2.087,483,1.59,484,2.087,485,2.087,486,2.087,487,2.087,488,1.519,489,2.087,490,2.087,491,2.087,492,2.087,493,2.087,494,1.59,495,2.087,496,2.087,497,2.087,498,2.087,499,2.087,500,2.087,501,1.59,502,2.087,503,2.087,504,2.087,505,2.087,506,2.087,507,2.238,508,1.497,509,1.497,510,1.59,511,1.59,512,1.59,513,2.238,514,1.59,515,1.59,516,1.59,517,1.59,518,2.238,519,1.59,520,1.59,521,1.59,522,2.108,523,1.59,524,1.59,525,1.59,526,1.59,527,1.59,528,1.59,529,1.59,530,1.59,531,1.59,532,1.59,533,2.087,534,2.087,535,1.444,536,2.087,537,1.145,538,2.087,539,1.145,540,0.585,541,1.006,542,0.948,543,3.296,544,0.973,545,2.087,546,2.087,547,2.087,548,2.087,549,2.087,550,2.087,551,2.087,552,2.087,553,2.087,554,2.087,555,2.087,556,4.642,557,3.296,558,2.087,559,2.087,560,2.087,561,2.087,562,2.087,563,3.296,564,2.087,565,4.086,566,2.087,567,2.087,568,4.086,569,2.087,570,2.087,571,4.086,572,4.086,573,5.054,574,4.086,575,5.054,576,5.373,577,3.296,578,2.087,579,2.087,580,5.054,581,2.087,582,5.054,583,2.087,584,5.054,585,2.087,586,5.054,587,2.087,588,2.087,589,3.296,590,3.296,591,4.086,592,3.296,593,2.087,594,3.296,595,2.087,596,2.087,597,2.087,598,2.087,599,2.087,600,1.788,601,3.296,602,2.087,603,2.087,604,2.087,605,2.087,606,2.087,607,3.296,608,2.087,609,3.296,610,2.087,611,2.087,612,2.087,613,2.087,614,2.087,615,0.759,616,1.137,617,1.199,618,0.759,619,1.688,620,0.759,621,0.649,622,0.759,623,0.759,624,0.616,625,0.759,626,0.585,627,0.72,628,0.759,629,0.616,630,0.759,631,1.199,632,0.585,633,0.834,634,1.199,635,0.616,636,0.616,637,0.759,638,0.759,639,0.585,640,0.616,641,0.759,642,0.616,643,0.759,644,0.616,645,0.759,646,0.616,647,0.759,648,0.556,649,0.759,650,0.616,651,0.759,652,0.759]],["title/components/CheckboxComponent.html",[403,0.498,624,1.073]],["body/components/CheckboxComponent.html",[0,0.195,3,0.191,4,0.095,5,0.143,8,0.127,9,0.377,10,0.934,13,1.566,17,0.756,27,0.476,29,0.512,31,1.158,33,0.959,34,0.021,35,0.683,36,0.362,37,0.453,41,1.63,42,0.889,51,1.287,58,1.249,65,0.654,72,1.123,73,0.127,79,0.676,97,0.725,104,0.53,127,0.991,135,2.331,156,0.841,231,0.01,232,0.01,303,0.671,304,0.311,315,1.107,403,0.641,404,2.213,405,1.341,406,0.939,407,0.891,409,1.208,410,1.452,411,1.529,412,0.891,413,2.293,414,2.163,415,0.939,416,1.575,417,0.939,418,2.506,419,2.824,420,1.874,421,1.765,422,1.874,423,2.247,424,2.253,425,2.253,426,1.874,427,2.93,428,2.253,429,2.253,430,2.253,431,1.701,432,1.874,433,2.253,434,1.765,435,1.491,436,1.272,437,1.874,438,1.341,439,1.272,440,1.666,441,1.491,442,1.491,443,1.491,444,1.491,445,1.491,446,1.874,447,2.122,448,2.122,449,2.122,450,2.122,451,1.491,452,2.122,453,1.491,454,1.491,455,1.246,456,2.138,457,2.531,458,1.922,461,1.616,463,0.991,465,0.803,468,1.173,472,0.891,474,1.272,478,1.186,483,1.246,488,0.846,494,1.246,501,1.246,507,1.874,508,1.173,509,1.173,510,1.246,511,1.246,512,1.246,513,1.874,514,1.246,515,1.246,516,1.246,517,1.246,518,1.874,519,1.246,520,1.246,521,1.246,522,1.765,523,1.246,524,1.246,525,1.246,526,1.246,527,1.246,528,1.246,529,1.246,530,1.246,531,1.246,532,1.246,540,0.725,541,1.246,542,1.173,544,0.763,600,4.453,615,0.939,616,1.341,617,1.413,618,0.939,619,1.89,620,0.939,621,0.803,622,0.939,623,0.939,624,1.535,625,0.939,626,0.725,627,0.891,628,0.939,629,0.763,630,0.939,631,1.413,632,0.725,633,0.984,634,1.413,635,0.763,636,0.763,637,0.939,638,0.939,639,0.725,640,0.763,641,0.939,642,0.763,643,0.939,644,0.763,645,0.939,646,0.763,647,0.939,648,0.688,649,0.939,650,0.763,651,0.939,652,0.939,653,0.991,654,1.38,655,2.213,656,1.996,657,3.887,658,1.413,659,4.672,660,1.413,661,3.887,662,4.672,663,3.887,664,3.887,665,3.827,666,1.326,667,1.326,668,1.326,669,1.326,670,1.326,671,1.326,672,1.326,673,1.326,674,1.326,675,1.326,676,1.326,677,1.326,678,1.326,679,1.326,680,1.326,681,1.326,682,1.326,683,1.326,684,1.326,685,1.326,686,1.326,687,1.326,688,1.97,689,1.326,690,1.326,691,1.326,692,1.326,693,1.326,694,1.326,695,1.326,696,1.326,697,1.326,698,1.326,699,1.787,700,1.521,701,1.521,702,1.326,703,1.326,704,1.326,705,1.246,706,1.326,707,1.326,708,1.326,709,2.669,710,3.887]],["title/injectables/ConfigService.html",[233,0.919,711,2.309]],["body/injectables/ConfigService.html",[0,0.293,3,0.19,4,0.142,5,0.215,8,0.19,9,0.504,14,2.272,17,1.01,27,0.714,29,0.293,31,1.092,33,1.201,34,0.021,35,0.702,36,0.336,37,0.568,41,0.933,42,0.916,51,1.215,58,0.933,61,2.285,65,1.648,73,0.19,111,2.306,127,1.992,129,1.872,136,1.426,156,1.267,218,1.573,231,0.014,232,0.014,233,1.314,235,1.763,251,4.449,297,3.592,303,0.807,304,0.467,307,2.129,312,1.664,313,1.664,316,1.993,397,4.35,399,2.129,402,2.467,407,2.155,410,1.614,440,1.664,478,1.335,535,2.685,711,3.3,712,3.325,713,5.852,714,5.852,715,5.852,716,5.193,717,5.193,718,5.852,719,5.852,720,2.685,721,3.971,722,5.193,723,3.3,724,5.193,725,6.248,726,3.881,727,4.449,728,3.592,729,6.248,730,5.193,731,3.592,732,5.193,733,3.881,734,3.881,735,3.881,736,5.013,737,3.881,738,3.881,739,3.881,740,3.881,741,2.129,742,3.325,743,3.881,744,2.285,745,5.852,746,3.881,747,3.881,748,3.881,749,5.193,750,5.193,751,3.881,752,5.193,753,5.193,754,3.881,755,3.208,756,3.881,757,3.881,758,3.881,759,3.881,760,3.592,761,3.881,762,3.881,763,3.881,764,3.881,765,3.881,766,3.881,767,3.881,768,3.325,769,3.881]],["title/components/ConfirmDialogComponent.html",[403,0.498,626,1.019]],["body/components/ConfirmDialogComponent.html",[0,0.273,3,0.243,4,0.133,5,0.182,8,0.177,9,0.48,10,0.869,13,1.718,14,2.207,17,0.962,27,0.911,29,0.48,31,1.017,33,0.742,34,0.02,35,0.634,36,0.312,37,0.351,41,1.19,42,0.637,51,0.703,58,0.869,72,0.869,73,0.177,104,0.742,128,1.642,136,0.825,148,1.707,231,0.013,232,0.013,303,0.596,304,0.435,403,0.774,404,1.068,405,1.707,406,1.315,407,1.247,409,1.539,411,1.847,412,1.247,413,2.402,414,2.272,415,1.315,417,1.315,431,1.987,474,1.184,544,1.068,615,1.315,616,1.707,617,1.8,618,1.315,619,2.207,620,1.315,621,1.124,622,1.315,623,1.315,624,1.068,625,1.315,626,1.702,627,2.445,628,1.315,629,1.068,630,1.315,631,1.8,632,1.014,633,1.609,634,1.8,635,1.068,636,1.068,637,1.315,638,1.315,639,1.014,640,1.068,641,1.315,642,1.068,643,1.315,644,1.068,645,1.315,646,1.068,647,1.315,648,0.963,649,1.315,650,1.068,651,1.315,652,1.315,653,1.387,654,1.984,658,1.8,660,1.8,709,2.541,770,4.649,771,4.649,772,3.098,773,5.644,774,4.95,775,4.302,776,3.6,777,4.398,778,2.756,779,3.904,780,4.199,781,4.95,782,3.616,783,2.502,784,3.773,785,3.616,786,3.616,787,4.95,788,3.616,789,2.756,790,2.756,791,1.856,792,2.756,793,3.773,794,2.756,795,4.95,796,4.95,797,4.835,798,5.644,799,5.644,800,3.616,801,4.95,802,4.95,803,3.773,804,2.502,805,3.424,806,2.756,807,2.298,808,2.502,809,2.756,810,2.756,811,2.756,812,4.302,813,2.756,814,4.627,815,2.756,816,3.424,817,2.756,818,2.756,819,2.756,820,2.756,821,3.424,822,3.616,823,2.756,824,2.756,825,3.773,826,3.773,827,2.756]],["title/classes/CsvConfigConsts.html",[0,0.274,88,2.309]],["body/classes/CsvConfigConsts.html",[0,0.272,1,1.203,2,1.62,3,0.115,4,0.161,5,0.086,6,4.056,7,1.379,8,0.216,9,0.35,10,1.057,11,1.786,12,2.909,13,1.678,14,2.487,15,4.063,16,1.786,19,1.786,20,1.786,21,1.786,22,1.786,23,1.786,24,1.786,25,4.406,28,1.786,29,0.516,30,1.576,31,1.06,34,0.021,36,0.311,38,2.75,41,1.644,42,0.88,45,1.489,47,1.786,49,1.786,53,1.62,54,1.379,56,3.419,57,2.123,58,1.057,60,1.786,61,1.379,62,3.767,65,1.351,67,2.244,68,1.786,70,1.62,71,1.786,72,1.057,73,0.242,74,0.193,75,1.979,76,1.979,77,1.979,78,1.979,79,1.055,80,1.979,81,1.979,82,1.979,83,2.496,84,1.979,85,2.496,86,2.496,87,2.496,88,2.292,89,3.354,90,2.75,91,3.354,92,2.75,93,3.354,94,3.354,95,3.354,96,3.354,97,1.863,98,3.354,99,2.75,100,3.354,101,2.75,102,3.354,103,3.354,104,0.903,105,3.354,106,3.354,107,3.354,108,3.354,109,3.354,110,3.354,111,1.618,112,2.292,113,1.62,114,1.62,115,1.62,116,1.62,117,1.62,118,1.62,119,1.62,120,1.62,121,1.62,122,1.62,123,1.62,124,1.62,125,1.62,126,1.62,127,1.384,128,1.064,129,2.121,130,1.786,131,2.75,132,1.489,133,2.75,134,1.786,135,2.047,136,1.532,137,1.786,138,1.786,139,3.661,140,1.786,141,4.741,142,1.786,143,1.786,144,1.786,145,1.786,146,1.786,147,2.75,148,2.025,149,1.786,150,1.786,151,1.786,152,1.786,153,1.786,154,1.786,155,1.786,156,0.952,157,1.786,158,1.786,159,1.786,160,2.75,161,2.75,162,2.75,163,1.786,164,1.786,165,1.786,166,1.62,167,1.786,168,1.786,169,1.786,170,1.786,171,1.786,172,1.786,173,1.786,174,1.786,175,1.786,176,1.786,177,1.786,178,1.786,179,1.786,180,1.786,181,4.646,182,1.786,183,1.786,184,4.068,185,3.767,186,3.767,187,2.75,188,1.786,189,1.979,190,1.979,191,1.979,192,2.123,193,1.786,194,1.786,195,2.75,196,1.786,197,1.786,198,3.354,199,1.786,200,2.75,201,1.786,202,1.786,203,1.786,204,3.354,205,1.786,206,1.786,207,1.786,208,1.786,209,1.489,210,1.62,211,1.489,212,1.62,213,1.62,214,1.786,215,1.852,216,1.62,217,2.123,218,1.462,219,1.852,220,1.786,221,1.786,222,1.62,223,1.786,224,1.786,225,1.62,226,1.489,227,1.62,228,1.786,229,1.786,230,2.75,231,0.01,232,0.01,828,2.342,829,2.342,830,2.342,831,2.342,832,2.342,833,2.342,834,2.342,835,2.342,836,2.342,837,2.342,838,2.342,839,2.342,840,2.342,841,2.342,842,2.342,843,2.342]],["title/injectables/DataConnectorService.html",[233,0.919,844,2.513]],["body/injectables/DataConnectorService.html",[0,0.256,3,0.166,4,0.124,5,0.124,8,0.166,9,0.459,17,0.92,27,0.624,29,0.57,30,1.397,31,1.074,33,1.382,34,0.021,35,0.757,36,0.347,37,0.654,41,1.137,42,0.76,51,1.31,56,3.274,57,3.21,67,2.82,72,0.814,73,0.232,74,0.279,104,0.695,136,1.625,148,2.036,156,0.733,231,0.013,232,0.013,233,1.198,235,1.539,303,0.711,304,0.408,307,1.858,309,2.583,312,1.452,313,1.452,314,5.465,316,1.739,374,3.607,416,1.917,474,1.109,544,1,720,2.344,721,3.751,723,3.007,744,1.994,807,3.751,844,3.274,845,4.124,846,2.583,847,4.499,848,3.465,849,4.732,850,4.732,851,5.057,852,4.732,853,4.732,854,4.732,855,4.054,856,6.142,857,3.388,858,5.656,859,4.054,860,3.388,861,4.054,862,3.388,863,4.054,864,5.32,865,5.32,866,3.388,867,4.054,868,3.388,869,3.388,870,4.054,871,3.388,872,4.054,873,3.388,874,4.499,875,4.157,876,2.902,877,4.054,878,3.274,879,2.902,880,2.902,881,3.274,882,4.499,883,2.902,884,2.902,885,3.607,886,2.902,887,2.902,888,2.902,889,2.902,890,4.671,891,2.902,892,2.902,893,2.902,894,2.902,895,2.902,896,2.902,897,2.902,898,2.902,899,2.583,900,2.902]],["title/injectables/DataFlattnerService.html",[233,0.919,741,1.993]],["body/injectables/DataFlattnerService.html",[0,0.273,3,0.177,4,0.133,5,0.133,8,0.177,13,1.356,17,0.962,25,4.172,27,1.038,29,0.373,31,0.985,33,1.245,34,0.021,35,0.682,36,0.353,37,0.589,39,3.771,42,0.465,45,3.143,51,1.18,61,3.32,65,1.777,73,0.243,74,0.298,79,0.629,97,1.013,104,0.741,111,2.339,129,2.925,136,1.497,139,2.126,148,1.246,215,2.539,218,2.286,219,2.539,226,3.143,231,0.013,232,0.013,233,1.252,235,1.64,297,4.197,303,0.435,304,0.435,312,1.548,313,1.548,478,1.128,539,1.981,741,2.713,755,2.896,845,3.863,901,2.754,902,5.197,903,5.621,904,4.946,905,5.197,906,3.612,907,4.237,908,5.861,909,3.612,910,4.237,911,3.612,912,4.237,913,4.237,914,3.612,915,3.902,916,3.612,917,3.612,918,3.094,919,3.094,920,3.094,921,4.832,922,4.237,923,3.094,924,3.094,925,4.237,926,3.094,927,4.832,928,5.197,929,3.094,930,3.094,931,4.237,932,3.094,933,3.094,934,3.094,935,3.094,936,5.444,937,3.094,938,3.094,939,3.094,940,3.094,941,3.094,942,3.094,943,3.094,944,4.237,945,4.237,946,5.197,947,4.237,948,4.237,949,2.912,950,3.094,951,4.832,952,5.444,953,3.094,954,3.094,955,3.094]],["title/injectables/DataStoreService.html",[233,0.919,257,2.513]],["body/injectables/DataStoreService.html",[0,0.32,3,0.208,4,0.156,5,0.156,8,0.208,9,0.534,10,1.722,13,1.8,17,1.07,27,1.125,31,1.12,33,1.254,34,0.02,35,0.687,36,0.337,37,0.593,41,1.469,42,0.863,51,1.336,58,1.611,65,1.547,73,0.208,79,1.064,136,1.395,156,1.487,231,0.015,232,0.015,233,1.393,235,1.926,238,5.237,240,5.237,257,3.809,303,0.663,304,0.511,307,2.326,312,1.818,313,1.818,328,3.633,345,3.633,736,5.743,845,4.286,956,3.633,957,6.112,958,6.469,959,6.469,960,6.469,961,5.505,962,5.505,963,5.505,964,5.505,965,4.241,966,6.14,967,4.241,968,4.241,969,5.505,970,4.241,971,5.505,972,4.241,973,5.505,974,4.241,975,4.241,976,5.542,977,4.241,978,5.505,979,4.241,980,4.241,981,4.241,982,4.241,983,4.241]],["title/components/DateInputComponent.html",[403,0.498,629,1.073]],["body/components/DateInputComponent.html",[0,0.198,3,0.192,4,0.096,5,0.144,8,0.128,9,0.381,10,1.132,13,1.571,17,0.763,27,0.482,29,0.507,31,1.158,33,0.966,34,0.02,35,0.686,36,0.361,37,0.457,41,1.616,42,0.883,51,1.291,58,1.257,65,0.663,72,1.132,73,0.128,79,0.683,97,0.734,104,0.537,127,1.004,135,2.341,156,0.85,231,0.01,232,0.01,303,0.709,304,0.315,315,1.122,403,0.646,404,2.215,405,1.354,406,0.952,407,0.903,409,1.22,410,1.464,411,1.542,412,0.903,413,2.297,414,2.167,415,0.952,416,1.591,417,0.952,418,2.523,419,2.838,420,1.893,421,1.783,422,1.893,423,2.258,424,2.703,425,2.271,426,1.893,427,2.271,428,2.271,429,2.271,430,2.271,431,1.713,432,1.893,433,2.271,434,1.783,435,1.506,436,1.285,437,1.893,438,1.354,439,1.285,440,1.682,441,2.007,442,1.506,443,1.506,444,1.506,445,1.506,446,1.893,447,2.139,448,2.139,449,2.139,450,2.139,451,1.506,452,2.139,453,1.506,454,1.506,455,1.262,456,2.15,457,2.545,458,1.933,461,1.626,463,1.004,465,0.814,468,1.189,472,0.903,474,1.285,478,1.194,483,1.262,488,0.857,494,1.262,501,1.262,507,1.893,508,1.189,509,1.189,510,1.262,511,1.262,512,1.262,513,1.893,514,1.262,515,1.262,516,1.262,517,1.262,518,1.893,519,1.262,520,1.262,521,1.262,522,1.783,523,1.262,524,1.262,525,1.262,526,1.262,527,1.262,528,1.262,529,1.262,530,1.262,531,1.262,532,1.262,540,0.734,541,1.262,542,1.189,544,0.773,615,0.952,616,1.354,617,1.427,618,0.952,619,1.902,620,0.952,621,0.814,622,0.952,623,0.952,624,0.773,625,0.952,626,0.734,627,0.903,628,0.952,629,1.545,630,2.282,631,1.427,632,0.734,633,0.993,634,1.427,635,0.773,636,0.773,637,0.952,638,0.952,639,0.734,640,0.773,641,0.952,642,0.773,643,0.952,644,0.773,645,0.952,646,0.773,647,0.952,648,0.697,649,0.952,650,0.773,651,0.952,652,0.952,653,1.004,654,1.159,656,2.015,658,1.427,660,1.427,665,3.83,666,1.344,667,1.344,668,1.344,669,1.344,670,1.344,671,1.344,672,1.344,673,1.344,674,1.344,675,1.344,676,1.344,677,1.344,678,1.344,679,1.344,680,1.344,681,1.344,682,1.344,683,1.344,684,1.344,685,1.344,686,1.344,687,1.344,689,1.344,690,1.344,691,1.344,692,1.344,693,1.344,694,1.344,695,1.344,696,1.344,697,1.344,698,1.344,699,1.811,700,1.541,702,1.344,703,1.344,704,1.344,705,1.262,706,1.344,707,1.344,708,1.344,984,2.992,985,2.992,986,1.811,987,3.59,988,2.992,989,6.102,990,2.243,991,2.243,992,1.811,993,2.243,994,2.618,995,2.618,996,2.618]],["title/injectables/DialogService.html",[233,0.919,997,2.513]],["body/injectables/DialogService.html",[0,0.258,3,0.167,4,0.125,5,0.125,8,0.167,13,1.758,14,2.154,17,0.925,27,0.629,29,0.487,31,1.026,33,1.358,34,0.021,35,0.744,36,0.324,37,0.642,39,4.748,51,1.254,58,1.55,73,0.167,104,0.701,111,2.273,135,2.101,136,1.249,215,3.854,231,0.013,232,0.013,233,1.204,235,1.551,303,0.75,304,0.411,312,1.464,313,1.464,316,1.753,616,1.641,626,0.958,627,1.641,632,0.958,633,1.632,639,0.958,770,2.363,771,2.363,775,4.175,777,2.363,779,4.743,780,4.578,791,1.753,949,3.224,997,3.292,998,2.926,999,4.758,1000,4.758,1001,4.758,1002,4.758,1003,4.758,1004,2.926,1005,4.098,1006,3.415,1007,4.758,1008,6.617,1009,7.255,1010,3.415,1011,6.228,1012,4.758,1013,4.758,1014,3.415,1015,4.758,1016,7.016,1017,3.415,1018,4.758,1019,4.758,1020,3.415,1021,4.758,1022,3.415,1023,4.692,1024,4.758,1025,3.415,1026,4.692,1027,2.926,1028,2.363,1029,2.363,1030,4.077,1031,2.363,1032,2.363,1033,6.749,1034,3.415,1035,5.476,1036,6.449,1037,5.476,1038,3.415,1039,3.415,1040,3.415,1041,3.415,1042,4.758,1043,2.604,1044,3.415]],["title/components/ErrorDialogSimpleComponent.html",[403,0.498,632,1.019]],["body/components/ErrorDialogSimpleComponent.html",[0,0.268,3,0.24,4,0.13,5,0.179,8,0.174,9,0.474,10,0.853,13,1.661,14,2.189,17,0.95,27,0.899,29,0.422,31,0.979,33,0.728,34,0.02,35,0.628,36,0.295,37,0.344,41,1.174,42,0.629,51,0.69,58,0.853,72,0.853,73,0.174,104,0.728,128,1.611,136,0.809,148,1.685,231,0.013,232,0.013,303,0.588,304,0.427,403,0.767,404,1.047,405,1.685,406,1.29,407,1.224,409,1.519,411,1.829,412,1.224,413,2.397,414,2.266,415,1.29,417,1.29,431,1.971,474,1.161,508,2.219,509,2.219,544,2.103,615,1.29,616,1.685,617,1.776,618,1.29,619,2.189,620,1.29,621,1.103,622,1.29,623,1.29,624,1.047,625,1.29,626,0.995,627,1.224,628,1.29,629,1.047,630,1.29,631,1.776,632,1.689,633,1.881,634,1.776,635,1.047,636,1.047,637,1.29,638,1.29,639,0.995,640,1.047,641,1.29,642,1.047,643,1.29,644,1.047,645,1.29,646,1.047,647,1.29,648,0.945,649,1.29,650,1.047,651,1.29,652,1.29,653,1.361,654,1.927,658,1.776,660,1.776,709,2.508,731,2.454,775,4.813,776,3.58,778,2.704,779,3.866,780,4.165,783,2.454,784,3.724,789,2.704,790,2.704,791,1.821,792,2.704,793,3.724,794,2.704,797,4.185,803,3.724,804,2.454,805,3.38,806,2.704,807,2.255,808,2.454,809,2.704,810,2.704,811,2.704,812,4.26,813,2.704,814,4.59,815,2.704,816,3.38,817,2.704,818,2.704,819,2.704,820,2.704,821,3.866,823,2.704,824,2.704,825,3.724,826,3.724,827,2.704,1028,4.515,1029,4.515,1045,2.704,1046,4.185,1047,4.787,1048,4.185,1049,4.185,1050,3.039,1051,3.039,1052,3.039,1053,4.885,1054,3.548,1055,4.885,1056,3.548,1057,4.885,1058,6.021,1059,6.021,1060,4.885,1061,4.185,1062,3.548,1063,3.039,1064,4.185,1065,3.548]],["title/components/FileInputComponent.html",[403,0.498,635,1.073]],["body/components/FileInputComponent.html",[0,0.191,3,0.187,4,0.093,5,0.242,8,0.124,9,0.371,10,0.919,13,1.557,17,0.743,27,0.465,29,0.504,31,1.158,33,0.946,34,0.02,35,0.678,36,0.361,37,0.447,41,1.604,42,0.877,51,1.298,58,1.327,65,0.64,72,1.327,73,0.124,79,0.665,97,0.709,104,0.519,111,1.252,127,0.97,129,1.844,135,2.314,156,0.998,219,1.963,231,0.01,232,0.01,303,0.665,304,0.304,315,1.083,403,0.633,404,2.21,405,1.319,406,0.919,407,0.872,409,1.188,410,1.433,411,1.509,412,0.872,413,2.285,414,2.155,415,0.919,416,1.549,417,0.919,418,2.479,419,2.8,420,1.844,421,1.736,422,1.844,423,2.228,424,2.223,425,2.223,426,1.844,427,2.223,428,2.223,429,2.223,430,2.223,431,1.683,432,1.844,433,2.223,434,1.736,435,1.467,436,1.252,437,1.844,438,1.319,439,1.252,440,1.639,441,1.467,442,1.467,443,1.467,444,1.467,445,1.467,446,1.844,447,2.094,448,2.094,449,2.094,450,2.094,451,1.467,452,2.094,453,1.467,454,1.467,455,1.219,456,2.118,457,2.507,458,1.904,461,1.598,463,0.97,465,0.786,468,1.148,472,0.872,474,1.252,478,1.173,483,1.219,488,0.827,494,1.219,501,1.219,507,1.844,508,1.148,509,1.148,510,1.219,511,1.219,512,1.219,513,1.844,514,1.219,515,1.219,516,1.219,517,1.219,518,1.844,519,1.219,520,1.219,521,1.219,522,1.736,523,1.219,524,1.219,525,1.219,526,1.219,527,1.219,528,1.219,529,1.219,530,1.219,531,1.219,532,1.219,540,0.709,541,1.219,542,1.148,544,0.746,615,0.919,616,1.319,617,1.39,618,0.919,619,1.869,620,0.919,621,0.786,622,0.919,623,0.919,624,0.746,625,0.919,626,0.709,627,0.872,628,0.919,629,0.746,630,0.919,631,1.39,632,0.709,633,0.968,634,1.39,635,1.518,636,0.746,637,0.919,638,0.919,639,0.709,640,0.746,641,0.919,642,0.746,643,0.919,644,0.746,645,0.919,646,0.746,647,0.919,648,0.674,649,0.919,650,0.746,651,0.919,652,0.919,653,0.97,654,1.518,656,1.963,658,1.39,660,1.39,665,3.821,666,1.298,667,1.298,668,1.298,669,1.298,670,1.298,671,1.298,672,1.298,673,1.298,674,1.298,675,1.298,676,1.298,677,1.298,678,1.298,679,1.298,680,1.298,681,1.298,682,1.298,683,1.298,684,1.298,685,1.298,686,1.298,687,1.298,689,1.298,690,1.298,691,1.298,692,1.298,693,1.298,694,1.298,695,1.298,696,1.298,697,1.298,698,1.298,699,1.749,700,1.488,701,1.488,702,1.298,703,1.298,704,1.298,705,1.219,706,1.298,707,1.298,708,1.298,986,1.749,987,3.515,988,2.914,1066,3.919,1067,3.919,1068,5.14,1069,4.611,1070,3.823,1071,1.927,1072,2.528,1073,2.528,1074,2.165,1075,1.606,1076,2.528,1077,2.528,1078,3.823,1079,2.528,1080,2.528,1081,2.528,1082,2.528,1083,2.528,1084,2.528,1085,2.528,1086,2.528,1087,2.528,1088,3.823]],["title/components/FormbuilderComponent.html",[403,0.498,636,1.073]],["body/components/FormbuilderComponent.html",[0,0.351,3,0.286,4,0.171,5,0.214,8,0.228,17,1.136,27,1.175,31,0.906,34,0.02,35,0.657,51,0.905,58,1.404,72,1.119,73,0.228,231,0.016,232,0.016,303,0.561,304,0.561,403,0.876,404,1.375,405,2.015,406,1.693,407,1.606,409,1.816,411,2.09,412,1.606,413,2.468,414,2.324,415,1.693,417,2.124,431,2.192,456,2.646,474,1.524,544,1.375,615,1.693,616,2.015,617,2.124,618,1.693,619,2.435,620,1.693,621,1.447,622,1.693,623,1.693,624,1.375,625,1.693,626,1.306,627,1.606,628,1.693,629,1.375,630,1.693,631,2.124,632,1.306,633,1.479,634,2.124,635,1.375,636,1.977,637,2.322,638,1.693,639,1.306,640,1.375,641,1.693,642,1.375,643,1.693,644,1.375,645,1.693,646,1.375,647,1.693,648,1.24,649,1.693,650,1.375,651,1.693,652,1.693,653,1.786,1089,3.988,1090,6.385,1091,4.655,1092,4.655]],["title/modules/FormbuilderModule.html",[1093,3.112,1094,2.513]],["body/modules/FormbuilderModule.html",[0,0.21,3,0.137,4,0.102,5,0.102,17,0.542,25,2.422,31,0.432,34,0.021,51,0.542,73,0.137,129,1.344,136,0.636,231,0.011,232,0.011,303,0.912,304,0.336,404,1.778,416,1.13,458,1.419,540,0.782,542,1.266,621,2.118,624,2.012,626,1.689,629,2.012,632,1.689,633,1.366,635,2.012,636,2.08,639,1.689,640,2.012,642,2.012,644,2.012,646,2.012,648,1.815,650,2.012,705,1.344,711,3.959,731,1.929,741,3.417,742,2.388,744,1.641,770,1.929,771,1.929,791,1.431,984,2.125,985,2.125,993,2.388,1026,5.896,1027,2.388,1028,1.929,1029,1.929,1030,3.524,1031,1.929,1032,1.929,1066,2.125,1067,2.125,1094,5.253,1095,2.125,1096,2.846,1097,2.388,1098,2.388,1099,2.388,1100,2.388,1101,3.534,1102,3.524,1103,1.929,1104,2.388,1105,2.788,1106,4.114,1107,5.397,1108,4.114,1109,4.114,1110,4.888,1111,2.788,1112,5.397,1113,2.788,1114,4.114,1115,3.524,1116,2.125,1117,4.114,1118,2.788,1119,4.114,1120,2.788,1121,4.114,1122,2.788,1123,4.114,1124,2.788,1125,4.114,1126,2.788,1127,4.114,1128,2.788,1129,4.114,1130,2.788,1131,4.114,1132,2.788,1133,4.114,1134,2.788,1135,4.114,1136,2.788,1137,4.114,1138,2.788,1139,4.114,1140,2.788,1141,4.114,1142,2.788,1143,4.114,1144,2.788,1145,4.114,1146,2.788,1147,4.114,1148,2.788,1149,4.114,1150,2.788,1151,4.114,1152,4.114,1153,2.788,1154,4.114,1155,4.114,1156,2.788,1157,2.125,1158,2.125,1159,4.888,1160,2.788,1161,2.788,1162,2.788,1163,2.788,1164,4.114,1165,2.388,1166,2.388,1167,2.388,1168,2.788,1169,4.114,1170,2.388,1171,2.788,1172,2.788,1173,1.929,1174,2.788,1175,2.788,1176,4.114,1177,2.788,1178,4.114,1179,1.929,1180,4.114,1181,1.929,1182,4.114,1183,1.929,1184,4.114,1185,2.788,1186,4.114,1187,2.788,1188,2.788,1189,2.788,1190,2.788,1191,3.524,1192,2.788,1193,2.788,1194,2.788]],["title/injectables/FormbuilderService.html",[233,0.919,1195,2.77]],["body/injectables/FormbuilderService.html",[0,0.43,3,0.279,4,0.209,5,0.209,27,1.282,31,0.883,34,0.02,73,0.279,231,0.018,232,0.018,233,1.67,235,2.588,303,0.686,304,0.686,312,2.442,313,2.442,1195,5.031,1196,4.881,1197,5.698]],["title/interfaces/ICodeEntry.html",[74,0.3,1198,1.865]],["body/interfaces/ICodeEntry.html",[3,0.235,4,0.176,5,0.176,8,0.235,9,0.578,29,0.572,30,1.417,34,0.02,35,0.728,36,0.318,37,0.578,42,0.896,50,3.985,73,0.332,74,0.558,79,1.036,231,0.016,232,0.016,303,0.815,304,0.578,399,2.633,410,1.851,435,1.842,436,1.95,438,1.656,439,1.95,441,1.842,442,1.842,443,1.842,444,1.842,445,1.842,451,1.842,453,1.842,454,1.842,461,2.013,465,1.851,472,2.054,478,1.359,488,2.12,537,2.633,540,1.347,755,3.476,776,2.633,1198,3.324,1199,1.492,1200,3.051,1201,3.321,1202,4.48,1203,4.48,1204,3.321,1205,3.051,1206,3.321,1207,3.321,1208,3.321,1209,3.321,1210,2.826,1211,3.321,1212,3.267]],["title/interfaces/ICustomValidation.html",[74,0.3,465,1.129]],["body/interfaces/ICustomValidation.html",[0,0.438,3,0.226,4,0.169,5,0.169,8,0.226,9,0.563,13,1.761,29,0.565,34,0.021,35,0.652,36,0.344,37,0.7,42,0.593,65,1.165,73,0.226,74,0.38,79,1.106,218,2.351,231,0.015,232,0.015,391,5.496,436,1.507,438,1.588,465,1.804,537,3.183,633,1.608,777,3.186,1103,4.614,1199,1.431,1210,2.711,1213,3.51,1214,3.51,1215,5.714,1216,6.353,1217,6.353,1218,5.89,1219,4.014,1220,3.945,1221,3.945,1222,3.945,1223,3.945,1224,3.945,1225,3.945,1226,3.945,1227,3.945,1228,3.945,1229,5.443,1230,3.945,1231,3.945,1232,3.945,1233,3.945,1234,3.945,1235,3.945,1236,3.945]],["title/interfaces/IDialogConfig.html",[74,0.3,1219,2.513]],["body/interfaces/IDialogConfig.html",[0,0.434,3,0.223,4,0.167,5,0.167,8,0.223,9,0.559,13,1.758,29,0.555,34,0.021,35,0.647,36,0.349,37,0.71,42,0.585,65,1.151,73,0.223,74,0.375,79,1.099,215,3.692,218,2.333,231,0.015,232,0.015,391,5.482,436,1.489,438,1.569,465,1.414,537,3.158,633,1.599,777,3.147,1103,4.594,1199,1.414,1210,2.678,1213,3.468,1214,3.468,1215,3.897,1218,4.933,1219,3.147,1220,3.897,1221,5.689,1222,5.689,1223,5.689,1224,3.897,1225,3.897,1226,3.897,1227,3.897,1228,3.897,1229,5.413,1230,3.897,1231,3.897,1232,3.897,1233,3.897,1234,3.897,1235,3.897,1236,3.897,1237,6.318,1238,6.318]],["title/interfaces/IField.html",[74,0.3,410,1.129]],["body/interfaces/IField.html",[3,0.191,4,0.143,5,0.143,8,0.191,9,0.505,29,0.572,30,1.848,34,0.02,35,0.754,36,0.366,37,0.741,42,0.839,50,2.295,73,0.307,74,0.516,79,1.089,231,0.014,232,0.014,303,0.754,304,0.47,399,2.139,410,1.823,435,1.496,436,2.243,438,2.159,439,2.135,441,2.402,442,2.402,443,2.402,444,2.402,445,2.402,451,2.402,453,2.402,454,2.402,461,2.13,465,1.946,472,2.159,478,1.428,488,2.135,537,2.139,540,1.094,755,2.002,776,3.434,1198,3.214,1199,1.212,1200,2.478,1201,2.698,1202,4.817,1203,4.817,1204,2.698,1205,2.478,1206,4.331,1207,4.331,1208,2.698,1209,4.331,1210,3.453,1211,4.058,1212,2.857]],["title/interfaces/IFlatObject.html",[74,0.3,915,2.513]],["body/interfaces/IFlatObject.html",[0,0.3,3,0.195,4,0.146,5,0.146,13,1.423,25,3.485,27,0.731,29,0.447,31,0.616,34,0.021,36,0.331,42,0.511,45,3.352,61,3.104,65,1.791,73,0.259,74,0.328,79,0.691,97,1.114,104,0.815,111,2.374,129,3.041,136,1.539,139,2.338,148,1.37,215,2.708,218,2.399,219,2.708,231,0.014,232,0.014,233,1.335,303,0.478,304,0.478,312,1.703,313,1.703,478,1.203,539,2.179,741,2.179,755,3.238,845,3.104,901,3.028,902,3.403,903,5.072,905,3.403,907,3.403,908,5.403,910,3.403,912,3.403,913,3.403,915,4.096,918,3.403,919,3.403,920,3.403,921,5.072,922,4.518,923,3.403,924,3.403,925,4.518,926,3.403,927,5.072,928,5.403,929,3.403,930,3.403,931,4.518,932,3.403,933,3.403,934,3.403,935,3.403,936,5.623,937,3.403,938,3.403,939,3.403,940,3.403,941,3.403,942,3.403,943,3.403,944,4.518,945,4.518,946,5.403,947,4.518,948,4.518,949,3.104,950,3.403,951,5.072,952,5.623,953,3.403,954,3.403,955,3.403,1199,1.235,1239,3.972,1240,3.972]],["title/interfaces/IForm.html",[74,0.3,1241,2.77]],["body/interfaces/IForm.html",[3,0.263,4,0.197,5,0.197,8,0.263,9,0.618,17,1.238,29,0.549,31,0.83,33,1.099,34,0.02,35,0.818,36,0.333,37,0.52,51,1.041,73,0.263,74,0.442,231,0.017,232,0.017,303,0.767,410,1.978,440,3.012,463,2.054,468,3.306,540,1.502,1199,1.665,1212,2.937,1241,4.852,1242,4.588,1243,6.364,1244,6.364,1245,5.355]],["title/interfaces/IFormObj.html",[74,0.3,1212,1.993]],["body/interfaces/IFormObj.html",[3,0.236,4,0.177,5,0.177,8,0.236,9,0.58,29,0.569,30,1.423,34,0.02,35,0.798,36,0.293,42,0.768,50,2.838,73,0.332,74,0.559,79,1.039,231,0.016,232,0.016,303,0.817,304,0.581,399,3.719,410,2.108,435,1.85,436,1.955,438,1.663,439,1.955,441,1.85,442,1.85,443,1.85,444,1.85,445,1.85,451,1.85,453,1.85,454,1.85,461,2.017,465,1.856,472,2.059,478,1.362,488,2.124,537,2.645,540,1.352,755,2.475,776,2.645,1198,3.066,1199,1.499,1200,3.064,1201,3.335,1202,4.488,1203,4.488,1204,3.335,1205,3.064,1206,3.335,1207,3.335,1208,3.335,1209,3.335,1210,2.838,1211,3.335,1212,3.823]],["title/interfaces/IHTMLAttributes.html",[74,0.3,472,1.253]],["body/interfaces/IHTMLAttributes.html",[3,0.228,4,0.17,5,0.17,8,0.228,9,0.566,29,0.572,30,1.371,34,0.02,35,0.791,36,0.338,37,0.712,42,0.751,50,2.733,73,0.328,74,0.552,79,1.164,231,0.016,232,0.016,303,0.806,304,0.559,399,2.547,410,1.813,435,2.566,436,1.909,438,1.601,439,2.256,441,1.781,442,1.781,443,1.781,444,1.781,445,1.781,451,1.781,453,1.781,454,1.781,461,1.982,465,1.813,472,2.199,478,1.526,488,2.088,537,2.547,540,1.302,755,2.384,776,2.547,1198,2.994,1199,1.443,1200,2.951,1201,3.212,1202,4.412,1203,4.412,1204,4.628,1205,4.252,1206,3.212,1207,3.212,1208,3.212,1209,3.212,1210,2.733,1211,3.212,1212,3.199]],["title/interfaces/ISliderConfig.html",[74,0.3,1246,2.309]],["body/interfaces/ISliderConfig.html",[3,0.269,4,0.201,5,0.201,8,0.269,9,0.626,34,0.02,36,0.347,73,0.269,74,0.452,79,1.303,231,0.017,232,0.017,478,1.565,1199,1.705,1205,4.501,1246,4.103,1247,4.699,1248,7.082,1249,7.082,1250,7.082]],["title/interfaces/ITableHeader.html",[74,0.3,1251,2.309]],["body/interfaces/ITableHeader.html",[0,0.231,1,1.57,3,0.15,4,0.112,5,0.219,8,0.15,9,0.427,10,1.057,12,1.8,14,1.874,27,0.563,29,0.518,30,1.299,34,0.021,36,0.276,37,0.547,54,1.8,67,1.388,72,1.355,73,0.276,74,0.363,75,1.677,76,1.677,77,1.677,78,1.677,79,1.082,80,1.677,81,1.677,82,1.677,84,1.677,97,1.581,104,1.157,111,2.187,128,2.341,136,1.363,148,1.944,156,1.42,189,1.677,190,1.677,191,1.677,192,1.8,231,0.012,232,0.012,295,2.59,303,0.805,304,0.368,385,3.275,403,0.604,409,0.95,411,1.44,413,1.001,414,0.95,423,1.173,431,1.001,439,1.001,456,1.688,461,2.077,463,1.688,478,1.363,539,3.412,540,0.858,633,0.774,648,0.815,654,0.903,658,1.112,660,1.112,728,2.115,760,2.115,791,1.57,848,1.943,949,1.8,1005,3.044,1101,2.259,1173,2.115,1179,2.115,1181,2.115,1183,2.115,1199,0.95,1251,3.275,1252,1.943,1253,4.297,1254,4.297,1255,4.297,1256,2.331,1257,2.331,1258,3.354,1259,3.354,1260,3.354,1261,2.331,1262,3.354,1263,3.354,1264,3.354,1265,2.331,1266,2.331,1267,3.044,1268,3.044,1269,2.796,1270,2.331,1271,2.331,1272,2.331,1273,2.331,1274,2.331,1275,2.331,1276,3.929,1277,2.331,1278,2.331,1279,3.044,1280,2.331,1281,2.331,1282,2.331,1283,2.331,1284,2.331,1285,2.331,1286,2.331,1287,2.331,1288,2.331,1289,2.331,1290,2.331,1291,3.354,1292,2.331,1293,2.331,1294,2.331,1295,2.331,1296,2.331,1297,2.331,1298,2.331,1299,2.331,1300,2.331,1301,2.331,1302,2.331,1303,2.331,1304,2.331,1305,2.331,1306,2.331,1307,3.354,1308,2.331,1309,2.331,1310,4.553,1311,2.331,1312,3.354,1313,2.331,1314,2.331,1315,2.331,1316,3.044,1317,2.331,1318,3.354,1319,2.331,1320,3.354,1321,2.331,1322,2.331,1323,2.331,1324,2.331,1325,2.331,1326,2.331,1327,2.331,1328,2.331,1329,3.354,1330,3.354,1331,3.354,1332,2.331,1333,3.566,1334,2.331,1335,2.331,1336,2.331,1337,3.354,1338,3.354,1339,2.331,1340,3.354,1341,2.331,1342,2.331,1343,3.929,1344,2.331,1345,2.331,1346,2.331,1347,3.354,1348,2.331,1349,2.331,1350,2.331,1351,2.331,1352,2.331,1353,2.331,1354,2.331,1355,2.331,1356,2.331,1357,2.331,1358,2.331,1359,2.331,1360,2.331,1361,2.331,1362,2.331,1363,2.331,1364,2.331,1365,2.331,1366,2.331,1367,2.331,1368,2.331,1369,2.331,1370,2.331,1371,2.331,1372,2.331,1373,2.331,1374,2.331,1375,2.331,1376,2.331,1377,3.354,1378,2.331,1379,3.929,1380,3.354,1381,2.331,1382,3.929,1383,3.354,1384,2.331,1385,2.331,1386,2.331,1387,2.331,1388,2.331]],["title/interfaces/ITableViewOptions.html",[74,0.3,1269,2.309]],["body/interfaces/ITableViewOptions.html",[0,0.225,1,1.534,3,0.146,4,0.11,5,0.217,8,0.146,9,0.42,10,1.04,12,1.758,14,1.849,27,0.55,29,0.48,30,1.277,34,0.021,36,0.335,37,0.42,54,1.758,67,1.357,72,1.34,73,0.273,74,0.357,75,1.639,76,1.639,77,1.639,78,1.639,79,1.252,80,1.639,81,1.639,82,1.639,84,1.639,97,1.564,104,1.144,111,2.175,128,2.31,136,1.35,148,1.923,156,1.411,189,1.639,190,1.639,191,1.639,192,1.758,231,0.012,232,0.012,295,2.547,303,0.8,304,0.36,385,3.233,403,0.594,409,0.929,411,1.416,413,0.978,414,0.929,423,1.146,431,0.978,439,0.978,456,1.66,461,2.065,463,1.66,478,1.16,539,3.385,540,0.838,633,0.756,648,0.796,654,0.882,658,1.086,660,1.086,728,2.067,760,2.067,791,1.534,848,1.898,949,1.758,1005,2.993,1101,2.221,1173,2.067,1179,2.067,1181,2.067,1183,2.067,1199,0.929,1251,2.75,1252,1.898,1253,2.277,1254,2.277,1255,2.277,1256,2.277,1257,2.277,1258,3.298,1259,3.298,1260,3.298,1261,2.277,1262,3.298,1263,3.298,1264,3.298,1265,2.277,1266,2.277,1267,3.858,1268,2.993,1269,3.233,1270,4.251,1271,4.251,1272,4.251,1273,4.251,1274,4.251,1275,4.251,1276,3.878,1277,2.277,1278,2.277,1279,2.993,1280,2.277,1281,2.277,1282,2.277,1283,2.277,1284,2.277,1285,2.277,1286,2.277,1287,2.277,1288,2.277,1289,2.277,1290,2.277,1291,3.298,1292,2.277,1293,2.277,1294,2.277,1295,2.277,1296,2.277,1297,2.277,1298,2.277,1299,2.277,1300,2.277,1301,2.277,1302,2.277,1303,2.277,1304,2.277,1305,2.277,1306,2.277,1307,3.298,1308,2.277,1309,2.277,1310,4.512,1311,2.277,1312,3.298,1313,2.277,1314,2.277,1315,2.277,1316,2.993,1317,2.277,1318,3.298,1319,2.277,1320,3.298,1321,2.277,1322,2.277,1323,2.277,1324,2.277,1325,2.277,1326,2.277,1327,2.277,1328,2.277,1329,3.298,1330,3.298,1331,3.298,1332,2.277,1333,3.519,1334,2.277,1335,2.277,1336,2.277,1337,3.298,1338,3.298,1339,2.277,1340,3.298,1341,2.277,1342,2.277,1343,3.878,1344,2.277,1345,2.277,1346,2.277,1347,3.298,1348,2.277,1349,2.277,1350,2.277,1351,2.277,1352,2.277,1353,2.277,1354,2.277,1355,2.277,1356,2.277,1357,2.277,1358,2.277,1359,2.277,1360,2.277,1361,2.277,1362,2.277,1363,2.277,1364,2.277,1365,2.277,1366,2.277,1367,2.277,1368,2.277,1369,2.277,1370,2.277,1371,2.277,1372,2.277,1373,2.277,1374,2.277,1375,2.277,1376,2.277,1377,3.298,1378,2.277,1379,3.878,1380,3.298,1381,2.277,1382,3.878,1383,3.298,1384,2.277,1385,2.277,1386,2.277,1387,2.277,1388,2.277]],["title/interfaces/IValidator.html",[74,0.3,488,1.189]],["body/interfaces/IValidator.html",[3,0.252,4,0.189,5,0.189,8,0.252,9,0.603,29,0.504,34,0.02,36,0.358,37,0.734,73,0.252,74,0.424,79,1.255,231,0.017,232,0.017,315,2.972,447,3.149,448,3.149,449,3.149,450,3.149,452,3.149,478,1.714,488,2.034,522,3.149,1199,1.599,1389,4.406]],["title/components/InfoDialogSimpleComponent.html",[403,0.498,639,1.019]],["body/components/InfoDialogSimpleComponent.html",[0,0.271,3,0.353,4,0.132,5,0.181,8,0.176,9,0.479,10,0.864,13,1.666,14,2.202,17,0.959,27,0.908,29,0.425,31,0.983,33,0.738,34,0.02,35,0.633,36,0.297,37,0.349,41,1.185,42,0.635,51,0.699,58,0.864,72,0.864,73,0.176,104,0.738,128,1.633,136,0.821,148,1.941,231,0.013,232,0.013,303,0.594,304,0.433,403,0.772,404,1.062,405,1.701,406,1.308,407,1.24,409,1.533,411,1.842,412,1.24,413,2.401,414,2.27,415,1.308,417,1.308,431,1.982,474,1.177,544,1.062,615,1.308,616,1.701,617,1.793,618,1.308,619,2.202,620,1.308,621,1.118,622,1.308,623,1.308,624,1.062,625,1.308,626,1.009,627,1.24,628,1.308,629,1.062,630,1.308,631,1.793,632,1.009,633,1.884,634,1.793,635,1.062,636,1.062,637,1.308,638,1.308,639,1.698,640,1.062,641,1.308,642,1.062,643,1.308,644,1.062,645,1.308,646,1.062,647,1.308,648,0.958,649,1.308,650,1.062,651,1.308,652,1.308,653,1.38,654,1.935,658,1.793,660,1.793,709,2.532,731,2.488,776,3.595,778,2.742,779,3.894,780,4.189,783,2.488,784,3.76,789,2.742,790,2.742,791,1.847,792,2.742,793,3.76,794,2.742,803,3.76,804,2.488,805,3.412,806,2.742,807,2.286,808,2.488,809,2.742,810,2.742,811,2.742,812,4.616,813,2.742,814,3.76,815,2.742,816,3.412,817,2.742,818,2.742,819,2.742,820,2.742,821,3.894,823,2.742,824,2.742,825,3.76,826,3.76,827,3.76,1023,5.435,1031,4.534,1032,4.534,1045,2.742,1046,4.225,1047,4.822,1048,4.225,1049,4.225,1050,3.081,1051,3.081,1052,3.081,1061,4.225,1063,3.081,1064,4.225,1390,4.932,1391,3.597,1392,4.932,1393,3.597,1394,4.932,1395,3.597,1396,3.597,1397,3.597,1398,4.932]],["title/interfaces/MenuNode.html",[74,0.3,402,2.309]],["body/interfaces/MenuNode.html",[0,0.417,3,0.271,4,0.203,5,0.203,8,0.271,9,0.629,29,0.546,34,0.02,35,0.814,36,0.318,37,0.629,73,0.318,74,0.456,231,0.017,232,0.017,397,4.122,398,4.216,399,3.97,402,4.6,1199,1.719]],["title/interfaces/Options.html",[30,1.073,74,0.3]],["body/interfaces/Options.html",[0,0.288,1,1.298,3,0.124,4,0.169,5,0.093,6,1.488,7,1.488,8,0.226,9,0.371,10,1.108,11,1.927,12,3.026,13,1.697,14,2.52,15,4.483,16,1.927,19,1.927,20,1.927,21,1.927,22,1.927,23,1.927,24,1.927,25,4.109,28,1.927,29,0.538,30,1.715,34,0.021,36,0.337,38,2.914,45,1.606,47,1.927,49,1.927,53,1.749,54,1.488,56,3.556,57,2.251,58,1.108,60,1.927,61,1.488,62,3.919,65,1.301,67,2.739,68,1.927,70,1.749,71,1.927,72,1.108,73,0.252,74,0.208,75,3.028,76,3.028,77,3.028,78,3.028,79,1.246,80,3.028,81,3.028,82,3.028,83,3.819,84,3.028,85,3.819,86,3.819,87,3.819,88,1.606,89,1.927,90,1.927,91,1.927,92,1.927,93,1.927,94,1.927,95,1.927,96,1.927,97,1.692,98,1.927,99,1.927,100,1.927,101,1.927,102,1.927,103,1.927,104,0.785,105,1.927,106,1.927,107,1.927,108,1.927,109,1.927,110,1.927,111,1.683,112,2.43,113,1.749,114,1.749,115,1.749,116,1.749,117,1.749,118,1.749,119,1.749,120,1.749,121,1.749,122,1.749,123,1.749,124,1.749,125,1.749,126,1.749,127,1.467,128,1.148,129,2.223,130,1.927,131,2.914,132,1.606,133,2.914,134,1.927,135,2.118,136,1.556,137,1.927,138,1.927,139,3.742,140,1.927,141,4.846,142,1.927,143,1.927,144,1.927,145,1.927,146,1.927,147,2.914,148,2.08,149,1.927,150,1.927,151,1.927,152,1.927,153,1.927,154,1.927,155,1.927,156,0.998,157,1.927,158,1.927,159,1.927,160,2.914,161,2.914,162,2.914,163,1.927,164,1.927,165,1.927,166,1.749,167,1.927,168,1.927,169,1.927,170,1.927,171,1.927,172,1.927,173,1.927,174,1.927,175,1.927,176,1.927,177,1.927,178,1.927,179,1.927,180,1.927,181,4.717,182,1.927,183,1.927,184,4.209,185,3.919,186,3.919,187,2.914,188,1.927,189,2.097,190,2.097,191,2.097,192,2.251,193,1.927,194,1.927,195,2.914,196,1.927,197,1.927,198,3.515,199,1.927,200,2.914,201,1.927,202,1.927,203,1.927,204,3.515,205,1.927,206,1.927,207,1.927,208,1.927,209,1.606,210,1.749,211,1.606,212,1.749,213,1.749,214,1.927,215,1.963,216,1.749,217,2.251,218,1.549,219,1.963,220,1.927,221,1.927,222,1.749,223,1.927,224,1.927,225,1.749,226,1.606,227,1.749,228,1.927,229,1.927,230,2.914,231,0.01,232,0.01,1199,0.786]],["title/components/RadiobuttonComponent.html",[403,0.498,640,1.073]],["body/components/RadiobuttonComponent.html",[0,0.197,3,0.192,4,0.096,5,0.144,8,0.128,9,0.38,10,0.94,13,1.569,17,0.761,27,0.48,29,0.507,30,1.387,31,1.159,33,0.964,34,0.02,35,0.685,36,0.362,37,0.456,41,1.614,42,0.883,51,1.289,58,1.255,65,0.659,72,1.129,73,0.128,79,0.681,97,0.731,104,0.535,127,1,135,2.338,156,0.847,231,0.01,232,0.01,303,0.708,304,0.314,315,1.117,403,0.644,404,2.214,405,1.349,406,0.947,407,0.899,409,1.216,410,1.46,411,1.537,412,0.899,413,2.296,414,2.166,415,0.947,416,1.585,417,0.947,418,2.517,419,2.833,420,1.886,421,1.776,422,1.886,423,2.254,424,2.697,425,2.265,426,1.886,427,2.265,428,2.265,429,2.265,430,2.265,431,1.709,432,1.886,433,2.265,434,1.776,435,1.501,436,1.28,437,1.886,438,1.349,439,1.28,440,1.677,441,2.002,442,1.501,443,1.501,444,1.501,445,1.501,446,1.886,447,2.133,448,2.133,449,2.133,450,2.133,451,1.501,452,2.133,453,1.501,454,1.501,455,1.256,456,2.146,457,2.54,458,1.929,461,1.622,463,1,465,0.81,468,1.183,472,0.899,474,1.28,478,1.191,483,1.256,488,0.853,494,1.256,501,1.256,507,1.886,508,1.183,509,1.183,510,1.256,511,1.256,512,1.256,513,1.886,514,1.256,515,1.256,516,1.256,517,1.256,518,1.886,519,1.256,520,1.256,521,1.256,522,1.776,523,1.256,524,1.256,525,1.256,526,1.256,527,1.256,528,1.256,529,1.256,530,1.256,531,1.256,532,1.256,535,1.803,540,0.731,541,1.256,542,1.183,544,0.769,615,0.947,616,1.349,617,1.422,618,0.947,619,1.898,620,0.947,621,0.81,622,0.947,623,0.947,624,0.769,625,0.947,626,0.731,627,0.899,628,0.947,629,0.769,630,0.947,631,1.422,632,0.731,633,0.99,634,1.422,635,0.769,636,0.769,637,0.947,638,0.947,639,0.731,640,1.541,641,0.947,642,0.769,643,0.947,644,0.769,645,0.947,646,0.769,647,0.947,648,0.694,649,0.947,650,0.769,651,0.947,652,0.947,653,1,654,1.387,656,2.008,658,1.422,660,1.422,665,3.829,666,1.338,667,1.338,668,1.338,669,1.338,670,1.338,671,1.338,672,1.338,673,1.338,674,1.338,675,1.338,676,1.338,677,1.338,678,1.338,679,1.338,680,1.338,681,1.338,682,1.338,683,1.338,684,1.338,685,1.338,686,1.338,687,1.338,688,1.986,689,1.338,690,1.338,691,1.338,692,1.338,693,1.338,694,1.338,695,1.338,696,1.338,697,1.338,698,1.338,700,1.534,701,1.534,702,1.338,703,1.338,704,1.338,705,1.256,706,1.338,707,1.338,708,1.338,709,2.008,992,1.803,1075,1.656,1198,2.411,1399,2.232,1400,3.912,1401,4.696,1402,3.912,1403,3.912,1404,1.803,1405,2.606,1406,3.351,1407,2.606]],["title/components/SelectComponent.html",[403,0.498,642,1.073]],["body/components/SelectComponent.html",[0,0.196,3,0.191,4,0.095,5,0.143,8,0.127,9,0.379,10,0.938,13,1.568,17,0.759,27,0.478,29,0.507,30,1.384,31,1.159,33,0.962,34,0.02,35,0.684,36,0.362,37,0.455,41,1.613,42,0.882,51,1.288,58,1.253,65,0.657,72,1.127,73,0.127,79,0.679,97,0.729,104,0.533,127,0.997,135,2.335,156,0.845,231,0.01,232,0.01,303,0.707,304,0.313,315,1.113,403,0.643,404,2.214,405,1.346,406,0.944,407,0.896,409,1.213,410,1.457,411,1.534,412,0.896,413,2.295,414,2.165,415,0.944,416,1.581,417,0.944,418,2.513,419,2.83,420,1.882,421,1.772,422,1.882,423,2.251,424,2.694,425,2.26,426,1.882,427,2.26,428,2.26,429,2.26,430,2.26,431,1.706,432,1.882,433,2.26,434,1.772,435,1.497,436,1.277,437,1.882,438,1.346,439,1.277,440,1.673,441,1.999,442,1.497,443,1.497,444,1.497,445,1.497,446,1.882,447,2.129,448,2.129,449,2.129,450,2.129,451,1.497,452,2.129,453,1.497,454,1.497,455,1.253,456,2.143,457,2.537,458,1.927,461,1.62,463,0.997,465,0.807,468,1.18,472,0.896,474,1.277,478,1.189,483,1.253,488,0.85,494,1.253,501,1.253,507,1.882,508,1.18,509,1.18,510,1.253,511,1.253,512,1.253,513,1.882,514,1.253,515,1.253,516,1.253,517,1.253,518,1.882,519,1.253,520,1.253,521,1.253,522,1.772,523,1.253,524,1.253,525,1.253,526,1.253,527,1.253,528,1.253,529,1.253,530,1.253,531,1.253,532,1.253,535,1.797,540,0.729,541,1.253,542,1.18,544,0.767,615,0.944,616,1.346,617,1.419,618,0.944,619,1.895,620,0.944,621,0.807,622,0.944,623,0.944,624,0.767,625,0.944,626,0.729,627,0.896,628,0.944,629,0.767,630,0.944,631,1.419,632,0.729,633,0.988,634,1.419,635,0.767,636,0.767,637,0.944,638,0.944,639,0.729,640,0.767,641,0.944,642,1.539,643,0.944,644,0.767,645,0.944,646,0.767,647,0.944,648,0.692,649,0.944,650,0.767,651,0.944,652,0.944,653,0.997,654,1.384,656,2.004,658,1.419,660,1.419,665,3.828,666,1.334,667,1.334,668,1.334,669,1.334,670,1.334,671,1.334,672,1.334,673,1.334,674,1.334,675,1.334,676,1.334,677,1.334,678,1.334,679,1.334,680,1.334,681,1.334,682,1.334,683,1.334,684,1.334,685,1.334,686,1.334,687,1.334,689,1.334,690,1.334,691,1.334,692,1.334,693,1.334,694,1.334,695,1.334,696,1.334,697,1.334,698,1.334,702,1.334,703,1.334,704,1.334,705,1.253,706,1.334,707,1.334,708,1.334,709,2.004,991,2.225,1071,1.98,1075,1.651,1198,2.407,1333,2.7,1404,1.797,1406,3.343,1408,2.225,1409,4.688,1410,3.903,1411,3.903,1412,2.225,1413,2.598,1414,3.343,1415,3.903,1416,3.903,1417,3.903]],["title/components/SlideToggleComponent.html",[403,0.498,646,1.073]],["body/components/SlideToggleComponent.html",[0,0.196,3,0.192,4,0.096,5,0.143,8,0.128,9,0.379,10,0.94,13,1.569,17,0.76,27,0.479,29,0.517,31,1.16,33,0.963,34,0.02,35,0.685,36,0.362,37,0.456,41,1.614,42,0.882,51,1.289,58,1.254,65,0.659,72,1.254,73,0.128,79,0.68,97,0.73,104,0.534,127,2.002,135,2.337,156,0.846,231,0.01,232,0.01,303,0.707,304,0.314,315,1.116,403,0.644,404,2.214,405,1.348,406,0.947,407,0.898,409,1.215,410,1.459,411,1.537,412,0.898,413,2.296,414,2.165,415,0.947,416,1.584,417,0.947,418,2.516,419,2.832,420,1.885,421,1.775,422,1.885,423,2.253,424,2.697,425,2.264,426,1.885,427,2.264,428,2.264,429,2.264,430,2.264,431,1.708,432,1.885,433,2.264,434,1.775,435,1.5,436,1.28,437,1.885,438,1.348,439,1.28,440,1.676,441,2.002,442,1.5,443,1.5,444,1.5,445,1.5,446,1.885,447,2.132,448,2.132,449,2.132,450,2.132,451,1.5,452,2.132,453,1.5,454,1.5,455,1.255,456,2.145,457,2.54,458,1.929,461,1.622,463,0.999,465,0.809,468,1.182,472,0.898,474,1.28,478,1.19,483,1.255,488,0.852,494,1.255,501,1.255,507,1.885,508,1.182,509,1.182,510,1.255,511,1.255,512,1.255,513,1.885,514,1.255,515,1.255,516,1.255,517,1.255,518,1.885,519,1.255,520,1.255,521,1.255,522,1.775,523,1.255,524,1.255,525,1.255,526,1.255,527,1.255,528,1.255,529,1.255,530,1.255,531,1.255,532,1.255,540,0.73,541,1.255,542,1.182,544,0.769,615,0.947,616,1.348,617,1.421,618,0.947,619,1.897,620,0.947,621,0.809,622,0.947,623,0.947,624,0.769,625,0.947,626,0.73,627,0.898,628,0.947,629,0.769,630,0.947,631,1.421,632,0.73,633,0.989,634,1.421,635,0.769,636,0.769,637,0.947,638,0.947,639,0.73,640,0.769,641,0.947,642,0.769,643,0.947,644,0.769,645,0.947,646,1.541,647,0.947,648,0.694,649,0.947,650,0.769,651,0.947,652,0.947,653,0.999,654,1.541,656,2.007,658,1.421,660,1.421,665,3.829,666,1.337,667,1.337,668,1.337,669,1.337,670,1.337,671,1.337,672,1.337,673,1.337,674,1.337,675,1.337,676,1.337,677,1.337,678,1.337,679,1.337,680,1.337,681,1.337,682,1.337,683,1.337,684,1.337,685,1.337,686,1.337,687,1.337,689,1.337,690,1.337,691,1.337,692,1.337,693,1.337,694,1.337,695,1.337,696,1.337,697,1.337,698,1.337,701,1.533,702,1.337,703,1.337,704,1.337,705,1.255,706,1.337,707,1.337,708,1.337,992,1.801,1075,1.655,1246,2.983,1404,1.801,1412,2.23,1418,2.23,1419,3.909,1420,4.694,1421,3.909,1422,4.694,1423,3.909,1424,2.604,1425,2.604,1426,2.23,1427,3.909]],["title/components/SliderComponent.html",[403,0.498,644,1.073]],["body/components/SliderComponent.html",[0,0.198,3,0.193,4,0.097,5,0.145,8,0.129,9,0.382,10,0.947,13,1.573,17,0.766,27,0.484,29,0.508,31,1.16,33,0.969,34,0.02,35,0.687,36,0.362,37,0.458,41,1.618,42,0.884,51,1.292,58,1.26,65,0.666,72,1.135,73,0.129,79,0.685,97,0.738,104,0.54,127,2.012,135,2.345,156,0.853,231,0.01,232,0.01,303,0.71,304,0.317,315,1.127,403,0.648,404,2.216,405,1.358,406,0.956,407,0.907,409,1.224,410,1.468,411,1.546,412,0.907,413,2.299,414,2.169,415,0.956,416,1.596,417,0.956,418,2.529,419,2.843,420,1.899,421,1.789,422,1.899,423,2.262,424,2.708,425,2.277,426,1.899,427,2.277,428,2.277,429,2.277,430,2.277,431,1.717,432,1.899,433,2.277,434,1.789,435,1.511,436,1.289,437,1.899,438,1.358,439,1.289,440,1.688,441,2.012,442,1.511,443,1.511,444,1.511,445,1.511,446,1.899,447,2.145,448,2.145,449,2.145,450,2.145,451,1.511,452,2.145,453,1.511,454,1.511,455,1.268,456,2.155,457,2.551,458,1.937,461,1.63,463,1.009,465,0.817,468,1.194,472,0.907,474,1.289,478,1.196,483,1.268,488,0.861,494,1.268,501,1.268,507,1.899,508,1.194,509,1.194,510,1.268,511,1.268,512,1.268,513,1.899,514,1.268,515,1.268,516,1.268,517,1.268,518,1.899,519,1.268,520,1.268,521,1.268,522,1.789,523,1.268,524,1.268,525,1.268,526,1.268,527,1.268,528,1.268,529,1.268,530,1.268,531,1.268,532,1.268,540,0.738,541,1.268,542,1.194,544,0.776,615,0.956,616,1.358,617,1.432,618,0.956,619,1.907,620,0.956,621,0.817,622,0.956,623,0.956,624,0.776,625,0.956,626,0.738,627,0.907,628,0.956,629,0.776,630,0.956,631,1.432,632,0.738,633,0.997,634,1.432,635,0.776,636,0.776,637,0.956,638,0.956,639,0.738,640,0.776,641,0.956,642,0.776,643,0.956,644,1.548,645,0.956,646,0.776,647,0.956,648,0.701,649,0.956,650,0.776,651,0.956,652,0.956,653,1.009,654,1.394,656,2.022,658,1.432,660,1.432,665,3.832,666,1.35,667,1.35,668,1.35,669,1.35,670,1.35,671,1.35,672,1.35,673,1.35,674,1.35,675,1.35,676,1.35,677,1.35,678,1.35,679,1.35,680,1.35,681,1.35,682,1.35,683,1.35,684,1.35,685,1.35,686,1.35,687,1.35,688,2.005,689,1.35,690,1.35,691,1.35,692,1.35,693,1.35,694,1.35,695,1.35,696,1.35,697,1.35,698,1.35,700,1.548,701,1.548,702,1.35,703,1.35,704,1.35,705,1.268,706,1.35,707,1.35,708,1.35,992,1.819,1075,1.671,1246,3.001,1404,1.819,1426,2.253,1428,2.253,1429,3.939,1430,4.722,1431,3.939,1432,3.939]],["title/components/TableComponent.html",[403,0.498,648,0.968]],["body/components/TableComponent.html",[0,0.157,1,1.071,3,0.162,4,0.077,5,0.214,8,0.102,9,0.32,10,0.792,12,1.228,14,1.953,17,0.641,27,0.606,29,0.488,30,0.973,31,1.116,33,1.232,34,0.021,35,0.705,36,0.34,37,0.582,41,1.352,42,0.724,51,1.288,54,2.404,58,1.507,67,0.947,72,1.214,73,0.228,74,0.272,75,1.144,76,1.144,77,1.144,78,1.144,79,1.015,80,1.144,81,1.144,82,1.144,84,1.144,97,1.301,104,0.952,111,1.965,128,1.855,136,1.153,148,1.743,156,1.33,181,3.496,189,1.144,190,1.144,191,1.144,192,1.228,231,0.009,232,0.009,295,1.939,303,0.723,304,0.251,385,2.596,403,0.56,404,0.616,405,1.136,406,0.758,407,0.719,409,1.024,411,1.337,412,0.719,413,2.209,414,2.079,415,0.758,417,0.758,423,1.567,431,1.519,434,1.496,439,0.683,456,1.264,461,2.011,463,1.567,474,0.683,478,1.225,539,2.946,540,0.585,544,0.616,615,0.758,616,1.136,617,1.198,618,0.758,619,1.687,620,0.758,621,0.648,622,0.758,623,0.758,624,0.616,625,0.758,626,0.585,627,0.719,628,0.758,629,0.616,630,0.758,631,1.198,632,0.585,633,1.174,634,1.198,635,0.616,636,0.616,637,0.758,638,0.758,639,0.585,640,0.616,641,0.758,642,0.616,643,0.758,644,0.616,645,0.758,646,0.616,647,0.758,648,1.236,649,0.758,650,0.616,651,0.758,652,0.758,653,0.8,654,2.132,658,1.198,660,1.198,709,1.692,728,1.443,760,1.443,783,2.279,791,1.071,804,1.443,805,2.279,816,1.443,848,2.596,949,1.228,1004,1.787,1005,3.21,1043,1.59,1101,2.382,1173,1.443,1179,1.443,1181,1.443,1183,1.443,1251,2.596,1252,1.325,1253,1.59,1254,1.59,1255,1.59,1256,1.59,1257,1.59,1258,3.113,1259,3.113,1260,3.537,1261,1.59,1262,3.113,1263,3.113,1264,3.113,1265,1.59,1266,1.59,1267,2.279,1268,2.279,1269,2.596,1270,1.59,1271,1.59,1272,1.59,1273,1.59,1274,1.59,1275,1.59,1276,3.113,1277,1.59,1278,1.59,1279,3.21,1280,1.59,1281,1.59,1282,1.59,1283,1.59,1284,1.59,1285,1.59,1286,1.59,1287,1.59,1288,1.59,1289,2.512,1290,3.113,1291,3.852,1292,2.512,1293,3.113,1294,3.113,1295,3.113,1296,3.113,1297,3.113,1298,3.113,1299,3.113,1300,2.512,1301,3.113,1302,2.512,1303,3.113,1304,3.852,1305,3.113,1306,2.512,1307,2.512,1308,1.59,1309,1.59,1310,3.852,1311,2.512,1312,3.537,1313,2.512,1314,2.512,1315,2.512,1316,3.21,1317,3.537,1318,2.512,1319,1.59,1320,2.512,1321,1.59,1322,2.512,1323,2.512,1324,2.512,1325,3.537,1326,1.59,1327,1.59,1328,1.59,1329,2.512,1330,2.512,1331,2.512,1332,1.59,1333,2.826,1334,1.59,1335,1.59,1336,1.59,1337,2.512,1338,2.512,1339,1.59,1340,2.512,1341,1.59,1342,1.59,1343,3.852,1344,1.59,1345,3.537,1346,1.59,1347,2.512,1348,1.59,1349,1.59,1350,2.512,1351,1.59,1352,1.59,1353,1.59,1354,1.59,1355,1.59,1356,1.59,1357,2.512,1358,1.59,1359,2.512,1360,1.59,1361,2.512,1362,1.59,1363,3.537,1364,1.59,1365,1.59,1366,1.59,1367,1.59,1368,2.512,1369,1.59,1370,1.59,1371,1.59,1372,1.59,1373,1.59,1374,2.512,1375,1.59,1376,1.59,1377,2.512,1378,1.59,1379,3.113,1380,2.512,1381,1.59,1382,3.113,1383,2.512,1384,1.59,1385,1.59,1386,1.59,1387,1.59,1388,1.59,1433,3.295,1434,4.084,1435,3.295,1436,3.295,1437,3.295,1438,3.295,1439,3.295,1440,3.295,1441,3.295,1442,4.084,1443,3.295,1444,3.295,1445,2.085,1446,2.085,1447,2.085,1448,2.085,1449,2.085,1450,2.085,1451,2.085,1452,2.085,1453,1.787,1454,2.085,1455,2.085,1456,2.085,1457,3.295,1458,2.085,1459,2.085,1460,2.085,1461,2.085,1462,2.085,1463,2.085,1464,2.085,1465,2.085,1466,2.085,1467,2.085,1468,2.085,1469,2.085,1470,2.085,1471,2.085,1472,2.085,1473,2.085,1474,2.085,1475,2.085,1476,2.085,1477,2.085,1478,3.295,1479,4.64,1480,3.295,1481,3.295,1482,3.295,1483,3.295,1484,3.295,1485,3.295,1486,1.59,1487,2.085,1488,2.085,1489,2.085,1490,2.085]],["title/components/TextInputComponent.html",[403,0.498,650,1.073]],["body/components/TextInputComponent.html",[0,0.191,3,0.188,4,0.093,5,0.141,8,0.124,9,0.372,10,0.921,13,1.559,17,0.745,27,0.467,29,0.504,31,1.157,33,0.948,34,0.021,35,0.679,36,0.361,37,0.448,41,1.624,42,0.886,51,1.281,58,1.238,65,0.642,72,1.329,73,0.124,79,0.667,97,0.712,104,0.521,127,0.973,135,2.317,156,0.83,231,0.01,232,0.01,303,0.666,304,0.306,315,1.087,403,0.634,404,2.21,405,1.322,406,0.922,407,0.875,409,1.192,410,1.437,411,1.513,412,0.875,413,2.286,414,2.156,415,0.922,416,1.873,417,0.922,418,2.483,419,2.804,420,1.849,421,1.741,422,1.849,423,2.231,424,2.912,425,2.228,426,1.849,427,2.228,428,2.228,429,2.228,430,2.228,431,1.686,432,1.849,433,2.228,434,1.741,435,1.471,436,1.255,437,1.849,438,1.322,439,1.255,440,1.981,441,2.231,442,1.471,443,1.471,444,1.471,445,1.471,446,2.804,447,2.339,448,2.099,449,2.099,450,2.099,451,1.471,452,2.099,453,1.471,454,1.471,455,1.223,456,2.121,457,2.511,458,1.907,461,1.601,463,0.973,465,0.789,468,1.152,472,0.875,474,2.083,478,1.262,483,1.223,488,0.831,494,1.223,501,1.223,507,1.849,508,1.152,509,1.152,510,1.223,511,1.223,512,1.223,513,1.849,514,1.223,515,1.223,516,1.223,517,1.223,518,1.849,519,1.223,520,1.223,521,1.223,522,1.741,523,1.223,524,1.223,525,1.223,526,1.223,527,1.223,528,1.223,529,1.223,530,1.223,531,1.223,532,1.223,540,0.712,541,1.223,542,1.152,544,0.749,615,0.922,616,1.322,617,1.394,618,0.922,619,1.873,620,0.922,621,0.789,622,0.922,623,0.922,624,0.749,625,0.922,626,0.712,627,0.875,628,0.922,629,0.749,630,0.922,631,1.394,632,0.712,633,0.97,634,1.394,635,0.749,636,0.749,637,0.922,638,0.922,639,0.712,640,0.749,641,0.922,642,0.749,643,0.922,644,0.749,645,0.922,646,0.749,647,0.922,648,0.676,649,0.922,650,1.521,651,0.922,652,0.922,653,0.973,654,1.364,656,1.968,658,1.394,660,1.394,665,3.822,666,1.303,667,1.303,668,1.303,669,1.303,670,1.303,671,1.303,672,1.303,673,1.303,674,1.303,675,1.303,676,1.303,677,1.303,678,1.303,679,1.303,680,1.303,681,1.303,682,1.303,683,1.303,684,1.303,685,1.303,686,1.303,687,1.303,689,1.303,690,1.303,691,1.303,692,1.303,693,1.303,694,1.303,695,1.303,696,1.303,697,1.303,698,1.303,699,1.755,700,1.494,701,1.494,702,1.303,703,1.303,704,1.303,705,1.223,706,1.303,707,1.303,708,1.303,821,1.755,986,1.755,987,3.523,988,2.923,990,3.285,1043,2.923,1071,1.934,1074,2.174,1157,3.523,1158,3.523,1316,3.197,1486,1.934,1491,3.285,1492,2.537]],["title/pipes/TranslatePipe.html",[1101,1.865,1493,2.309]],["body/pipes/TranslatePipe.html",[0,0.403,3,0.262,4,0.196,5,0.196,17,1.038,31,0.827,33,1.096,34,0.02,35,0.762,36,0.262,37,0.518,51,1.038,73,0.262,97,1.497,136,1.218,219,2.741,231,0.017,232,0.017,303,0.765,304,0.643,316,2.741,409,1.659,412,1.841,458,2.191,709,3.482,755,2.741,1101,3.261,1493,4.037,1494,5.338,1495,4.573,1496,5.338,1497,6.352,1498,5.338,1499,6.352,1500,5.338,1501,5.338,1502,5.338,1503,5.338,1504,5.338,1505,5.338]],["title/injectables/TranslationService.html",[233,0.919,458,1.253]],["body/injectables/TranslationService.html",[0,0.308,3,0.2,4,0.15,5,0.15,8,0.2,9,0.521,10,1.442,14,2.408,17,1.044,27,0.751,29,0.546,31,1.09,33,1.359,34,0.021,35,0.745,36,0.345,37,0.643,41,1.442,42,0.772,51,1.24,58,1.442,72,0.981,73,0.2,111,1.336,128,2.439,136,0.931,156,1.299,189,2.945,190,2.945,191,2.945,217,2.403,222,2.824,231,0.014,232,0.014,233,1.359,235,1.854,303,0.647,304,0.492,312,1.75,313,1.75,316,2.096,458,1.852,461,2.059,539,3.633,544,1.205,720,2.824,721,4.051,723,3.413,744,2.403,1191,4.6,1506,3.498,1507,6.001,1508,6.931,1509,5.37,1510,5.37,1511,5.37,1512,4.6,1513,5.37,1514,5.37,1515,4.083,1516,5.37,1517,4.083,1518,5.37,1519,5.37,1520,4.083,1521,5.37,1522,4.083,1523,5.37,1524,4.083,1525,4.083,1526,5.37,1527,4.083,1528,4.083,1529,4.083,1530,4.083,1531,4.083,1532,6.001,1533,4.083,1534,4.083,1535,4.083,1536,4.083,1537,5.37,1538,4.083,1539,4.083,1540,4.083,1541,4.083,1542,4.083,1543,4.083,1544,4.083,1545,5.37,1546,4.083,1547,5.37]],["title/injectables/UserService.html",[233,0.919,255,2.513]],["body/injectables/UserService.html",[0,0.23,3,0.15,4,0.112,5,0.112,8,0.15,9,0.426,10,1.629,17,0.854,27,0.562,29,0.45,30,2.001,31,1.113,33,1.391,34,0.021,35,0.762,36,0.348,37,0.658,41,1.056,42,0.565,51,1.361,65,1.303,67,3.276,70,2.111,73,0.15,104,1.156,111,2.219,136,1.62,156,1.219,166,3.562,218,1.237,231,0.012,232,0.012,233,1.112,235,1.386,242,4.825,245,3.764,246,4.825,255,3.04,285,6.252,295,3.859,303,0.678,304,0.368,307,1.674,312,1.308,313,1.308,316,1.567,329,2.615,359,3.764,385,2.792,421,2.823,478,1.175,544,0.901,720,2.111,721,3.579,723,2.792,744,1.797,874,2.327,875,4.294,882,3.925,885,3.35,899,2.327,966,4.411,976,2.615,997,4.432,1414,5.88,1493,1.94,1548,2.615,1549,5.149,1550,4.394,1551,4.394,1552,4.394,1553,4.394,1554,4.394,1555,4.394,1556,5.632,1557,5.632,1558,4.394,1559,4.394,1560,4.394,1561,4.394,1562,3.052,1563,4.394,1564,3.052,1565,4.394,1566,3.052,1567,4.394,1568,3.052,1569,4.394,1570,3.052,1571,4.394,1572,3.052,1573,3.052,1574,3.052,1575,4.394,1576,5.632,1577,5.632,1578,3.052,1579,4.394,1580,3.052,1581,4.394,1582,3.052,1583,3.052,1584,3.052,1585,4.394,1586,3.052,1587,4.394,1588,3.052,1589,5.149,1590,5.149,1591,5.149,1592,3.052,1593,5.149,1594,3.052,1595,3.052,1596,3.052,1597,3.052,1598,3.052,1599,3.052,1600,3.052,1601,3.052,1602,3.052,1603,3.052,1604,3.052,1605,3.052,1606,5.149,1607,4.394,1608,3.052,1609,3.052,1610,3.052,1611,3.052,1612,4.394,1613,3.052,1614,3.052,1615,4.394,1616,3.052,1617,3.052,1618,3.052,1619,4.394,1620,3.052,1621,3.052,1622,3.052,1623,3.052,1624,3.052,1625,3.052,1626,3.052,1627,3.052,1628,3.052,1629,3.052,1630,3.052,1631,3.052,1632,3.052,1633,3.052,1634,3.052,1635,3.052]],["title/coverage.html",[1636,4.254]],["body/coverage.html",[0,0.424,1,1.845,5,0.132,6,4.022,7,4.022,30,1.061,34,0.02,36,0.176,74,0.602,88,2.283,112,2.283,132,2.283,148,2.634,156,0.778,209,2.283,211,2.283,215,3.108,231,0.013,232,0.013,233,1.775,234,2.739,236,3.078,255,2.486,257,2.486,397,2.283,398,3.757,402,2.283,403,0.997,404,1.061,408,3.078,410,1.117,457,1.632,458,1.239,465,1.117,472,1.239,488,1.176,621,1.117,624,1.061,626,1.008,629,1.061,632,1.008,633,1.532,635,1.061,636,1.061,639,1.008,640,1.061,642,1.061,644,1.061,646,1.061,648,0.957,650,1.061,654,2.165,655,3.078,711,2.283,712,3.078,741,1.971,770,2.486,771,2.486,772,3.078,844,2.486,845,3.733,846,3.757,878,2.486,901,3.757,915,2.486,956,3.078,984,2.739,985,2.739,986,3.891,997,2.486,998,3.078,1028,2.486,1029,2.486,1031,2.486,1032,2.486,1045,3.757,1066,2.739,1067,2.739,1089,3.078,1101,1.845,1157,2.739,1158,2.739,1195,2.739,1196,3.078,1198,1.845,1200,3.847,1212,1.971,1213,3.757,1214,3.757,1219,2.486,1241,2.739,1242,3.078,1246,2.283,1247,3.078,1251,2.283,1252,3.575,1269,2.283,1279,2.486,1389,3.078,1399,3.078,1408,3.078,1418,3.078,1428,3.078,1486,3.757,1493,2.283,1495,3.078,1506,3.078,1548,3.078,1636,3.078,1637,3.593,1638,3.593,1639,3.593,1640,3.593,1641,3.593,1642,3.593,1643,3.593,1644,4.928,1645,3.078,1646,6.053,1647,6.832,1648,4.928,1649,6.053,1650,3.593,1651,3.078,1652,2.739,1653,5.625,1654,5.625,1655,6.053,1656,3.593,1657,5.625,1658,3.593,1659,4.928,1660,3.593,1661,3.593,1662,3.593,1663,4.928,1664,4.222,1665,3.593,1666,3.593,1667,4.222,1668,3.593,1669,3.078,1670,3.593,1671,3.593,1672,4.288,1673,3.593,1674,3.078,1675,3.078,1676,6.342,1677,4.928,1678,3.593,1679,3.593,1680,3.593]],["title/dependencies.html",[1096,3.024,1681,3.03]],["body/dependencies.html",[34,0.02,57,3.113,231,0.017,232,0.017,304,0.637,305,4.53,307,2.901,540,1.483,1096,3.658,1115,5.412,1116,4.816,1165,5.412,1166,5.412,1167,4.53,1170,4.53,1682,5.288,1683,7.539,1684,5.288,1685,5.288,1686,5.288,1687,5.288,1688,5.288,1689,5.288,1690,5.288,1691,5.288,1692,5.288,1693,5.288,1694,5.288,1695,5.288,1696,5.288,1697,5.288,1698,5.288,1699,5.288,1700,5.288,1701,5.288,1702,5.288,1703,5.288,1704,5.288,1705,5.288]],["title/miscellaneous/enumerations.html",[1706,1.784,1707,3.745]],["body/miscellaneous/enumerations.html",[5,0.244,8,0.283,34,0.019,42,0.901,231,0.018,232,0.018,295,3.912,654,1.702,1252,3.664,1267,4.598,1268,4.598,1706,3.394,1707,4.939,1708,5.766]],["title/miscellaneous/functions.html",[1706,1.784,1709,3.745]],["body/miscellaneous/functions.html",[4,0.231,6,3.103,7,3.971,8,0.259,14,1.917,29,0.527,33,1.435,34,0.02,35,0.786,36,0.343,37,0.678,42,0.811,50,3.712,65,1.596,132,4.007,156,1.141,213,3.647,216,3.647,217,3.103,219,2.707,225,3.647,226,3.35,227,3.647,231,0.017,232,0.017,423,2.022,458,2.175,654,1.556,881,4.362,1645,5.402,1667,4.516,1669,5.402,1672,4.019,1674,5.402,1706,3.103,1709,4.516,1710,4.516,1711,5.272,1712,5.402,1713,4.516,1714,5.272,1715,6.305,1716,5.272]],["title/index.html",[8,0.149,1717,3.03,1718,3.03]],["body/index.html",[4,0.198,34,0.017,35,0.607,53,4.714,156,1.168,231,0.017,232,0.017,263,4.624,403,0.935,414,1.678,436,1.767,727,6.161,768,4.624,808,4.424,1512,5.478,1719,5.398,1720,6.395,1721,5.398,1722,5.398,1723,5.398,1724,5.398,1725,4.624,1726,5.398,1727,6.814,1728,7.045,1729,5.398,1730,5.398,1731,5.398,1732,5.398,1733,5.398,1734,5.398,1735,5.398,1736,5.398,1737,5.398,1738,5.398,1739,5.398,1740,5.398,1741,6.814,1742,5.398,1743,5.398,1744,5.398,1745,5.398,1746,5.398,1747,5.398,1748,5.398]],["title/modules.html",[1095,3.785]],["body/modules.html",[34,0.018,231,0.018,232,0.018,1094,4.086,1095,4.503,1116,4.503,1749,5.906,1750,5.906,1751,5.906]],["title/interfaces/optionsConfig.html",[74,0.3,1652,2.77]],["body/interfaces/optionsConfig.html",[3,0.254,4,0.19,5,0.19,8,0.254,9,0.605,29,0.39,34,0.02,36,0.361,37,0.73,73,0.254,74,0.427,79,1.165,218,2.097,231,0.017,232,0.017,297,4.314,478,1.692,847,5.102,1199,1.609,1651,4.433,1652,4.753,1752,6.947,1753,6.947,1754,6.947,1755,6.947,1756,6.947,1757,6.947,1758,5.175]],["title/overview.html",[1759,4.254]],["body/overview.html",[2,3.017,34,0.02,139,3.3,231,0.015,232,0.015,235,1.981,404,1.829,405,1.504,621,2.188,624,2.079,626,1.737,629,2.079,632,1.737,635,2.079,636,2.127,639,1.737,640,2.079,642,2.079,644,2.079,646,2.079,648,1.876,650,2.079,711,3.937,741,3.398,1093,3.736,1094,5.342,1096,3.878,1097,3.736,1098,3.736,1099,3.736,1100,3.736,1101,3.614,1102,4.802,1103,3.017,1104,3.736,1199,1.356,1491,3.736,1493,2.772,1664,3.736,1725,3.736,1759,3.736,1760,4.361]],["title/interfaces/searchObj.html",[74,0.3,878,2.513]],["body/interfaces/searchObj.html",[0,0.299,3,0.194,4,0.145,5,0.145,8,0.194,9,0.511,29,0.563,30,1.553,34,0.021,36,0.337,37,0.654,42,0.677,57,2.33,67,2.977,72,0.951,73,0.258,74,0.326,104,0.812,136,1.664,148,2.038,156,0.857,231,0.014,232,0.014,233,1.332,303,0.758,304,0.477,307,2.171,309,3.018,312,1.697,313,1.697,314,5.527,316,2.032,374,4.011,416,1.604,474,2.062,544,1.169,721,3.344,723,2.516,744,2.33,807,4.002,844,2.739,845,2.33,846,3.018,847,3.018,848,2.516,851,3.391,855,3.391,856,5.893,858,5.395,859,3.391,861,3.391,863,3.391,864,5.063,865,5.063,867,3.391,870,3.391,872,3.391,874,4.505,875,4.505,876,3.391,877,4.507,878,4.088,879,5.395,880,3.391,881,3.64,882,4.801,883,3.391,884,3.391,885,4.011,886,3.391,887,3.391,888,3.391,889,3.391,890,5.063,891,3.391,892,3.391,893,3.391,894,3.391,895,3.391,896,3.391,897,3.391,898,3.391,899,3.018,900,3.391,1199,1.23]],["title/miscellaneous/variables.html",[1706,1.784,1761,3.745]],["body/miscellaneous/variables.html",[6,2.974,7,4.056,8,0.248,15,3.495,29,0.5,30,1.491,34,0.02,36,0.248,41,1.656,42,0.909,67,2.294,75,2.771,76,2.771,77,2.771,78,2.771,80,2.771,81,2.771,82,2.771,83,3.495,84,2.771,85,3.495,86,3.495,87,3.495,111,1.654,112,3.905,113,3.495,114,3.495,115,3.495,116,3.495,117,3.495,118,3.495,119,3.495,120,3.495,121,3.495,122,3.495,123,3.495,124,3.495,125,3.495,126,3.495,129,2.436,136,1.402,209,3.905,210,3.495,211,3.905,212,3.495,231,0.016,232,0.016,654,1.491,881,4.251,1453,5.674,1672,3.851,1675,5.264,1706,2.974,1710,4.328,1712,5.674,1713,5.264,1761,4.328,1762,5.051,1763,5.051,1764,5.051,1765,5.051,1766,5.051,1767,5.051,1768,5.051]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["0.11.4",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["0.12.4",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":139,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["1\">es",{"_index":1060,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["1.19.0",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1725,"title":{},"body":{"index.html":{},"overview.html":{}}}],["100",{"_index":1486,"title":{},"body":{"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["11",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["12.2.9",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":820,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["15",{"_index":1760,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1664,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["18",{"_index":1228,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["2.0.8",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["2/32",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":827,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["3",{"_index":1491,"title":{},"body":{"components/TextInputComponent.html":{},"overview.html":{}}}],["3/18",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":813,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["350px",{"_index":1044,"title":{},"body":{"injectables/DialogService.html":{}}}],["4.17.1",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["46",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["50px",{"_index":1398,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["5px",{"_index":1490,"title":{},"body":{"components/TableComponent.html":{}}}],["6",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":814,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["7/15",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":166,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["_",{"_index":162,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_blank",{"_index":173,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_filter",{"_index":1675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_isloggedin",{"_index":237,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_options",{"_index":11,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["_path",{"_index":1507,"title":{},"body":{"injectables/TranslationService.html":{}}}],["accessors",{"_index":251,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{}}}],["according",{"_index":60,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["action",{"_index":1281,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["actionresp",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actionresp.hasownproperty('actions",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["actions",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":652,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["adapter",{"_index":1167,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["add",{"_index":1285,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["additional",{"_index":266,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["adduser",{"_index":1550,"title":{},"body":{"injectables/UserService.html":{}}}],["adduser(user",{"_index":1561,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles",{"_index":1551,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserandroles(user",{"_index":1563,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserres.id",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["afterdialogcallback",{"_index":1016,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterdialogcallback(result",{"_index":1037,"title":{},"body":{"injectables/DialogService.html":{}}}],["afterviewinit",{"_index":1258,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["age",{"_index":1227,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["align",{"_index":809,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["allactionswithduplicates",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["allowed",{"_index":1579,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedactions",{"_index":238,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["already",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{}}}],["anderen",{"_index":1232,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["angular",{"_index":1722,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":1257,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/common",{"_index":1170,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["angular/common/locales/de",{"_index":1172,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/compiler",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["angular/forms",{"_index":540,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1165,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1132,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/button",{"_index":1144,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/card",{"_index":1153,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/checkbox",{"_index":1136,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/core",{"_index":993,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{}}}],["angular/material/datepicker",{"_index":1134,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/dialog",{"_index":791,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["angular/material/expansion",{"_index":1146,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/form",{"_index":1124,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/grid",{"_index":1148,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/icon",{"_index":1122,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/input",{"_index":1126,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/list",{"_index":1128,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/paginator",{"_index":1183,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/radio",{"_index":1150,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/select",{"_index":1130,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sidenav",{"_index":1120,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slide",{"_index":1187,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/slider",{"_index":1185,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/sort",{"_index":1181,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/stepper",{"_index":1138,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/table",{"_index":1179,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angular/material/tooltip",{"_index":1140,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/material/tree",{"_index":1142,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["angular/platform",{"_index":1115,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["angularcsv",{"_index":1,"title":{"classes/AngularCsv.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["angularcsv(tmpdata",{"_index":1387,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["angularcsv.isfloat(data",{"_index":200,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["angularformbuilder",{"_index":1719,"title":{},"body":{"index.html":{}}}],["api",{"_index":874,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["api/user?partlastname",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["apibaseurl",{"_index":1549,"title":{},"body":{"injectables/UserService.html":{}}}],["apiendpoint",{"_index":1752,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["app",{"_index":414,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["application/json",{"_index":882,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["applyfilter",{"_index":1433,"title":{},"body":{"components/TableComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1306,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["array",{"_index":45,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["array.from(new",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["array.isarray(this.data.errormsg",{"_index":1054,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["array.isarray(this.data.infomsg",{"_index":1391,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["array.isarray(value",{"_index":933,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["artifacts",{"_index":1743,"title":{},"body":{"index.html":{}}}],["assign",{"_index":225,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["asyncvalidatorfn",{"_index":1202,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["auf",{"_index":1231,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["aufgetreten",{"_index":1059,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["authentication",{"_index":275,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authenticationservice",{"_index":234,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["auto",{"_index":1492,"title":{},"body":{"components/TextInputComponent.html":{}}}],["autocomplete",{"_index":435,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["autocomplete'},{'name",{"_index":622,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["autocompletecomponent",{"_index":621,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1733,"title":{},"body":{"index.html":{}}}],["autosearch",{"_index":397,"title":{"classes/AutoSearch.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["availableactions",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["availableactions.indexof(systemaction",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["base",{"_index":415,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent",{"_index":404,"title":{"components/BaseFieldComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["basefieldcomponent:14",{"_index":704,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:15",{"_index":699,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:151",{"_index":695,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:155",{"_index":693,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:159",{"_index":698,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:16",{"_index":700,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:17",{"_index":701,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:18",{"_index":992,"title":{},"body":{"components/DateInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["basefieldcomponent:185",{"_index":694,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:189",{"_index":691,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:19",{"_index":1412,"title":{},"body":{"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{}}}],["basefieldcomponent:192",{"_index":696,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:20",{"_index":1413,"title":{},"body":{"components/SelectComponent.html":{}}}],["basefieldcomponent:21",{"_index":1071,"title":{},"body":{"components/FileInputComponent.html":{},"components/SelectComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:22",{"_index":688,"title":{},"body":{"components/CheckboxComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SliderComponent.html":{}}}],["basefieldcomponent:23",{"_index":1425,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["basefieldcomponent:25",{"_index":991,"title":{},"body":{"components/DateInputComponent.html":{},"components/SelectComponent.html":{}}}],["basefieldcomponent:26",{"_index":682,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:28",{"_index":687,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:29",{"_index":683,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:30",{"_index":670,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:31",{"_index":681,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:32",{"_index":679,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:33",{"_index":680,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:34",{"_index":678,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:35",{"_index":684,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:36",{"_index":671,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:37",{"_index":668,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:38",{"_index":673,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:39",{"_index":672,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:40",{"_index":685,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:41",{"_index":675,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:42",{"_index":677,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:43",{"_index":676,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:44",{"_index":686,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:45",{"_index":669,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:46",{"_index":674,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:47",{"_index":666,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:49",{"_index":667,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:50",{"_index":703,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:51",{"_index":702,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:59",{"_index":689,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:63",{"_index":690,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:76",{"_index":692,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basefieldcomponent:97",{"_index":697,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["basic",{"_index":1599,"title":{},"body":{"injectables/UserService.html":{}}}],["basierend",{"_index":1230,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["before",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["behaviorsubject",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataStoreService.html":{}}}],["behaviorsubject(true",{"_index":978,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["beträgt",{"_index":518,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["bitte",{"_index":1416,"title":{},"body":{"components/SelectComponent.html":{}}}],["bkuuser",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["bla",{"_index":239,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["blob",{"_index":155,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blob([this.csv",{"_index":157,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["blur",{"_index":1210,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["body",{"_index":57,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["body).pipe",{"_index":898,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["bom",{"_index":91,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/optionsConfig.html":{}}}],["boolean(input",{"_index":138,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["bootstrap",{"_index":1109,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["bottom",{"_index":1489,"title":{},"body":{"components/TableComponent.html":{}}}],["break",{"_index":1064,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["browse",{"_index":1751,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1116,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1118,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browseranimationsmodule",{"_index":1117,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["browsermodule",{"_index":1114,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["btn",{"_index":614,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["btoa(credentials",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{}}}],["build",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["buildfiletree",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildfiletree(obj",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buildtree(config",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buttons",{"_index":1282,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["c",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["called",{"_index":223,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["categories",{"_index":879,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["center",{"_index":811,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["change",{"_index":436,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"index.html":{}}}],["changes",{"_index":1464,"title":{},"body":{"components/TableComponent.html":{}}}],["changes.data.currentvalue",{"_index":1352,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["changes['data",{"_index":1351,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["check",{"_index":70,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{}}}],["checkbox",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox'},{'name",{"_index":625,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["checkbox.component.html",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":624,"title":{"components/CheckboxComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkifuserisalreadyloggedin",{"_index":241,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["checkkey",{"_index":1674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkkey(ts",{"_index":1713,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":260,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["children",{"_index":399,"title":{},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/MenuNode.html":{}}}],["children.push(value.name",{"_index":759,"title":{},"body":{"injectables/ConfigService.html":{}}}],["choose",{"_index":1088,"title":{},"body":{"components/FileInputComponent.html":{}}}],["class",{"_index":0,"title":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"overview.html":{}}}],["classes/angular",{"_index":1265,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["classes/field",{"_index":705,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["clear",{"_index":1324,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["cli",{"_index":1723,"title":{},"body":{"index.html":{}}}],["cluster_formbuildermodule",{"_index":1097,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_declarations",{"_index":1098,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_exports",{"_index":1099,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["cluster_formbuildermodule_providers",{"_index":1100,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["code",{"_index":1739,"title":{},"body":{"index.html":{}}}],["codetables",{"_index":1286,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumn.collumnkey",{"_index":1479,"title":{},"body":{"components/TableComponent.html":{}}}],["collumn.collumnname",{"_index":1480,"title":{},"body":{"components/TableComponent.html":{}}}],["collumnkey",{"_index":1253,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnname",{"_index":1254,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["collumnstobedisplayed",{"_index":1293,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["color",{"_index":1422,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["column.collumnname",{"_index":1340,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnname",{"_index":1369,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames",{"_index":1380,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columnnames.filter((el",{"_index":1381,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns",{"_index":1377,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["columns.filter((el",{"_index":1378,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["colums",{"_index":1457,"title":{},"body":{"components/TableComponent.html":{}}}],["commonmodule",{"_index":1169,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["component",{"_index":403,"title":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":620,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["components",{"_index":405,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"overview.html":{}}}],["components/autocomplete/autocomplete.component",{"_index":1160,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/autocomplete/autocomplete.component.ts",{"_index":1672,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["components/checkbox/checkbox.component",{"_index":1161,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/checkbox/checkbox.component.ts",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["components/checkbox/checkbox.component.ts:13",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["components/date",{"_index":984,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/confirm",{"_index":770,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/error",{"_index":1028,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/dialogs/info",{"_index":1031,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["components/file",{"_index":1066,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component",{"_index":1162,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/radiobutton/radiobutton.component.ts",{"_index":1399,"title":{},"body":{"components/RadiobuttonComponent.html":{},"coverage.html":{}}}],["components/radiobutton/radiobutton.component.ts:14",{"_index":1403,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["components/select/select.component",{"_index":1156,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/select/select.component.ts",{"_index":1408,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["components/select/select.component.ts:17",{"_index":1411,"title":{},"body":{"components/SelectComponent.html":{}}}],["components/slider/slider.component",{"_index":1163,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slider/slider.component.ts",{"_index":1428,"title":{},"body":{"components/SliderComponent.html":{},"coverage.html":{}}}],["components/slider/slider.component.ts:14",{"_index":1432,"title":{},"body":{"components/SliderComponent.html":{}}}],["components/slidetoggle/slidetoggle.component",{"_index":1189,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/slidetoggle/slidetoggle.component.ts",{"_index":1418,"title":{},"body":{"components/SlideToggleComponent.html":{},"coverage.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:14",{"_index":1424,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/slidetoggle/slidetoggle.component.ts:15",{"_index":1423,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["components/table/table.component",{"_index":1177,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["components/table/table.component.ts",{"_index":1252,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["components/table/table.component.ts:111",{"_index":1462,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:116",{"_index":1463,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:130",{"_index":1469,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:135",{"_index":1468,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:139",{"_index":1466,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:144",{"_index":1467,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:150",{"_index":1455,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:163",{"_index":1456,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:179",{"_index":1459,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:195",{"_index":1470,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:199",{"_index":1454,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:53",{"_index":1476,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:54",{"_index":1471,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:55",{"_index":1473,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:56",{"_index":1448,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:57",{"_index":1475,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:58",{"_index":1472,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:59",{"_index":1446,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:60",{"_index":1447,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:61",{"_index":1445,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:62",{"_index":1474,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:63",{"_index":1477,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:64",{"_index":1451,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:65",{"_index":1450,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:66",{"_index":1449,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:67",{"_index":1444,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:74",{"_index":1452,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:80",{"_index":1460,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:87",{"_index":1461,"title":{},"body":{"components/TableComponent.html":{}}}],["components/table/table.component.ts:93",{"_index":1465,"title":{},"body":{"components/TableComponent.html":{}}}],["components/text",{"_index":1157,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["config",{"_index":127,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["config.disabled",{"_index":577,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hint",{"_index":567,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.hintlabel",{"_index":569,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute",{"_index":593,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmlattribute.autocomplete",{"_index":594,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.htmltype",{"_index":590,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.icon",{"_index":592,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.name",{"_index":570,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators",{"_index":576,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.max",{"_index":581,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.maxlength",{"_index":585,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.min",{"_index":583,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.minlength",{"_index":587,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.validators.required",{"_index":578,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config.value",{"_index":588,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["config[page",{"_index":751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[page][formn",{"_index":752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configdefaults",{"_index":112,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configs",{"_index":713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configservice",{"_index":711,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{},"overview.html":{}}}],["configurable",{"_index":1283,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["confirm",{"_index":627,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["confirm(messagestring",{"_index":1007,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmdialogcomponent",{"_index":626,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connector.service.ts",{"_index":846,"title":{},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["connector.service.ts:17",{"_index":854,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:23",{"_index":857,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:31",{"_index":873,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:42",{"_index":866,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:69",{"_index":860,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:79",{"_index":869,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:83",{"_index":871,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:87",{"_index":862,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["connector.service.ts:91",{"_index":868,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["console.log(\"newtree",{"_index":763,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log('[authenticationservice",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('csv",{"_index":1388,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log('invalid",{"_index":153,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["console.log('saveallowedactions",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('saveuserprofile",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(`${key",{"_index":757,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(columnname",{"_index":1371,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(columns",{"_index":1383,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(config",{"_index":747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(data",{"_index":1370,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(e",{"_index":1083,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(form",{"_index":754,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(key",{"_index":1502,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(langpath",{"_index":1543,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(messagestring",{"_index":1040,"title":{},"body":{"injectables/DialogService.html":{}}}],["console.log(reader",{"_index":1087,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.control",{"_index":1074,"title":{},"body":{"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["console.log(this.flatcontrolls",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(this.form",{"_index":1075,"title":{},"body":{"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["console.log(this.message",{"_index":800,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["console.log(this.name",{"_index":1073,"title":{},"body":{"components/FileInputComponent.html":{}}}],["console.log(this.options",{"_index":1404,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["console.log(this.required",{"_index":579,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(this.translate.data",{"_index":1504,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["console.log(tmpdata",{"_index":1385,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["console.log(translation",{"_index":1546,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(type",{"_index":551,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["console.log(value",{"_index":767,"title":{},"body":{"injectables/ConfigService.html":{}}}],["const",{"_index":111,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(data",{"_index":778,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["constructor(datajson",{"_index":28,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["constructor(dialog",{"_index":1004,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{}}}],["constructor(fb",{"_index":455,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(http",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DialogService.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["constructor(public",{"_index":706,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["constructor(router",{"_index":253,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["content",{"_index":807,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/searchObj.html":{}}}],["content#confirm",{"_index":822,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["content#error",{"_index":1065,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["content#info",{"_index":1397,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["control",{"_index":437,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["convet",{"_index":213,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["cookie",{"_index":269,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["coverage",{"_index":1636,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":56,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/Options.html":{}}}],["create(post",{"_index":855,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["credentials",{"_index":1583,"title":{},"body":{"injectables/UserService.html":{}}}],["csv",{"_index":12,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["csv.ts",{"_index":7,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["csv.ts:142",{"_index":66,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:156",{"_index":64,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:170",{"_index":59,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:19",{"_index":843,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:191",{"_index":55,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:20",{"_index":828,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:218",{"_index":48,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:22",{"_index":830,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:23",{"_index":829,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:24",{"_index":836,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:25",{"_index":838,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:258",{"_index":63,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:26",{"_index":839,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:27",{"_index":831,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:28",{"_index":837,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:29",{"_index":840,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:30",{"_index":832,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:31",{"_index":835,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:32",{"_index":842,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:33",{"_index":841,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:34",{"_index":833,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:35",{"_index":834,"title":{},"body":{"classes/CsvConfigConsts.html":{}}}],["csv.ts:56",{"_index":44,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:57",{"_index":46,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:58",{"_index":43,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:60",{"_index":40,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:61",{"_index":32,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:81",{"_index":69,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csv.ts:88",{"_index":52,"title":{},"body":{"classes/AngularCsv.html":{}}}],["csvconfigconsts",{"_index":88,"title":{"classes/CsvConfigConsts.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["csvconfigconsts.bom",{"_index":142,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvconfigconsts.default_decimal_separator",{"_index":116,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_field_separator",{"_index":114,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_filename",{"_index":113,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_header",{"_index":121,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_no_download",{"_index":125,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_null_to_empty_string",{"_index":126,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_obj_header",{"_index":122,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_quote",{"_index":115,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_labels",{"_index":117,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_show_title",{"_index":118,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_title",{"_index":119,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_bom",{"_index":120,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_header",{"_index":124,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.default_use_obj_header",{"_index":123,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["csvconfigconsts.eol",{"_index":186,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["csvexport",{"_index":1434,"title":{},"body":{"components/TableComponent.html":{}}}],["current",{"_index":1576,"title":{},"body":{"injectables/UserService.html":{}}}],["currentdepth",{"_index":928,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["currently",{"_index":261,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuser",{"_index":240,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["currentuserroles",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuserroles.indexof(systemrole",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentvalue",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["customfilterbasedondisplaycolumns",{"_index":1435,"title":{},"body":{"components/TableComponent.html":{}}}],["customfilterbasedondisplaycolumns(data",{"_index":1368,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["customvalidation",{"_index":438,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["das",{"_index":507,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["data",{"_index":14,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["data.indexof",{"_index":205,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\n",{"_index":206,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.indexof('\\r",{"_index":207,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.replace(/\"/g",{"_index":203,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tolocalestring",{"_index":201,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data.tostring().replace",{"_index":202,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data:attachment/csv;charset=utf",{"_index":165,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["data[columnname",{"_index":1372,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["data[columnname].tostring().trim().tolowercase().indexof(filter.tolowercase",{"_index":1373,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datachange",{"_index":714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataconnectorservice",{"_index":844,"title":{"injectables/DataConnectorService.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["dataflattnerservice",{"_index":741,"title":{"injectables/DataFlattnerService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{},"overview.html":{}}}],["dataflattnerservice.flatten(tmpdata",{"_index":762,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dataflattnerservice.isbuffer(value",{"_index":935,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataflattnerservice.unflatten(target[key",{"_index":955,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dataimporterrors",{"_index":1034,"title":{},"body":{"injectables/DialogService.html":{}}}],["datajson",{"_index":38,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["datasource",{"_index":1295,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["datastore",{"_index":256,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["datastoreservice",{"_index":257,"title":{"injectables/DataStoreService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{},"coverage.html":{}}}],["date",{"_index":630,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dateadapter",{"_index":989,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(lang",{"_index":996,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateadapter.setlocale(ts.lang",{"_index":994,"title":{},"body":{"components/DateInputComponent.html":{}}}],["dateinputcomponent",{"_index":629,"title":{"components/DateInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datumsformat",{"_index":532,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["de",{"_index":1191,"title":{},"body":{"modules/FormbuilderModule.html":{},"injectables/TranslationService.html":{}}}],["de'}.json",{"_index":1542,"title":{},"body":{"injectables/TranslationService.html":{}}}],["debug=express",{"_index":1737,"title":{},"body":{"index.html":{}}}],["decimalseparator",{"_index":77,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":1106,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["decorators",{"_index":783,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default_decimal_separator",{"_index":94,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_field_separator",{"_index":93,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_filename",{"_index":100,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_header",{"_index":105,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_no_download",{"_index":109,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_null_to_empty_string",{"_index":110,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_obj_header",{"_index":106,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_quote",{"_index":95,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_labels",{"_index":102,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_show_title",{"_index":96,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_title",{"_index":98,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_bom",{"_index":103,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_header",{"_index":108,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["default_use_obj_header",{"_index":107,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":848,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"interfaces/searchObj.html":{}}}],["delete(id",{"_index":859,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["delete_forever",{"_index":1482,"title":{},"body":{"components/TableComponent.html":{}}}],["deletebulk",{"_index":1305,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["deletefield",{"_index":849,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["deletefield(id",{"_index":861,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["deleteuser",{"_index":1552,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(user",{"_index":1565,"title":{},"body":{"injectables/UserService.html":{}}}],["delimiter",{"_index":921,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["dependencies",{"_index":1096,"title":{"dependencies.html":{}},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":50,"title":{},"body":{"classes/AngularCsv.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1730,"title":{},"body":{"index.html":{}}}],["development",{"_index":1726,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":633,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["dialog'},{'name",{"_index":628,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["dialog.component",{"_index":1027,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["dialog.component.html",{"_index":774,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.less",{"_index":773,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":772,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":788,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":786,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":781,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":785,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":782,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.service",{"_index":1596,"title":{},"body":{"injectables/UserService.html":{}}}],["dialog/confirm",{"_index":771,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["dialog_content",{"_index":823,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_message",{"_index":817,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialog_title",{"_index":803,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogdata",{"_index":1033,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":779,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["dialogref.afterclosed().subscribe((result:any",{"_index":1036,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogservice",{"_index":997,"title":{"injectables/DialogService.html":{}},"body":{"injectables/DialogService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["difference",{"_index":1669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["difference(newobj",{"_index":1714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["direction",{"_index":1487,"title":{},"body":{"components/TableComponent.html":{}}}],["directive",{"_index":618,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directives",{"_index":651,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1742,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1745,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":439,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["display",{"_index":804,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["displayedcolumns",{"_index":1298,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["dist",{"_index":1744,"title":{},"body":{"index.html":{}}}],["document.body.appendchild(link",{"_index":177,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.body.removechild(link",{"_index":179,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.createelement('a",{"_index":169,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["document.queryselector('#file",{"_index":1077,"title":{},"body":{"components/FileInputComponent.html":{}}}],["documentation",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":406,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["done",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{}}}],["done.next(updateroleresp",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["download",{"_index":54,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1082,"title":{},"body":{"components/FileInputComponent.html":{}}}],["e.target.result",{"_index":1085,"title":{},"body":{"components/FileInputComponent.html":{}}}],["edit",{"_index":1304,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["edituser",{"_index":1553,"title":{},"body":{"injectables/UserService.html":{}}}],["edituser(user",{"_index":1567,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles",{"_index":1554,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserandroles(user",{"_index":1569,"title":{},"body":{"injectables/UserService.html":{}}}],["eg",{"_index":1284,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ein",{"_index":509,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["eingeben",{"_index":516,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["eingehalten",{"_index":526,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["el",{"_index":1382,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["el.collumnname",{"_index":1379,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["element",{"_index":617,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["element[collumn.collumnname",{"_index":1481,"title":{},"body":{"components/TableComponent.html":{}}}],["elements",{"_index":1313,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["email",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["emailadresse",{"_index":529,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["encodeuri(this.csv",{"_index":167,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["entitytype",{"_index":1236,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entitäten",{"_index":1233,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["entries",{"_index":748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entries.push(tmpdata",{"_index":761,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entriesperpage",{"_index":1753,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["entry",{"_index":1287,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enum",{"_index":1266,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["enumerations",{"_index":1707,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eol",{"_index":89,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["errobj",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["error",{"_index":544,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["errordataarray",{"_index":1018,"title":{},"body":{"injectables/DialogService.html":{}}}],["errordialogsimplecomponent",{"_index":632,"title":{"components/ErrorDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormsg",{"_index":775,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["es",{"_index":1057,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["event",{"_index":1215,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["event.target",{"_index":1308,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["eventemitter",{"_index":461,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["exists",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":73,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["exports",{"_index":1108,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["express",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["falsches",{"_index":531,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["false",{"_index":97,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["fb",{"_index":418,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["fehler",{"_index":1058,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["field",{"_index":416,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["field'},{'name",{"_index":623,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["fieldseparator",{"_index":75,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fieldtocheck",{"_index":1216,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["fieldtoupdate",{"_index":1217,"title":{},"body":{"interfaces/ICustomValidation.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["fileinputcomponent",{"_index":635,"title":{"components/FileInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":15,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["filereader",{"_index":1078,"title":{},"body":{"components/FileInputComponent.html":{}}}],["files",{"_index":1735,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1343,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtercontrol",{"_index":1297,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtereddatasource",{"_index":1364,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["filtervalue",{"_index":1453,"title":{},"body":{"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fixme",{"_index":265,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["flag",{"_index":1747,"title":{},"body":{"index.html":{}}}],["flatcontrolls",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["flatten",{"_index":902,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flatten(target",{"_index":907,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["flattner.service",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{},"modules/FormbuilderModule.html":{}}}],["flattner.service.ts",{"_index":901,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["flattner.service.ts:10",{"_index":906,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:15",{"_index":914,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:26",{"_index":911,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:3",{"_index":1240,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["flattner.service.ts:31",{"_index":909,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flattner.service.ts:66",{"_index":917,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["flex",{"_index":805,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["float",{"_index":71,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["focus",{"_index":1220,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["font",{"_index":818,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["foreignfieldcheck",{"_index":1229,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["forkjoin",{"_index":1595,"title":{},"body":{"injectables/UserService.html":{}}}],["forkjoin(this.edituser(user",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{}}}],["form",{"_index":440,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["format",{"_index":49,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formatdata",{"_index":18,"title":{},"body":{"classes/AngularCsv.html":{}}}],["formatdata(data",{"_index":47,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["formbuilder",{"_index":456,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder'},{'name",{"_index":638,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formbuilder.component",{"_index":1113,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["formbuildercomponent",{"_index":636,"title":{"components/FormbuilderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formbuildermodule",{"_index":1094,"title":{"modules/FormbuilderModule.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["formbuilderservice",{"_index":1195,"title":{"injectables/FormbuilderService.html":{}},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["formcontrol",{"_index":463,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["formgroup",{"_index":468,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["formn",{"_index":750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["formservice",{"_index":457,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["forroot",{"_index":1110,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["fs",{"_index":419,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["function",{"_index":215,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"coverage.html":{}}}],["functions",{"_index":1709,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":161,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generate",{"_index":53,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"index.html":{}}}],["generatecsv",{"_index":19,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["generated",{"_index":1721,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1736,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1278,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["generic",{"_index":1268,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["get(itemtype",{"_index":863,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["get_app",{"_index":1483,"title":{},"body":{"components/TableComponent.html":{}}}],["getallowedactions",{"_index":958,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getasyncvalidation",{"_index":850,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["getasyncvalidation(url",{"_index":867,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getbody",{"_index":20,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getbodyaccordingheader",{"_index":21,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcontrolls",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcsvdata",{"_index":22,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getcurrentuser",{"_index":959,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["getdata",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdisplaydata",{"_index":1436,"title":{},"body":{"components/TableComponent.html":{}}}],["getdisplaydata(colums",{"_index":1374,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["getdisplayrepresentation",{"_index":1288,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["geterrormeesage",{"_index":424,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfieldconfig",{"_index":425,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getfields",{"_index":851,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["getfiltereddisplaydata",{"_index":1437,"title":{},"body":{"components/TableComponent.html":{}}}],["getfiltereddisplaydata(colums",{"_index":1458,"title":{},"body":{"components/TableComponent.html":{}}}],["getflatcontrolls",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getform",{"_index":1243,"title":{},"body":{"interfaces/IForm.html":{}}}],["getform(name",{"_index":1244,"title":{},"body":{"interfaces/IForm.html":{}}}],["getheaderfromobj",{"_index":23,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getheaders",{"_index":24,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["getisloggedin",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getkey(split.shift",{"_index":945,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getkey(split[0",{"_index":947,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["getmeesage",{"_index":426,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getmeesage(type",{"_index":494,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname",{"_index":427,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getname()+'#label",{"_index":1405,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getname()+\\'#label",{"_index":1407,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["getnavbarstate",{"_index":960,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["gets",{"_index":1575,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":1717,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1555,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1571,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseractions",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getuserprofile",{"_index":242,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["getuserroles",{"_index":1556,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1557,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalidators",{"_index":428,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["getvalue",{"_index":429,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["groupby",{"_index":1754,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["h2",{"_index":815,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["hammerjs",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["handlesessiontimeout",{"_index":243,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasavailableaction(systemresource",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["hasownproperty",{"_index":209,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasrole(systemrole",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["header",{"_index":62,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["header.collumnkey",{"_index":1375,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["header.collumnname",{"_index":1337,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["headerrow",{"_index":183,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["headers",{"_index":67,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["headers.reduce((headerrow",{"_index":182,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["height",{"_index":1396,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["helps",{"_index":1277,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["hidden",{"_index":175,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["hint",{"_index":441,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["hintlabel",{"_index":442,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["his.loadallowedactions",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["home_ui_new",{"_index":483,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["html",{"_index":616,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlattribute",{"_index":443,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["htmlinputelement).value",{"_index":1309,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["htmltype",{"_index":444,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["http",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["http://localhost:4200",{"_index":1732,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["httpclientmodule",{"_index":1154,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["httpheaders",{"_index":875,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["icodeentry",{"_index":1198,"title":{"interfaces/ICodeEntry.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"coverage.html":{}}}],["icon",{"_index":776,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["iconact",{"_index":430,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconaction",{"_index":445,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["iconbtn",{"_index":446,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["icustom",{"_index":1201,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["icustomvalidation",{"_index":465,"title":{"interfaces/ICustomValidation.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["id",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["identifier",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["idialogconfig",{"_index":1219,"title":{"interfaces/IDialogConfig.html":{}},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["if(key",{"_index":1503,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["if(this.field.disabled",{"_index":596,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["if(this.msgerrors[type](param",{"_index":552,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["ifield",{"_index":410,"title":{"interfaces/IField.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["iflatobject",{"_index":915,"title":{"interfaces/IFlatObject.html":{}},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{}}}],["iform",{"_index":1241,"title":{"interfaces/IForm.html":{}},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["iformobj",{"_index":1212,"title":{"interfaces/IFormObj.html":{}},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["ihtmlattributes",{"_index":472,"title":{"interfaces/IHTMLAttributes.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["implements",{"_index":409,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["import",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["important",{"_index":825,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["imports",{"_index":1192,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["incoorect",{"_index":884,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1239,"title":{},"body":{"interfaces/IFlatObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["infodialogsimplecomponent",{"_index":639,"title":{"components/InfoDialogSimpleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infomsg",{"_index":1023,"title":{},"body":{"injectables/DialogService.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["information",{"_index":1394,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["informations",{"_index":276,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inherited",{"_index":665,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["init",{"_index":420,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["initialcolumns",{"_index":1294,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["inject",{"_index":789,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["inject(mat_dialog_data",{"_index":784,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["injectable",{"_index":233,"title":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["injectables",{"_index":235,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":72,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"interfaces/searchObj.html":{}}}],["input'},{'name",{"_index":631,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component",{"_index":1159,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["input.component.html",{"_index":988,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.scss",{"_index":987,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts",{"_index":986,"title":{},"body":{"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":990,"title":{},"body":{"components/DateInputComponent.html":{},"components/TextInputComponent.html":{}}}],["input.component.ts:14",{"_index":1070,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input.component.ts:28",{"_index":1072,"title":{},"body":{"components/FileInputComponent.html":{}}}],["input/date",{"_index":985,"title":{},"body":{"components/DateInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/file",{"_index":1067,"title":{},"body":{"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["input/text",{"_index":1158,"title":{},"body":{"modules/FormbuilderModule.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["inputnode",{"_index":1076,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputnode.files[0",{"_index":1079,"title":{},"body":{"components/FileInputComponent.html":{}}}],["inputs",{"_index":434,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["insert",{"_index":895,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["insertfield",{"_index":852,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["insertfield(field",{"_index":870,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["int",{"_index":1234,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["interface",{"_index":74,"title":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}},"body":{"classes/AngularCsv.html":{},"classes/AutoSearch.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"coverage.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["interfaces",{"_index":1199,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{}}}],["interfaces/icustom",{"_index":536,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["interfaces/ifield",{"_index":535,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["interfaces/imenu",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["interfaces/isliderconfig",{"_index":1426,"title":{},"body":{"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{}}}],["interfaces/ivalidator",{"_index":538,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["inverted",{"_index":1248,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["isallselected",{"_index":1317,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["isarray",{"_index":931,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer",{"_index":903,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isbuffer(obj",{"_index":910,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfinite(input",{"_index":137,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isflat",{"_index":904,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["isflat(object",{"_index":913,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["isfloat",{"_index":26,"title":{},"body":{"classes/AngularCsv.html":{}}}],["isfloat(input",{"_index":68,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["isliderconfig",{"_index":1246,"title":{"interfaces/ISliderConfig.html":{}},"body":{"interfaces/ISliderConfig.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"coverage.html":{}}}],["isloggedin",{"_index":252,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isloggedin(value",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isobject",{"_index":936,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["ist",{"_index":508,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["itableheader",{"_index":1251,"title":{"interfaces/ITableHeader.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["itableviewoptions",{"_index":1269,"title":{"interfaces/ITableViewOptions.html":{}},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["item",{"_index":881,"title":{},"body":{"injectables/DataConnectorService.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["item.error",{"_index":1062,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["item.info",{"_index":1395,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["item.key",{"_index":1406,"title":{},"body":{"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{}}}],["item.name",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":810,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["itemtype",{"_index":856,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["ivalidator",{"_index":488,"title":{"interfaces/IValidator.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{}}}],["ja",{"_index":802,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["json",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(datajson",{"_index":130,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["json.parse(localstorage.getitem(this.user_allowed_actions",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.parse(res",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(actions",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(rolesobject",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(userprofile",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["justify",{"_index":806,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["kat",{"_index":864,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["kat.length",{"_index":887,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["keine",{"_index":527,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["key",{"_index":755,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"pipes/TranslatePipe.html":{}}}],["key.split(delimiter",{"_index":943,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key1",{"_index":944,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["key2",{"_index":946,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keya.length",{"_index":939,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keyb.length",{"_index":940,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["keytosave",{"_index":1758,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["label",{"_index":600,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{}}}],["labels",{"_index":16,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["lang",{"_index":1508,"title":{},"body":{"injectables/TranslationService.html":{}}}],["langpath",{"_index":1540,"title":{},"body":{"injectables/TranslationService.html":{}}}],["left",{"_index":824,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["legend",{"_index":615,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["level",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib",{"_index":637,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["line",{"_index":191,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["link",{"_index":168,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.click",{"_index":178,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.download",{"_index":176,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.href",{"_index":170,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('target",{"_index":172,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["link.setattribute('visibility",{"_index":174,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["list",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["literal",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"interfaces/optionsConfig.html":{}}}],["loadafterpercentscrolled",{"_index":1755,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["loadallowedactions",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loaduserprofile",{"_index":244,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locale",{"_index":199,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["localede",{"_index":1171,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["locally",{"_index":264,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage",{"_index":277,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem(this.bla",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('txtbooth",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(this.user_allowed_actions",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('txtbooth",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(this.user_allowed_actions",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lodash",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":245,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["login(credentials",{"_index":1581,"title":{},"body":{"injectables/UserService.html":{}}}],["login(username",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginpage",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":246,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["logout(navigatetologinpage",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["länge",{"_index":512,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["löschen",{"_index":1485,"title":{},"body":{"components/TableComponent.html":{}}}],["make",{"_index":1280,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map",{"_index":877,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["map((column",{"_index":1341,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["map(value",{"_index":899,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["margin",{"_index":816,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TableComponent.html":{}}}],["mastertoggle",{"_index":1325,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mat",{"_index":821,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/TextInputComponent.html":{}}}],["mat_date_locale",{"_index":1151,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mat_dialog_data",{"_index":790,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matautocompletemodule",{"_index":1131,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matbuttonmodule",{"_index":1143,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcardmodule",{"_index":1152,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matcheckboxmodule",{"_index":1135,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matches",{"_index":1314,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matching",{"_index":232,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1133,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdatepickerparse",{"_index":530,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["matdialog",{"_index":1005,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matdialogmodule",{"_index":1176,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matdialogref",{"_index":780,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["matexpansionmodule",{"_index":1145,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matformfieldmodule",{"_index":1123,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matgridlistmodule",{"_index":1147,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["maticonmodule",{"_index":1121,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matinputmodule",{"_index":1125,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matlistmodule",{"_index":1127,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matmomentdatemodule",{"_index":1164,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matpaginator",{"_index":1264,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matpaginatormodule",{"_index":1182,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matradiomodule",{"_index":1149,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matselectmodule",{"_index":1129,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsidenavmodule",{"_index":1119,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidermodule",{"_index":1184,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matslidetogglemodule",{"_index":1186,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsort",{"_index":1263,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["matsortmodule",{"_index":1180,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["matsteppermodule",{"_index":1137,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattabledatasource",{"_index":1262,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["mattablemodule",{"_index":1178,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattooltipmodule",{"_index":1139,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["mattreemodule",{"_index":1141,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["max",{"_index":447,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxdepth",{"_index":922,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["maximale",{"_index":511,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maximum",{"_index":517,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["maxlength",{"_index":448,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["menunode",{"_index":402,"title":{"interfaces/MenuNode.html":{}},"body":{"classes/AutoSearch.html":{},"injectables/ConfigService.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["message",{"_index":777,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"injectables/DialogService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagecode",{"_index":1235,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["messagestring",{"_index":1011,"title":{},"body":{"injectables/DialogService.html":{}}}],["metadata",{"_index":412,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":449,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mindestens",{"_index":514,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minimum",{"_index":520,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["minlength",{"_index":450,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["miscellaneous",{"_index":1706,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":1093,"title":{"modules/FormbuilderModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":1095,"title":{"modules.html":{}},"body":{"modules/FormbuilderModule.html":{},"modules.html":{}}}],["moment",{"_index":1166,"title":{},"body":{"modules/FormbuilderModule.html":{},"dependencies.html":{}}}],["more",{"_index":270,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ms",{"_index":1208,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["msg",{"_index":1237,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["msgerrors",{"_index":422,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["mycsv.csv",{"_index":101,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navbarvisibility",{"_index":957,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["navigate",{"_index":1731,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":278,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigatetologinpage",{"_index":247,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["navigator.mssaveblob",{"_index":159,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["navigator.mssaveblob(blob",{"_index":163,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["negativecallback",{"_index":1009,"title":{},"body":{"injectables/DialogService.html":{}}}],["nein",{"_index":801,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["new",{"_index":156,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/searchObj.html":{}}}],["newkey",{"_index":937,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["newobj",{"_index":1716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["newvalidators",{"_index":601,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.email",{"_index":610,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.max",{"_index":603,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.maxlength",{"_index":605,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.min",{"_index":604,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.minlength",{"_index":606,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.pattern",{"_index":608,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["newvalidators.required",{"_index":602,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["next",{"_index":190,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["ng",{"_index":1741,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1345,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngmodule",{"_index":1112,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["ngonchanges",{"_index":1438,"title":{},"body":{"components/TableComponent.html":{}}}],["ngonchanges(changes",{"_index":1350,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ngoninit",{"_index":431,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["nicht",{"_index":525,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["noaction",{"_index":1221,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["node",{"_index":768,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["node.name",{"_index":769,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodownload",{"_index":84,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1729,"title":{},"body":{"index.html":{}}}],["null",{"_index":218,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{}}}],["nulltoemptystring",{"_index":87,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":478,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{}}}],["numrows",{"_index":1320,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["numselected",{"_index":1318,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["obj",{"_index":61,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["obj.constructor",{"_index":918,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer",{"_index":919,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj.constructor.isbuffer(obj",{"_index":920,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["obj[key",{"_index":766,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object",{"_index":65,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object(val",{"_index":224,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.assign",{"_index":222,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{}}}],["object.assign(this.data",{"_index":1536,"title":{},"body":{"injectables/TranslationService.html":{}}}],["object.entries(form",{"_index":756,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(actions).length",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object.keys(obj).reduce((accumulator",{"_index":765,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.keys(object).foreach((key",{"_index":929,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.keys(this._options.objheader).foreach(key",{"_index":187,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(this._options.objheader).length",{"_index":147,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["object.keys(value).length",{"_index":938,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.hasownproperty",{"_index":210,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.propertyisenumerable",{"_index":212,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.tostring.call(recipient[key1",{"_index":950,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.prototype.tostring.call(value",{"_index":934,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["object.values(roles",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["object[key",{"_index":930,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["objectassign",{"_index":132,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["objectassign(target",{"_index":227,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["objheader",{"_index":83,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["observe",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{}}}],["ok",{"_index":1061,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["okaction",{"_index":1238,"title":{},"body":{"interfaces/IDialogConfig.html":{}}}],["oncancel",{"_index":1222,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["onchanges",{"_index":1259,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onclose",{"_index":1223,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["ondatachange",{"_index":1528,"title":{},"body":{"injectables/TranslationService.html":{}}}],["ondeleterecord",{"_index":1439,"title":{},"body":{"components/TableComponent.html":{}}}],["ondeleterecord(row",{"_index":1361,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondeleteselectedrecords",{"_index":1363,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["ondownload",{"_index":1440,"title":{},"body":{"components/TableComponent.html":{}}}],["ondownload(row",{"_index":1359,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onedit",{"_index":1441,"title":{},"body":{"components/TableComponent.html":{}}}],["onedit(row",{"_index":1357,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["onfileselected",{"_index":1068,"title":{},"body":{"components/FileInputComponent.html":{}}}],["oninit",{"_index":411,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["onlangchange",{"_index":1527,"title":{},"body":{"injectables/TranslationService.html":{}}}],["operator",{"_index":1218,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["opt",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt.filter(item",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opt[0",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["options",{"_index":30,"title":{"interfaces/Options.html":{}},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["optionsconfig",{"_index":1652,"title":{"interfaces/optionsConfig.html":{}},"body":{"coverage.html":{},"interfaces/optionsConfig.html":{}}}],["opts",{"_index":908,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.delimiter",{"_index":924,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.maxdepth",{"_index":925,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.object",{"_index":953,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["opts.safe",{"_index":932,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["origobj",{"_index":1715,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1323,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["out",{"_index":1104,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}],["output",{"_index":539,"title":{},"body":{"components/BaseFieldComponent.html":{},"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["outputs",{"_index":1443,"title":{},"body":{"components/TableComponent.html":{}}}],["overview",{"_index":1759,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":951,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["package",{"_index":1681,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":812,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["page",{"_index":749,"title":{},"body":{"injectables/ConfigService.html":{}}}],["paginator",{"_index":1301,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["param",{"_index":135,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"classes/CsvConfigConsts.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/FileInputComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.max",{"_index":519,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.min",{"_index":521,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.pattern",{"_index":523,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["param.requiredlength",{"_index":513,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":890,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["parser",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["path",{"_index":1518,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pattern",{"_index":522,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pflichtfeld",{"_index":510,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pipe",{"_index":1493,"title":{"pipes/TranslatePipe.html":{}},"body":{"pipes/TranslatePipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1494,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["pipetransform",{"_index":1499,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["placeholder",{"_index":451,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["position",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["positivecallback",{"_index":1008,"title":{},"body":{"injectables/DialogService.html":{}}}],["positivecallback(result",{"_index":1042,"title":{},"body":{"injectables/DialogService.html":{}}}],["post",{"_index":858,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["prefer",{"_index":192,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["prefix",{"_index":1526,"title":{},"body":{"injectables/TranslationService.html":{}}}],["prev",{"_index":927,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["previousvalue.concat(currentvalue",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1746,"title":{},"body":{"index.html":{}}}],["production",{"_index":1748,"title":{},"body":{"index.html":{}}}],["profile",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["project",{"_index":1720,"title":{},"body":{"index.html":{}}}],["projects/.../angular",{"_index":1712,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../autocomplete.component.ts",{"_index":1710,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form.service.ts",{"_index":1711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../table.component.ts",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/formbuilder/src/lib/classes/angular",{"_index":6,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts",{"_index":408,"title":{},"body":{"components/BaseFieldComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:14",{"_index":533,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:151",{"_index":498,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:155",{"_index":496,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:159",{"_index":503,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:185",{"_index":497,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:189",{"_index":493,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:192",{"_index":499,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:26",{"_index":484,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:28",{"_index":490,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:29",{"_index":485,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:30",{"_index":467,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:31",{"_index":482,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:32",{"_index":480,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:33",{"_index":481,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:34",{"_index":479,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:35",{"_index":486,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:36",{"_index":469,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:37",{"_index":464,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:38",{"_index":471,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:39",{"_index":470,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:40",{"_index":487,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:41",{"_index":475,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:42",{"_index":477,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:43",{"_index":476,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:44",{"_index":489,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:45",{"_index":466,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:46",{"_index":473,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:47",{"_index":460,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:49",{"_index":462,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:50",{"_index":506,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:51",{"_index":459,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:54",{"_index":504,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:55",{"_index":505,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:56",{"_index":534,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:59",{"_index":491,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:63",{"_index":492,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:76",{"_index":495,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:84",{"_index":500,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/classes/field.ts:97",{"_index":502,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts",{"_index":1089,"title":{},"body":{"components/FormbuilderComponent.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:13",{"_index":1091,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.component.ts:17",{"_index":1092,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts",{"_index":1105,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.module.ts:131",{"_index":1111,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts",{"_index":1196,"title":{},"body":{"injectables/FormbuilderService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/formbuilder.service.ts:6",{"_index":1197,"title":{},"body":{"injectables/FormbuilderService.html":{}}}],["projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts",{"_index":1651,"title":{},"body":{"coverage.html":{},"interfaces/optionsConfig.html":{}}}],["projects/formbuilder/src/lib/interfaces/icustom",{"_index":1213,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ifield.ts",{"_index":1200,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts",{"_index":1242,"title":{},"body":{"interfaces/IForm.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/iform.ts:8",{"_index":1245,"title":{},"body":{"interfaces/IForm.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts",{"_index":398,"title":{},"body":{"classes/AutoSearch.html":{},"interfaces/MenuNode.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:7",{"_index":401,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/imenu.ts:8",{"_index":400,"title":{},"body":{"classes/AutoSearch.html":{}}}],["projects/formbuilder/src/lib/interfaces/isliderconfig.ts",{"_index":1247,"title":{},"body":{"interfaces/ISliderConfig.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/interfaces/ivalidator.ts",{"_index":1389,"title":{},"body":{"interfaces/IValidator.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts",{"_index":236,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:111",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:127",{"_index":273,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:13",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:138",{"_index":259,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:14",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:154",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:158",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:16",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:163",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:185",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:189",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:193",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:200",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:22",{"_index":258,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:72",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/authentication.service.ts:89",{"_index":272,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts",{"_index":712,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:12",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:13",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:14",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:21",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:52",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:59",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:83",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/config.service.ts:87",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/formbuilder/src/lib/services/data",{"_index":845,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"interfaces/IFlatObject.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts",{"_index":998,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:10",{"_index":1006,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:100",{"_index":1025,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:114",{"_index":1014,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:14",{"_index":1017,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:33",{"_index":1020,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:52",{"_index":1022,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/dialog.service.ts:79",{"_index":1010,"title":{},"body":{"injectables/DialogService.html":{}}}],["projects/formbuilder/src/lib/services/form.service.ts",{"_index":1667,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts",{"_index":1495,"title":{},"body":{"pipes/TranslatePipe.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.pipe.ts:11",{"_index":1498,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts",{"_index":1506,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:13",{"_index":1524,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:14",{"_index":1525,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:16",{"_index":1513,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:26",{"_index":1517,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:30",{"_index":1515,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:36",{"_index":1520,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/translation.service.ts:41",{"_index":1522,"title":{},"body":{"injectables/TranslationService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts",{"_index":1548,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:101",{"_index":1570,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:105",{"_index":1566,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:109",{"_index":1588,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:11",{"_index":1592,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:116",{"_index":1586,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:15",{"_index":1594,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:17",{"_index":1560,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:25",{"_index":1582,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:39",{"_index":1584,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:47",{"_index":1574,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:58",{"_index":1578,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:71",{"_index":1580,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:77",{"_index":1572,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:81",{"_index":1562,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:85",{"_index":1564,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/services/user.service.ts:97",{"_index":1568,"title":{},"body":{"injectables/UserService.html":{}}}],["projects/formbuilder/src/lib/ui",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1523,"title":{},"body":{"injectables/TranslationService.html":{}}}],["promise((resolve",{"_index":1538,"title":{},"body":{"injectables/TranslationService.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["propisenumerable",{"_index":211,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":1193,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["providedin",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["providers",{"_index":1107,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["public",{"_index":13,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IFlatObject.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["pure",{"_index":1501,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["questionmark",{"_index":787,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["quotestrings",{"_index":76,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["r",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["r\\n",{"_index":90,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["r\\n\\n",{"_index":145,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["radiobutton",{"_index":1400,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton'},{'name",{"_index":641,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["radiobutton.component.html",{"_index":1402,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobutton.component.scss",{"_index":1401,"title":{},"body":{"components/RadiobuttonComponent.html":{}}}],["radiobuttoncomponent",{"_index":640,"title":{"components/RadiobuttonComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":1155,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reader",{"_index":1080,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.onload",{"_index":1081,"title":{},"body":{"components/FileInputComponent.html":{}}}],["reader.readasarraybuffer(inputnode.files[0",{"_index":1086,"title":{},"body":{"components/FileInputComponent.html":{}}}],["readonly",{"_index":421,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{}}}],["recipient",{"_index":948,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["recipient[key1",{"_index":952,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["reduce((previousvalue",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refresh",{"_index":1442,"title":{},"body":{"components/TableComponent.html":{}}}],["registerallowedactions",{"_index":248,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registercurrentuser",{"_index":249,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["registerlocaledata",{"_index":1168,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["registerlocaledata(localede",{"_index":1190,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["reject",{"_index":1539,"title":{},"body":{"injectables/TranslationService.html":{}}}],["reload",{"_index":1734,"title":{},"body":{"index.html":{}}}],["removes",{"_index":274,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["replaysubject",{"_index":966,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":976,"title":{},"body":{"injectables/DataStoreService.html":{},"injectables/UserService.html":{}}}],["report",{"_index":99,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["required",{"_index":452,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IValidator.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["res",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["reset",{"_index":1103,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"overview.html":{}}}],["resolve(this.data",{"_index":1547,"title":{},"body":{"injectables/TranslationService.html":{}}}],["resp",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["response",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":949,"title":{},"body":{"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["results",{"_index":231,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/optionsConfig.html":{},"overview.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["resultslength",{"_index":1296,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["return",{"_index":136,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IForm.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{}}}],["reverse",{"_index":1488,"title":{},"body":{"components/TableComponent.html":{}}}],["right",{"_index":826,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["roles",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["rolesobject",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{}}}],["root",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"injectables/DialogService.html":{},"injectables/FormbuilderService.html":{},"interfaces/IFlatObject.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["router",{"_index":254,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["row",{"_index":181,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{}}}],["row.slice(0",{"_index":185,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["rows",{"_index":1316,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["run",{"_index":1728,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ConfigService.html":{},"injectables/DataConnectorService.html":{},"injectables/DataStoreService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/searchObj.html":{}}}],["rxjs/operators",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["s",{"_index":230,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["safe",{"_index":923,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["saveallowedactions(actions",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile",{"_index":250,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveuserprofile(userprofile",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["scaffolding",{"_index":1740,"title":{},"body":{"index.html":{}}}],["search",{"_index":885,"title":{},"body":{"injectables/DataConnectorService.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["search.categories",{"_index":888,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.id",{"_index":886,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["search.text",{"_index":889,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["searchable",{"_index":1270,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["searchafternthcharacter",{"_index":1756,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["searchobj",{"_index":878,"title":{"interfaces/searchObj.html":{}},"body":{"injectables/DataConnectorService.html":{},"coverage.html":{},"interfaces/searchObj.html":{}}}],["searchusers",{"_index":1558,"title":{},"body":{"injectables/UserService.html":{}}}],["searchusers(search",{"_index":1585,"title":{},"body":{"injectables/UserService.html":{}}}],["select",{"_index":1333,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{}}}],["select'},{'name",{"_index":643,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["select.component.html",{"_index":1410,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":1409,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":642,"title":{"components/SelectComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":1312,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selection",{"_index":1291,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel",{"_index":1256,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selectionmodel(true",{"_index":1292,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["selector",{"_index":413,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["selects",{"_index":1322,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["server",{"_index":1727,"title":{},"body":{"index.html":{}}}],["server/app.js",{"_index":1738,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":1174,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/data",{"_index":1175,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["services/form.service",{"_index":541,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["services/translation.pipe",{"_index":1173,"title":{},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["services/translation.service",{"_index":542,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["set",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["set('authorization",{"_index":1598,"title":{},"body":{"injectables/UserService.html":{}}}],["set('charset",{"_index":1590,"title":{},"body":{"injectables/UserService.html":{}}}],["set('content",{"_index":1589,"title":{},"body":{"injectables/UserService.html":{}}}],["set(allactionswithduplicates",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setallowedactions",{"_index":961,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setallowedactions(value",{"_index":969,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser",{"_index":962,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setcurrentuser(value",{"_index":971,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["setisloggedin(value",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setlang",{"_index":1509,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setlang(lang",{"_index":1514,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath",{"_index":1510,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setpath(path",{"_index":1516,"title":{},"body":{"injectables/TranslationService.html":{}}}],["setupconfig",{"_index":432,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setupconfig(config",{"_index":501,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["setvalid",{"_index":999,"title":{},"body":{"injectables/DialogService.html":{}}}],["setvalid(positivecallback",{"_index":1013,"title":{},"body":{"injectables/DialogService.html":{}}}],["shouldnavbarbevisible",{"_index":975,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showactions",{"_index":1273,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showasobject",{"_index":1757,"title":{},"body":{"interfaces/optionsConfig.html":{}}}],["showcheckbox",{"_index":1272,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showcsvexport",{"_index":1274,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showdataimporterrordialog",{"_index":1000,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdataimporterrordialog(errordataarray",{"_index":1015,"title":{},"body":{"injectables/DialogService.html":{}}}],["showdeleteallbutton",{"_index":1275,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showerrordialog",{"_index":1001,"title":{},"body":{"injectables/DialogService.html":{}}}],["showerrordialog(errormsg",{"_index":1019,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog",{"_index":1002,"title":{},"body":{"injectables/DialogService.html":{}}}],["showinfodialog(infomsg",{"_index":1021,"title":{},"body":{"injectables/DialogService.html":{}}}],["showlabels",{"_index":78,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["shownavbar",{"_index":963,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["shownavbar(shouldnavbarbevisible",{"_index":973,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["showpaginator",{"_index":1271,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["showthumb",{"_index":1249,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["showtitle",{"_index":80,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["sicher",{"_index":799,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["sie",{"_index":798,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["simple",{"_index":1046,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple'},{'name",{"_index":634,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["simple.component",{"_index":1030,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["simple.component.html",{"_index":1048,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.less",{"_index":1047,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts",{"_index":1045,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simple.component.ts:11",{"_index":1052,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:12",{"_index":1049,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:15",{"_index":1051,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple.component.ts:20",{"_index":1050,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["simple/error",{"_index":1029,"title":{},"body":{"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"modules/FormbuilderModule.html":{},"coverage.html":{}}}],["simple/info",{"_index":1032,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"coverage.html":{}}}],["simplechanges",{"_index":1260,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sind",{"_index":797,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{}}}],["size",{"_index":819,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["slide",{"_index":1427,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slider",{"_index":1429,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider'},{'name",{"_index":645,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slider.component.html",{"_index":1431,"title":{},"body":{"components/SliderComponent.html":{}}}],["slider.component.scss",{"_index":1430,"title":{},"body":{"components/SliderComponent.html":{}}}],["slidercomponent",{"_index":644,"title":{"components/SliderComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slidetoggle",{"_index":1419,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle'},{'name",{"_index":647,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["slidetoggle.component.html",{"_index":1421,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetoggle.component.scss",{"_index":1420,"title":{},"body":{"components/SlideToggleComponent.html":{}}}],["slidetogglecomponent",{"_index":646,"title":{"components/SlideToggleComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort",{"_index":1303,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["sortkeys.foreach((key",{"_index":941,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"injectables/FormbuilderService.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["split",{"_index":942,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["split.length",{"_index":954,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["src",{"_index":1204,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["srcresult",{"_index":1069,"title":{},"body":{"components/FileInputComponent.html":{}}}],["start",{"_index":808,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"index.html":{}}}],["started",{"_index":1718,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{}}}],["statischen",{"_index":1225,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["step",{"_index":1205,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{}}}],["step(object",{"_index":926,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["store.service",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store.service.ts",{"_index":956,"title":{},"body":{"injectables/DataStoreService.html":{},"coverage.html":{}}}],["store.service.ts:11",{"_index":977,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:12",{"_index":964,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:17",{"_index":974,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:21",{"_index":968,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:25",{"_index":967,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:29",{"_index":972,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:33",{"_index":965,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:37",{"_index":970,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["store.service.ts:9",{"_index":979,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["stored",{"_index":263,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["storedallowedactions",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["storeduserprofile",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["string",{"_index":29,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["string(this.data.errormsg",{"_index":1056,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["string(this.data.infomsg",{"_index":1393,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["structure",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["styles",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["styleurls",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["sub",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl",{"_index":753,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sublvl.push(value.name",{"_index":758,"title":{},"body":{"injectables/ConfigService.html":{}}}],["submit",{"_index":1211,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["subtask.name",{"_index":710,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["successful",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["super(fb",{"_index":707,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["super.ngoninit",{"_index":708,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["support",{"_index":1749,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1012,"title":{},"body":{"injectables/DialogService.html":{}}}],["svg",{"_index":1750,"title":{},"body":{"modules.html":{}}}],["symbols",{"_index":229,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["synchronizevalidator",{"_index":433,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["systemaction",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemresource",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["systemrole",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["table",{"_index":1279,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":649,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["table.component.html",{"_index":1289,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1290,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tablecomponent",{"_index":648,"title":{"components/TableComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["tabletype",{"_index":1267,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tap",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tap(resp",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["target",{"_index":226,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["template",{"_index":417,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["templateurl",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["test",{"_index":267,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["text",{"_index":474,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/DataConnectorService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"interfaces/searchObj.html":{}}}],["text/csv;charset=utf8",{"_index":158,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["textinputcomponent",{"_index":650,"title":{"components/TextInputComponent.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"modules/FormbuilderModule.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this._isloggedin",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._options",{"_index":131,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.decimalseparator",{"_index":198,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.fieldseparator",{"_index":184,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename",{"_index":133,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.filename.replace",{"_index":160,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers",{"_index":194,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.headers.length",{"_index":180,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nodownload",{"_index":154,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.nulltoemptystring",{"_index":208,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.objheader[key",{"_index":188,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.quotestrings",{"_index":204,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.showtitle",{"_index":143,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.title",{"_index":144,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.usebom",{"_index":140,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._options.useobjheader",{"_index":146,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this._path",{"_index":1533,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this._path}${lang",{"_index":1541,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.adduser(user).subscribe(adduserres",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["this.allowedactions",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.allowedactions.next(value",{"_index":983,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.allowedactions[systemresource",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.apibaseurl",{"_index":1597,"title":{},"body":{"injectables/UserService.html":{}}}],["this.autocomplete",{"_index":595,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.collumnstobedisplayed",{"_index":1335,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.control",{"_index":543,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.dirty",{"_index":548,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.disable",{"_index":597,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors",{"_index":545,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors.hasownproperty(error",{"_index":546,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.errors[error",{"_index":550,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.touched",{"_index":547,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.control.valuechanges.subscribe(val",{"_index":564,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.csv",{"_index":141,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.currentuser",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/DataStoreService.html":{}}}],["this.currentuser.next(value",{"_index":982,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.currentuser.roles",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.customfilterbasedondisplaycolumns(data",{"_index":1344,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data",{"_index":128,"title":{},"body":{"classes/AngularCsv.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"components/ErrorDialogSimpleComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.data.errormsg",{"_index":1053,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.data.icon",{"_index":793,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.data.infomsg",{"_index":1390,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.data.length",{"_index":1354,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.data.message",{"_index":795,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.data[i",{"_index":196,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.data[i][index",{"_index":197,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.datachange.value",{"_index":764,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.datasource.data",{"_index":1329,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filter",{"_index":1307,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.filter(item",{"_index":1365,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.foreach(row",{"_index":1327,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filtereddata.length",{"_index":1321,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.filterpredicate",{"_index":1342,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator",{"_index":1346,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":1356,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datasource.sort",{"_index":1348,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.datastore.getallowedactions().subscribe((actions",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.getcurrentuser().subscribe((user",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(actionresp['actions",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(null",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setallowedactions(storedallowedactions",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(null",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(profile",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datastore.setcurrentuser(storeduserprofile",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.delete.emit(row",{"_index":1362,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.deletebulk.emit(filtereddatasource",{"_index":1367,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1041,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(errordialogsimplecomponent",{"_index":1038,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(infodialogsimplecomponent",{"_index":1039,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialog.open(matdialog",{"_index":1035,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogref.disableclose",{"_index":792,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.dialogservice.showerrordialog('error",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["this.disabled",{"_index":574,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.displayedcolumns.filter((column",{"_index":1339,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.map(header",{"_index":1336,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.push({collumnname",{"_index":1334,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.displayedcolumns.unshift({collumnname",{"_index":1332,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.download.emit(row",{"_index":1360,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.edit.emit(row",{"_index":1358,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.errormsg",{"_index":1055,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{}}}],["this.field",{"_index":554,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.filtercontrol.patchvalue",{"_index":1355,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.flatcontrolls",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.form",{"_index":559,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.formatdata(this.data[i][index",{"_index":195,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.formatdata(this.data[i][key",{"_index":193,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.fs.addfield(this",{"_index":562,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname",{"_index":555,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getconfigbyname(this.name).options",{"_index":1415,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.fs.getform(this.field.name",{"_index":560,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.fs.getformcontrol(this.field",{"_index":561,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.generatecsv",{"_index":134,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbody",{"_index":152,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getbodyaccordingheader",{"_index":150,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getdisplaydata(columns",{"_index":1384,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getfiltereddisplaydata(columns",{"_index":1386,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.getheaderfromobj",{"_index":149,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getheaders",{"_index":151,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["this.getmeesage(error",{"_index":549,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getname",{"_index":612,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.getuseractions",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuserprofile",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getvalue",{"_index":613,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.headers",{"_index":1593,"title":{},"body":{"injectables/UserService.html":{}}}],["this.headers.set('usemockup",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hint",{"_index":566,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.hintlabel",{"_index":568,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.htmltype",{"_index":589,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.http.delete('/api",{"_index":892,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.delete('/api/logout",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(`/api/user/${user.id",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(this.url",{"_index":896,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get('/api",{"_index":891,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.get('/api/user",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/user",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`/api/user/${userid",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(langpath).subscribe",{"_index":1544,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.http.get(this.apibaseurl",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(this.url",{"_index":893,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post",{"_index":880,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post('/api/login",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post('/api/user",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.url",{"_index":894,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.post(url",{"_index":897,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put",{"_index":883,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["this.http.put(`/api/user/${user.id",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`/api/user//${user.id",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["this.icon",{"_index":794,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["this.iconaction.emit",{"_index":611,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.iconbtn",{"_index":591,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.infomsg",{"_index":1392,"title":{},"body":{"components/InfoDialogSimpleComponent.html":{}}}],["this.init",{"_index":563,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.initialcolumns",{"_index":1338,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isallselected",{"_index":1326,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.isloggedin",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.lang",{"_index":1532,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.loadallowedactions",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.loaduserprofile",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.max",{"_index":580,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.maxlength",{"_index":584,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.message",{"_index":796,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.min",{"_index":582,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.minlength",{"_index":586,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.msgerrors[type](param",{"_index":553,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.name",{"_index":557,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.navbarvisibility",{"_index":981,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navbarvisibility.next(shouldnavbarbevisible",{"_index":980,"title":{},"body":{"injectables/DataStoreService.html":{}}}],["this.navigatetologinpage",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.ondatachange.emit(this.data",{"_index":1537,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.ondatachange.subscribe(val",{"_index":1529,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.emit(this.lang",{"_index":1535,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.onlangchange.subscribe(val",{"_index":1531,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.options",{"_index":1414,"title":{},"body":{"components/SelectComponent.html":{},"injectables/UserService.html":{}}}],["this.paginator",{"_index":1347,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.placeholder",{"_index":556,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.registerallowedactions",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.registercurrentuser",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.required",{"_index":573,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.resultslength",{"_index":1353,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.router.navigate(['login",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveallowedactions(actions",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.saveuserprofile(user",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.selection.clear",{"_index":1310,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.select(row",{"_index":1328,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.indexof(item",{"_index":1366,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.selection.selected.length",{"_index":1319,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.setupconfig(this.field",{"_index":558,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.sort",{"_index":1349,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.srcresult",{"_index":1084,"title":{},"body":{"components/FileInputComponent.html":{}}}],["this.synchronizevalidator",{"_index":598,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.translate.data[key",{"_index":1505,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["this.ts.data[this.value",{"_index":599,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.ts.transform(header.collumnkey",{"_index":1376,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.updatedata(val",{"_index":1530,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.updateroles(user",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateroles(user).subscribe(updateroleresp",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["this.use(this.lang",{"_index":1534,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.userservice.getuserprofile().subscribe((profile:any",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.getuserroles().subscribe((actionresp",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.login(usernameandpassword).pipe",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.userservice.logout().subscribe(null",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.validators",{"_index":575,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.email",{"_index":609,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.validators.pattern",{"_index":607,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.value",{"_index":565,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["this.viewoptions.showcheckbox",{"_index":1331,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["this.viewoptions.showdeleteallbutton",{"_index":1330,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["throw",{"_index":220,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["throwerror",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throwerror(errobj",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["timer",{"_index":876,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["timer(2000).pipe",{"_index":900,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["title",{"_index":81,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["tmpdata",{"_index":760,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["tmpdis",{"_index":572,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["tmpreq",{"_index":571,"title":{},"body":{"components/BaseFieldComponent.html":{}}}],["todo",{"_index":1276,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["toggle",{"_index":1188,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["toobject",{"_index":1645,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toobject(target",{"_index":228,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["toobject(val",{"_index":216,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/functions.html":{}}}],["tooltip",{"_index":453,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["tooltipdelay",{"_index":1207,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["tooltipposition",{"_index":1206,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["total",{"_index":1315,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["transform",{"_index":1496,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["transform(key",{"_index":1497,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translate",{"_index":709,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{}}}],["translatepipe",{"_index":1101,"title":{"pipes/TranslatePipe.html":{}},"body":{"modules/FormbuilderModule.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"pipes/TranslatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["translation",{"_index":1545,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translation.service",{"_index":1500,"title":{},"body":{"pipes/TranslatePipe.html":{}}}],["translationservice",{"_index":458,"title":{"injectables/TranslationService.html":{}},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tree",{"_index":407,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/UserService.html":{},"interfaces/searchObj.html":{}}}],["ts",{"_index":423,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"miscellaneous/functions.html":{}}}],["ts.onlangchange.subscribe(lang",{"_index":995,"title":{},"body":{"components/DateInputComponent.html":{}}}],["ts:translationservice",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":189,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"injectables/TranslationService.html":{}}}],["txt",{"_index":865,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["txtbooth",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["type",{"_index":36,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"classes/AutoSearch.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IForm.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"interfaces/ISliderConfig.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/IValidator.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/MenuNode.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"pipes/TranslatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["typeerror",{"_index":221,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["typeof",{"_index":129,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/ConfigService.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"modules/FormbuilderModule.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["types/pouchdb",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["ufeff",{"_index":92,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["ui",{"_index":1026,"title":{},"body":{"injectables/DialogService.html":{},"modules/FormbuilderModule.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataFlattnerService.html":{},"components/FileInputComponent.html":{},"interfaces/IFlatObject.html":{},"interfaces/Options.html":{},"pipes/TranslatePipe.html":{},"miscellaneous/functions.html":{}}}],["unflatten",{"_index":905,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["unflatten(target",{"_index":916,"title":{},"body":{"injectables/DataFlattnerService.html":{}}}],["update",{"_index":853,"title":{},"body":{"injectables/DataConnectorService.html":{}}}],["update(id",{"_index":872,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/searchObj.html":{}}}],["updatedata",{"_index":1511,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updatedata(data",{"_index":1519,"title":{},"body":{"injectables/TranslationService.html":{}}}],["updateon",{"_index":1209,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["updateroles",{"_index":1559,"title":{},"body":{"injectables/UserService.html":{}}}],["updateroles(user",{"_index":1587,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":1484,"title":{},"body":{"components/TableComponent.html":{}}}],["uri",{"_index":164,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["url",{"_index":847,"title":{},"body":{"injectables/DataConnectorService.html":{},"interfaces/optionsConfig.html":{},"interfaces/searchObj.html":{}}}],["url.createobjecturl(blob",{"_index":171,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["use",{"_index":1512,"title":{},"body":{"injectables/TranslationService.html":{},"index.html":{}}}],["use(lang",{"_index":1521,"title":{},"body":{"injectables/TranslationService.html":{}}}],["usebom",{"_index":82,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"interfaces/Options.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":912,"title":{},"body":{"injectables/DataFlattnerService.html":{},"interfaces/IFlatObject.html":{}}}],["useful",{"_index":271,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["useheader",{"_index":86,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["useobjheader",{"_index":85,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user.id",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user/profile",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["user/role",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":1573,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usernameandpassword",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userprofile",{"_index":262,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["users",{"_index":1577,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":255,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usevalue",{"_index":1194,"title":{},"body":{"modules/FormbuilderModule.html":{}}}],["utf",{"_index":1591,"title":{},"body":{"injectables/UserService.html":{}}}],["util",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":217,"title":{},"body":{"classes/AngularCsv.html":{},"components/BaseFieldComponent.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["val:any",{"_index":214,"title":{},"body":{"classes/AngularCsv.html":{},"classes/CsvConfigConsts.html":{},"interfaces/Options.html":{}}}],["valid",{"_index":268,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validation",{"_index":537,"title":{},"body":{"components/BaseFieldComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validation.ts",{"_index":1214,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"coverage.html":{}}}],["validatorfn",{"_index":1203,"title":{},"body":{"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{}}}],["validators",{"_index":454,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/IField.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["valide",{"_index":528,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataConnectorService.html":{},"injectables/DataFlattnerService.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"interfaces/ICodeEntry.html":{},"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{},"interfaces/IField.html":{},"interfaces/IFlatObject.html":{},"interfaces/IFormObj.html":{},"interfaces/IHTMLAttributes.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/searchObj.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value['actions",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["var",{"_index":619,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DateInputComponent.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["variable",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1761,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1724,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1250,"title":{},"body":{"interfaces/ISliderConfig.html":{}}}],["vertical_align_bottom",{"_index":1478,"title":{},"body":{"components/TableComponent.html":{}}}],["viewchild",{"_index":1261,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matpaginator",{"_index":1300,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewchild(matsort",{"_index":1302,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["viewoptions",{"_index":1299,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/AuthenticationService.html":{},"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ConfigService.html":{},"components/ConfirmDialogComponent.html":{},"classes/CsvConfigConsts.html":{},"injectables/DataStoreService.html":{},"components/DateInputComponent.html":{},"injectables/DialogService.html":{},"components/ErrorDialogSimpleComponent.html":{},"components/FileInputComponent.html":{},"components/FormbuilderComponent.html":{},"components/InfoDialogSimpleComponent.html":{},"interfaces/Options.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{},"injectables/TranslationService.html":{}}}],["von",{"_index":1224,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["werten",{"_index":1226,"title":{},"body":{"interfaces/ICustomValidation.html":{},"interfaces/IDialogConfig.html":{}}}],["whether",{"_index":1311,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["width",{"_index":1043,"title":{},"body":{"injectables/DialogService.html":{},"components/TableComponent.html":{},"components/TextInputComponent.html":{}}}],["widthinpercentage",{"_index":1255,"title":{},"body":{"interfaces/ITableHeader.html":{},"interfaces/ITableViewOptions.html":{},"components/TableComponent.html":{}}}],["withcredentials",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["word",{"_index":1063,"title":{},"body":{"components/ErrorDialogSimpleComponent.html":{},"components/InfoDialogSimpleComponent.html":{}}}],["works",{"_index":1090,"title":{},"body":{"components/FormbuilderComponent.html":{}}}],["wurde",{"_index":524,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["wählen",{"_index":1417,"title":{},"body":{"components/SelectComponent.html":{}}}],["xmlexport",{"_index":1003,"title":{},"body":{"injectables/DialogService.html":{}}}],["xmlexport(positivecallback",{"_index":1024,"title":{},"body":{"injectables/DialogService.html":{}}}],["yes",{"_index":39,"title":{},"body":{"classes/AngularCsv.html":{},"injectables/DataFlattnerService.html":{},"injectables/DialogService.html":{}}}],["zeichen",{"_index":515,"title":{},"body":{"components/BaseFieldComponent.html":{},"components/CheckboxComponent.html":{},"components/DateInputComponent.html":{},"components/FileInputComponent.html":{},"components/RadiobuttonComponent.html":{},"components/SelectComponent.html":{},"components/SlideToggleComponent.html":{},"components/SliderComponent.html":{},"components/TextInputComponent.html":{}}}],["zone.js",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1102,"title":{},"body":{"modules/FormbuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AngularCsv.html":{"url":"classes/AngularCsv.html","title":"class - AngularCsv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularCsv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Private\n                                csv\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                labels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatData\n                            \n                            \n                                    Private\n                                generateCsv\n                            \n                            \n                                getBody\n                            \n                            \n                                getBodyAccordingHeader\n                            \n                            \n                                getCsvData\n                            \n                            \n                                getHeaderFromObj\n                            \n                            \n                                getHeaders\n                            \n                            \n                                    Static\n                                isFloat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(DataJSON: any, filename: string, options?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        DataJSON\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        csv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatData\n                        \n                    \n                \n            \n            \n                \nformatData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:218\n                \n            \n\n\n            \n                \n                    Format Data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateCsv\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCsv()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:88\n                \n            \n\n\n            \n                \n                    Generate and Download Csv\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:191\n                \n            \n\n\n            \n                \n                    Create Body\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBodyAccordingHeader\n                        \n                    \n                \n            \n            \n                \ngetBodyAccordingHeader()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:170\n                \n            \n\n\n            \n                \n                    Create Body according to obj header\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCsvData\n                        \n                    \n                \n            \n            \n                \ngetCsvData()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaderFromObj\n                        \n                    \n                \n            \n            \n                \ngetHeaderFromObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:156\n                \n            \n\n\n            \n                \n                    Create Header from Object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:142\n                \n            \n\n\n            \n                \n                    Create Headers\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFloat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFloat(input: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:81\n                \n            \n\n\n            \n                \n                    Check if is Float\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isLoggedIn\n                            \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                bla\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfUserIsAlreadyLoggedIn\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                    Public\n                                handleSessionTimeout\n                            \n                            \n                                loadUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                navigateToLoginPage\n                            \n                            \n                                registerAllowedActions\n                            \n                            \n                                registerCurrentUser\n                            \n                            \n                                saveUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, dataStore: DataStoreService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataStore\n                                                  \n                                                        \n                                                                        DataStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAlreadyLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAlreadyLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:138\n                \n            \n\n\n            \n                \n                    Checks currently only if the userProfile is stored locally\nFIXME: An additional test for a valid cookie would be more useful.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleSessionTimeout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSessionTimeout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:127\n                \n            \n\n\n            \n                \n                    Removes Authentication Informations from Localstorage\nand navigates to the loginpage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserProfile\n                        \n                    \n                \n            \n            \n                \nloadUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(navigateToLoginpage: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    navigateToLoginpage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLoginPage\n                        \n                    \n                \n            \n            \n                \nnavigateToLoginPage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAllowedActions\n                        \n                    \n                \n            \n            \n                \nregisterAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerCurrentUser\n                        \n                    \n                \n            \n            \n                \nregisterCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(userProfile: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bla\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'txtBooth-user'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:185\n                                \n                            \n\n                \n                    \n                        setisLoggedIn(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/authentication.service.ts:189\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DataStoreService } from './data-store.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private _isLoggedIn = false;\n  bla = 'txtBooth-user';\n\n  private currentUser: {\n    id?: string;\n    name?: string;\n    email?: string;\n\n  };\n  private allowedActions: Object;\n\n  constructor(private router: Router,\n    private userService: UserService,\n    private dataStore: DataStoreService\n  ) {\n\n    this.registerCurrentUser();\n    this.registerAllowedActions();\n\n    const storedUserProfile = this.loadUserProfile();\n   //const storedAllowedActions = this.loadAllowedActions();\n\n    if (!!storedUserProfile) {\n      this.dataStore.setCurrentUser(storedUserProfile);\n    }\n/*\n    if (!!storedAllowedActions) {\n      this.dataStore.setAllowedActions(storedAllowedActions);\n    }\n*/\n  }\n/*\n  hasAvailableAction(systemResource: SystemResource, systemAction: SystemAction) {\n    if (systemResource && systemAction && this.allowedActions && systemResource in this.allowedActions) {\n      const roles: Object = this.allowedActions[systemResource];\n      const allActionsWithDuplicates = Object.values(roles)\n        .reduce((previousValue, currentValue) => {\n          return previousValue.concat(currentValue);\n        });\n      const availableActions = Array.from(new Set(allActionsWithDuplicates)); // [C, C, R, R, U] => [C, R, U]\n      if (!!availableActions && availableActions.indexOf(systemAction) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasRole(systemRole: SystemRole) {\n    if (!systemRole || !this.currentUser) {\n      return false;\n    }\n\n    const currentUserRoles: string[] = this.currentUser.roles;\n    if (currentUserRoles.indexOf(systemRole) >= 0) {\n      return true;\n    }\n    return false;\n  }\n*/\n  login(username: string, password: string): Observable {\n    const usernameAndPassword = username + ':' + password;\n\n    return this.userService.login(usernameAndPassword).pipe(\n      tap(resp => {\n        // console.log('[authenticationService] - login successful', resp);\n        this.isLoggedIn = true;\n      }),\n      tap(() => {\n        this.getUserProfile();\n      }),\n      tap(() => {\n        //this.getUserActions();\n      })\n    );\n  }\n\n  getUserProfile() {\n    this.userService.getUserProfile().subscribe((profile:any) => {\n      // console.log('[AuthenticationService] - getUserProfile', profile);\n      this.dataStore.setCurrentUser(profile);\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n/*\n  getUserActions() {\n    this.userService.getUserRoles().subscribe((actionResp: Object) => {\n      if (actionResp.hasOwnProperty('actions')) {\n        // console.log('[AuthenticationService] - getUserActions', actionResp);\n        this.dataStore.setAllowedActions(actionResp['actions']);\n      } else {\n        this.dataStore.setAllowedActions(null);\n      }\n    }, (errObj) => {\n      throwError(errObj);\n    });\n  }\n*/\n  public logout(navigateToLoginpage: boolean = true): void {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n\n    this.userService.logout().subscribe(null, null, () => {\n      if (navigateToLoginpage) {\n        this.navigateToLoginPage();\n      }\n    });\n  }\n\n  /**\n   * Removes Authentication Informations from Localstorage\n   * and navigates to the loginpage.\n   */\n  public handleSessionTimeout() {\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    this.navigateToLoginPage();\n  }\n\n  /**\n   * Checks currently only if the userProfile is stored locally\n   * FIXME: An additional test for a valid cookie would be more useful.\n   */\n  checkIfUserIsAlreadyLoggedIn(): boolean {\n    const storedUserProfile = this.loadUserProfile();\n    const storedAllowedActions = true ; //his.loadAllowedActions();\n\n    if (!!storedUserProfile && !!storedAllowedActions) {\n      this.isLoggedIn = true;\n      this.dataStore.setCurrentUser(storedUserProfile);\n      // this.dataStore.setAllowedActions(storedAllowedActions);\n      return true;\n    }\n    this.isLoggedIn = false;\n    this.dataStore.setCurrentUser(null);\n    //this.dataStore.setAllowedActions(null);\n    return false;\n  }\n\n  navigateToLoginPage() {\n    this.router.navigate(['login']);\n  }\n\n  loadUserProfile(): any {\n    let res = localStorage.getItem(this.bla);\n      return JSON.parse(res != null? res : '') as any;\n  }\n\n  saveUserProfile(userProfile: any): void {\n    // console.log('saveUserProfile', userProfile);\n    if (!!userProfile) {\n      localStorage.setItem('txtBooth-user', JSON.stringify(userProfile));\n    } else {\n      localStorage.removeItem('txtBooth-user');\n    }\n  }\n/*\n  loadAllowedActions(): any {\n    return JSON.parse(localStorage.getItem(this.USER_ALLOWED_ACTIONS));\n  }\n\n  saveAllowedActions(actions: any): void {\n    // console.log('saveAllowedActions', actions);\n    if (!!actions && Object.keys(actions).length > 0) {\n      localStorage.setItem(this.USER_ALLOWED_ACTIONS, JSON.stringify(actions));\n    } else {\n      localStorage.removeItem(this.USER_ALLOWED_ACTIONS);\n    }\n  }\n*/\n  get isLoggedIn(): boolean {\n    return this._isLoggedIn;\n  }\n\n  set isLoggedIn(value: boolean) {\n    this._isLoggedIn = value;\n  }\n\n  registerCurrentUser() {\n    this.dataStore.getCurrentUser().subscribe((user: any) => {\n      this.currentUser = user;\n      this.saveUserProfile(user);\n    });\n  }\n\n  registerAllowedActions() {\n    this.dataStore.getAllowedActions().subscribe((actions: Object) => {\n      this.allowedActions = actions;\n      //this.saveAllowedActions(actions);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoSearch.html":{"url":"classes/AutoSearch.html","title":"class - AutoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AutoSearch[] | string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/interfaces/imenu.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFieldComponent.html":{"url":"components/BaseFieldComponent.html","title":"component - BaseFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/classes/field.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    IField\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                field\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                            \n                                    Public\n                                ts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/classes/field.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/classes/field.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/field.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { IField, IHTMLAttributes } from '../interfaces/ifield';\nimport { ICustomValidation } from '../interfaces/icustom-validation';\nimport { IValidator } from '../interfaces/ivalidator';\nimport { EventEmitter, Input, OnInit, Component, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { FormService } from '../services/form.service';\nimport { TranslationService } from '../services/translation.service';\n\n@Component({\n  selector: 'app-base-field',\n  template: ''\n})\nexport class BaseFieldComponent implements IField, OnInit {\n  private readonly MSGerrors = {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  };\n\n  @Input() name = 'home_ui_new';\n\n  @Input() value = '';\n  @Input() placeholder: string;\n  @Input() disabled = false;\n  @Input() minLength: number;\n  @Input() maxLength: number;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() required: boolean;\n  @Input() form: FormGroup;\n  @Input() control: FormControl;\n  @Input() hintlabel = '';\n  @Input() hint = '';\n  @Input() tooltip = '';\n  @Input() htmlType = 'text';\n  @Input() iconBtn: string;\n  @Input() iconAction: EventEmitter = new EventEmitter();\n  @Input() validators: IValidator;\n  @Input() customValidation: ICustomValidation[];\n  @Input() htmlAttribute: IHTMLAttributes;\n  @Input() autocomplete = 'on';\n\n  @Input() change: EventEmitter = new EventEmitter();\n  init = true;\n  field: IField;\n\n  constructor(\n    public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService\n  ) {}\n\n  get(): BaseFieldComponent {\n    return this;\n  }\n\n  getErrorMeesage() {\n    if (this.control) {\n      for (const error in this.control.errors) {\n        if (\n          (this.control.errors.hasOwnProperty(error) && this.control.touched) ||\n          this.control.dirty\n        ) {\n          return this.getMeesage(error, this.control.errors[error]);\n        }\n      }\n    }\n  }\n\n  getMeesage(type: string, param: any) {\n    console.log(type);\n\n    if(this.MSGerrors[type](param)) {\n      return this.MSGerrors[type](param);\n    }\n  }\n\n  ngOnInit(): void {\n    this.field = this.fs.getConfigByName(\n      this.placeholder ? this.placeholder : this.name\n    );\n\n    this.setUpConfig(this.field);\n    this.form = this.fs.getForm(this.field.name);\n    this.control = this.fs.getFormControl(this.field);\n    this.fs.addField(this);\n    this.init = false;\n    this.control.valueChanges.subscribe(val => (this.value = val));\n  }\n\n  public setUpConfig(config: IField) {\n    this.hint = config.hint;\n    this.hintlabel = config.hintlabel;\n\n    if (!this.hintlabel) {\n      this.hintlabel = config.name + '#hintlabel';\n    }\n\n    let tmpReq = false;\n    let tmpDis = false;\n\n    if (this.init) {\n      tmpReq = this.required ? this.required : null;\n      tmpDis = this.disabled ? this.disabled : null;\n    }\n\n    this.validators = config.validators;\n    this.disabled = config.disabled ? config.disabled : tmpDis;\n    this.required = config.validators ? config.validators.required : tmpReq;\n    // console.log(this.required);\n\n    this.max = config.validators\n      ? config.validators.max\n      : this.max\n      ? this.max\n      : null;\n    this.min = config.validators\n      ? config.validators.min\n      : this.min\n      ? this.min\n      : null;\n    this.maxLength = config.validators\n      ? config.validators.maxLength\n      : this.maxLength\n      ? this.maxLength\n      : null;\n    this.minLength = config.validators\n      ? config.validators.minLength\n      : this.minLength\n      ? this.minLength\n      : null;\n    this.value = config.value || '';\n    this.htmlType = config.htmlType ? config.htmlType : this.htmlType;\n    this.iconBtn = config.icon? config.icon: this.iconBtn;\n\n    if (config.htmlAttribute && config.htmlAttribute.autocomplete) {\n      this.autocomplete = config.htmlAttribute.autocomplete;\n    }\n    if(this.field.disabled) {\n      this.control.disable();\n    }\n    this.synchronizeValidator();\n  }\n\n  getValue() {\n    return this.ts.data[this.value + '#label'] || this.value;\n  }\n\n  getName() {\n    return this.placeholder ? this.placeholder : this.name;\n  }\n\n  synchronizeValidator() {\n    const newValidators: IValidator = {};\n    if (this.required) {\n      newValidators.required = this.required;\n    }\n    if (this.max) {\n      newValidators.max = this.max;\n    }\n    if (this.min) {\n      newValidators.min = this.min;\n    }\n    if (this.maxLength) {\n      newValidators.maxLength = this.maxLength;\n    }\n    if (this.minLength) {\n      newValidators.minLength = this.minLength;\n    }\n    if (this.validators && this.validators.pattern) {\n      newValidators.pattern = this.validators.pattern;\n    }\n    if (this.validators && this.validators.email) {\n      newValidators.email = this.validators.email;\n    }\n    this.validators = newValidators;\n  }\n\n  getValidators() {\n    return this.validators;\n  }\n\n  getFieldConfig() {\n    return this as IField;\n  }\n  iconAct() {\n    this.iconAction.emit(\n      {\n        name: this.getName(),\n        value: this.getValue(),\n        btn: this.iconBtn\n      }\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'before'\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends BaseFieldComponent implements OnInit {\n  @Input() position = 'before';\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService\n  ) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ getName() + \"#label\" | translate }}\n  \n\n\n\n  \n    {{ getName() + \"#label\" | translate }}\n  \n  \n    \n      \n        {{ subtask.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getName() + \"#label\" | translate }}        {{ getName() + \"#label\" | translate }}                      {{ subtask.name }}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configs\n                            \n                            \n                                dataChange\n                            \n                            \n                                flatControlls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                buildTree\n                            \n                            \n                                getControlls\n                            \n                            \n                                getFlatControlls\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildFileTree\n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: literal type, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:59\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of AutoSearch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AutoSearch[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTree\n                        \n                    \n                \n            \n            \n                \nbuildTree(config: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getControlls\n                        \n                    \n                \n            \n            \n                \ngetControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFlatControlls\n                        \n                    \n                \n            \n            \n                \ngetFlatControlls()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/config.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        configs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatControlls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/config.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/formbuilder/src/lib/services/config.service.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { DataFlattnerService } from \"./data-flattner.service\";\nimport { IField } from \"../interfaces/ifield\";\nimport { MenuNode, AutoSearch } from \"../interfaces/imenu\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ConfigService {\n  flatControlls: any[];\n  dataChange = new BehaviorSubject([]);\n  configs: any;\n\n  constructor(private http: HttpClient) {\n    this.flatControlls = [];\n    // console.log(this.flatControlls);\n  }\n\n  buildTree(config: any) {\n    // console.log(config);\n    const entries = [];\n    for (const page in config) {\n      if (page) {\n        for (const formN in config[page]) {\n          if (config[page][formN]) {\n            const subLvl = [];\n            const form: IField[] = config[page][formN];\n            // console.log(form);\n            for (const [key, value] of Object.entries(form)) {\n              // console.log(`${key}: ${value}`);\n              subLvl.push(value.name);\n              // children.push(value.name);\n            }\n            const tmpData = [\n              {\n                name: formN,\n                children: subLvl\n              }\n            ];\n            entries.push(tmpData);\n          }\n        }\n      }\n    }\n    // DataFlattnerService.flatten(tmpData)\n    // this.flatControlls = tmpData;\n    // console.log(\"newtree\", this.flatControlls);\n  }\n\n  get data(): AutoSearch[] {\n    return this.dataChange.value;\n  }\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `AutoSearch`.\n   */\n  buildFileTree(obj: { [key: string]: any }, level: number): AutoSearch[] {\n    return Object.keys(obj).reduce((accumulator, key) => {\n      const value = obj[key];\n      // console.log(value);\n\n      const node = new AutoSearch();\n      node.name = key;\n      if (value != null) {\n        if (typeof value === \"object\" && level \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.less\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'questionmark'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  public icon = 'questionmark';\n  public errorMsg: string[] = [];\n  public message: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.message) {\n      this.message = this.data.message;\n    } else {\n      this.message = 'Sind Sie sicher?';\n    }\n    console.log(this.message);\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Sind Sie sicher?\n\n\n\n\n  {{message | translate}}\n\n\n\n\n  Nein\n  \n  \n  \n    Ja\n  \n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.less\n                \n                #confirm-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#confirm-dialog_title > h2 {\n  margin: 0;\n}\n\n#confirm-dialog_message {\n  font-size: 14px;\n}\n\nmat-dialog-content#confirm-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Sind Sie sicher?  {{message | translate}}  Nein          Ja  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvConfigConsts.html":{"url":"classes/CsvConfigConsts.html","title":"class - CsvConfigConsts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvConfigConsts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                BOM\n                            \n                            \n                                    Static\n                                DEFAULT_DECIMAL_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FIELD_SEPARATOR\n                            \n                            \n                                    Static\n                                DEFAULT_FILENAME\n                            \n                            \n                                    Static\n                                DEFAULT_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_NO_DOWNLOAD\n                            \n                            \n                                    Static\n                                DEFAULT_NULL_TO_EMPTY_STRING\n                            \n                            \n                                    Static\n                                DEFAULT_OBJ_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_QUOTE\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_LABELS\n                            \n                            \n                                    Static\n                                DEFAULT_SHOW_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_TITLE\n                            \n                            \n                                    Static\n                                DEFAULT_USE_BOM\n                            \n                            \n                                    Static\n                                DEFAULT_USE_HEADER\n                            \n                            \n                                    Static\n                                DEFAULT_USE_OBJ_HEADER\n                            \n                            \n                                    Static\n                                EOL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BOM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\ufeff'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_DECIMAL_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FIELD_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ','\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mycsv.csv'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NO_DOWNLOAD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_NULL_TO_EMPTY_STRING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_QUOTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\"'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_LABELS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_SHOW_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'My Report'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_BOM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DEFAULT_USE_OBJ_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\r\\n'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/classes/angular-csv.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataConnectorService.html":{"url":"injectables/DataConnectorService.html","title":"injectable - DataConnectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataConnectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                deleteField\n                            \n                            \n                                get\n                            \n                            \n                                getAsyncValidation\n                            \n                            \n                                getFields\n                            \n                            \n                                insertField\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteField\n                        \n                    \n                \n            \n            \n                \ndeleteField(id)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(itemType: string, id: string, kat: string[], txt: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"0\"\n                                    \n\n                                \n                                \n                                    kat\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    txt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsyncValidation\n                        \n                    \n                \n            \n            \n                \ngetAsyncValidation(url: string, body: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFields\n                        \n                    \n                \n            \n            \n                \ngetFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertField\n                        \n                    \n                \n            \n            \n                \ninsertField(field: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, post: any, itemType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    post\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-connector.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataFlattnerService.html":{"url":"injectables/DataFlattnerService.html","title":"injectable - DataFlattnerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataFlattnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flatten\n                            \n                            \n                                    Static\n                                isBuffer\n                            \n                            \n                                    Static\n                                isFlat\n                            \n                            \n                                    Static\n                                unflatten\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    flatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBuffer(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:26\n                \n            \n\n\n            \n                \n                    isBuffer\nused for flatten unflatten\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isFlat\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFlat(object: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFlatObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        unflatten\n                        \n                    \n                \n            \n            \n                \n                    \n                    unflatten(target, opts?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataStoreService.html":{"url":"injectables/DataStoreService.html","title":"injectable - DataStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allowedActions\n                            \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                navbarVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllowedActions\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getNavbarState\n                            \n                            \n                                    Public\n                                setAllowedActions\n                            \n                            \n                                    Public\n                                setCurrentUser\n                            \n                            \n                                    Public\n                                showNavbar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllowedActions()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNavbarState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavbarState()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setAllowedActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllowedActions(value: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentUser(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showNavbar\n                        \n                    \n                \n            \n            \n                \n                    \n                    showNavbar(shouldNavbarBeVisible: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/data-store.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shouldNavbarBeVisible\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        allowedActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        navbarVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/data-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n\n  private navbarVisibility: BehaviorSubject = new BehaviorSubject(true);\n\n  private currentUser: ReplaySubject = new ReplaySubject(1);\n  private allowedActions: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n  }\n\n  public showNavbar(shouldNavbarBeVisible: boolean): void {\n    this.navbarVisibility.next(shouldNavbarBeVisible);\n  }\n\n  public getNavbarState(): BehaviorSubject {\n    return this.navbarVisibility;\n  }\n\n  public getCurrentUser(): ReplaySubject {\n    return this.currentUser;\n  }\n\n  public setCurrentUser(value: any) {\n    this.currentUser.next(value);\n  }\n\n  public getAllowedActions(): ReplaySubject {\n    return this.allowedActions;\n  }\n\n  public setAllowedActions(value: Object): void {\n    this.allowedActions.next(value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateInputComponent.html":{"url":"components/DateInputComponent.html","title":"component - DateInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-input\n            \n\n            \n                styleUrls\n                ./date-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, dateAdapter: DateAdapter, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateAdapter\n                                                  \n                                                        \n                                                                    DateAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { DateAdapter } from '@angular/material/core';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss']\n})\nexport class DateInputComponent extends BaseFieldComponent implements OnInit {\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    private dateAdapter: DateAdapter,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n    dateAdapter.setLocale(ts.lang);\n\n    ts.onLangChange.subscribe(lang => dateAdapter.setLocale(lang));\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./date-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                confirm\n                            \n                            \n                                    Public\n                                setValid\n                            \n                            \n                                    Public\n                                showDataImportErrorDialog\n                            \n                            \n                                    Public\n                                showErrorDialog\n                            \n                            \n                                    Public\n                                showInfoDialog\n                            \n                            \n                                    Public\n                                xmlExport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/dialog.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                    \n                    confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:79\n                \n            \n\n\n            \n                \n                    messageString may also be an html String like:\nAre you sure?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    setValid(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showDataImportErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDataImportErrorDialog(errorDataArray: any[], afterDialogCallback: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorDataArray\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showErrorDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showErrorDialog(errorMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showInfoDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showInfoDialog(infoMsg: any, afterDialogCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infoMsg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    afterDialogCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatDialogRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        xmlExport\n                        \n                    \n                \n            \n            \n                \n                    \n                    xmlExport(positiveCallback: Function, negativeCallback?: Function)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/dialog.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positiveCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    negativeCallback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from '../ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from '../ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) { }\n\n  public showDataImportErrorDialog(errorDataArray: any[],\n    afterDialogCallback: Function\n  ): MatDialogRef {\n\n    const dialogData = {\n      dataImportErrors: errorDataArray\n    };\n\n    const dialogRef = this.dialog.open(MatDialog, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      afterDialogCallback(result);\n    });\n\n    return dialogRef;\n  }\n\n  public showErrorDialog(errorMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      errorMsg: errorMsg\n    };\n\n    const dialogRef = this.dialog.open(ErrorDialogSimpleComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  public showInfoDialog(infoMsg: any, afterDialogCallback?: Function): MatDialogRef {\n\n    const dialogData = {\n      infoMsg: infoMsg\n    };\n\n    const dialogRef = this.dialog.open(InfoDialogSimpleComponent, {\n      data: dialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (!!afterDialogCallback) {\n        afterDialogCallback(result);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  /**\n   * messageString may also be an html String like:\n   * Are you sure?\n   *\n   * @param {string} messageString\n   * @param {Function} positiveCallback\n   * @param {Function} negativeCallback\n   */\n  public confirm(messageString: string, positiveCallback: Function, negativeCallback?: Function): void {\n    console.log(messageString);\n\n    const dialogData = {\n      message: messageString\n    };\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result === true) {\n        positiveCallback();\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public xmlExport(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog);\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n\n  public setValid(positiveCallback: Function, negativeCallback?: Function): void {\n    const dialogRef = this.dialog.open(MatDialog, {width: '350px'});\n\n    dialogRef.afterClosed().subscribe((result:any) => {\n      if (result) {\n        positiveCallback(result);\n      } else {\n        if (!!negativeCallback) {\n          negativeCallback();\n        }\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogSimpleComponent.html":{"url":"components/ErrorDialogSimpleComponent.html","title":"component - ErrorDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-simple\n            \n\n            \n                styleUrls\n                ./error-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'error'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog-simple',\n  templateUrl: './error-dialog-simple.component.html',\n  styleUrls: ['./error-dialog-simple.component.less']\n})\nexport class ErrorDialogSimpleComponent implements OnInit {\n\n  public icon = 'error';\n  public errorMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.errorMsg && Array.isArray(this.data.errorMsg)) {\n      this.errorMsg = this.data.errorMsg;\n    } else {\n      this.errorMsg = [String(this.data.errorMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Es ist ein Fehler aufgetreten!\n   1\">Es sind Fehler aufgetreten!\n\n\n\n\n  \n    {{errorMsg | translate}}\n  \n\n\n\n\n  \n    OK\n  \n\n\n    \n\n    \n                \n                    ./error-dialog-simple.component.less\n                \n                \n#error-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#error-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.error-dialog_message {\n  font-size: 14px;\n  word-break: break-all;\n}\n\nmat-dialog-content#error-dialog_content {\n  padding-left: 60px !important;\n  padding-right: 60px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Es ist ein Fehler aufgetreten!   1\">Es sind Fehler aufgetreten!      {{errorMsg | translate}}        OK  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileInputComponent.html":{"url":"components/FileInputComponent.html","title":"component - FileInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-input\n            \n\n            \n                styleUrls\n                ./file-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                srcResult\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        srcResult\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.scss']\n})\nexport class FileInputComponent extends BaseFieldComponent implements OnInit {\n\n  @Input() srcResult: any;\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.name);\n    // console.log(this.control);\n    // console.log(this.form);\n  }\n\n  onFileSelected() {\n    const inputNode: any = document.querySelector('#file');\n\n    if (typeof (FileReader) !== 'undefined' && typeof (inputNode.files[0]) !== 'undefined') {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        // console.log(e);\n\n        this.srcResult = e.target.result;\n      };\n\n      reader.readAsArrayBuffer(inputNode.files[0]);\n      // console.log(reader);\n\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Choose File\n  \n  \n\n    \n\n    \n                \n                    ./file-input.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Choose File    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormbuilderComponent.html":{"url":"components/FormbuilderComponent.html","title":"component - FormbuilderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormbuilderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/formbuilder.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-formbuilder\n            \n\n\n\n            \n                template\n                \n  formbuilder works!\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-formbuilder',\n  template: `\n    \n      formbuilder works!\n    \n  `,\n  styles: [\n  ]\n})\nexport class FormbuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  formbuilder works!'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormbuilderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormbuilderModule.html":{"url":"modules/FormbuilderModule.html","title":"module - FormbuilderModule","body":"\n                   \n\n\n\n\n    Modules\n    FormbuilderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\ncluster_FormbuilderModule_providers\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nFormbuilderModule->TranslatePipe \n\n\n\n\n\nConfigService\n\nConfigService\n\nFormbuilderModule -->\n\nConfigService->FormbuilderModule\n\n\n\n\n\nDataFlattnerService\n\nDataFlattnerService\n\nFormbuilderModule -->\n\nDataFlattnerService->FormbuilderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            BaseFieldComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            ErrorDialogSimpleComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            InfoDialogSimpleComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                        \n                            DataFlattnerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            DateInputComponent\n                        \n                        \n                            FileInputComponent\n                        \n                        \n                            FormbuilderComponent\n                        \n                        \n                            RadiobuttonComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SlideToggleComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TextInputComponent\n                        \n                        \n                            TranslatePipe\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            FormbuilderComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/formbuilder.module.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { ngModule: typeof FormbuilderModule; providers: {}; }\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormbuilderComponent } from './formbuilder.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SelectComponent } from './ui-components/select/select.component';\nimport { TextInputComponent } from './ui-components/text-input/text-input.component';\nimport { DateInputComponent } from './ui-components/date-input/date-input.component';\nimport { FileInputComponent } from './ui-components/file-input/file-input.component';\nimport { AutocompleteComponent } from './ui-components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './ui-components/checkbox/checkbox.component';\nimport { RadiobuttonComponent } from './ui-components/radiobutton/radiobutton.component';\nimport { SliderComponent } from './ui-components/slider/slider.component';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { BaseFieldComponent } from './classes/field';\nimport { TranslatePipe } from './services/translation.pipe';\nimport { TranslationService } from './services/translation.service';\nimport { ConfigService } from './services/config.service';\nimport { DataFlattnerService } from './services/data-flattner.service';\nimport { ConfirmDialogComponent } from './ui-components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { ErrorDialogSimpleComponent } from './ui-components/dialogs/error-dialog-simple/error-dialog-simple.component';\nimport { InfoDialogSimpleComponent } from './ui-components/dialogs/info-dialog-simple/info-dialog-simple.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TableComponent } from './ui-components/table/table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { SlideToggleComponent } from './ui-components/slideToggle/slideToggle.component';\n\nregisterLocaleData(localeDe, 'de');\n\n@NgModule({\n  declarations: [\n    FormbuilderComponent,\n    BaseFieldComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TranslatePipe,\n    ConfirmDialogComponent,\n    ErrorDialogSimpleComponent,\n    InfoDialogSimpleComponent,\n    TableComponent,\n    SlideToggleComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    HttpClientModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSliderModule,\n    MatSlideToggleModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'de' },\n    ConfigService,\n    DataFlattnerService,\n    TranslatePipe\n  ],\n  bootstrap: [FormbuilderComponent],\n  exports: [\n    FormbuilderComponent,\n    SelectComponent,\n    TextInputComponent,\n    DateInputComponent,\n    FileInputComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    RadiobuttonComponent,\n    SliderComponent,\n    TranslatePipe,\n    TableComponent,\n    SlideToggleComponent\n  ]\n})\n\nexport class FormbuilderModule {\n\n  static forRoot() {\n    return {\n      ngModule: FormbuilderModule,\n      providers: [\n        TranslationService,\n        ConfigService,\n        DataFlattnerService\n      ]\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormbuilderService.html":{"url":"injectables/FormbuilderService.html","title":"injectable - FormbuilderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormbuilderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/formbuilder.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/formbuilder.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormbuilderService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICodeEntry.html":{"url":"interfaces/ICodeEntry.html","title":"interface - ICodeEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICodeEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICustomValidation.html":{"url":"interfaces/ICustomValidation.html","title":"interface - ICustomValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICustomValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToCheck\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fieldToUpdate\n                                        \n                                \n                                \n                                        \n                                            operator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         IDialogConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDialogConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToCheck\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToCheck:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldToUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldToUpdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDialogConfig.html":{"url":"interfaces/IDialogConfig.html","title":"interface - IDialogConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDialogConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dialog\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            noAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            okAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onCancel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onClose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dialog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        okAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        okAction:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onCancel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onCancel:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onClose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onClose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reset:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICustomValidation {\n  event: string; // change | blur | focus\n  operator: string; //  | >= |  {};\n  noAction?: () => {};\n  onCancel?: () => {};\n  onClose?: () => {};\n  reset?: boolean;\n}\n\n/*\npublic class CustomValidation\n    {\n        public string Name { get; set; }\n        public string Operator { get; set; }\n        public object Value { get; set; } //Null - Validation von statischen Werten Age >= 18\n        public ForeignFieldCheck ForeignFieldCheck { get; set; } //Null - Validation basierend auf anderen Entitäten\n        public int MessageCode { get; set; }\n        public string Message { get; set; }\n    }\n\n    public class ForeignFieldCheck\n    {\n        public string EntityType { get; set; }\n        public string Name { get; set; }\n    }\n\n\n*/\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IField.html":{"url":"interfaces/IField.html","title":"interface - IField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customValidation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hintlabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlAttribute\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconAction\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipdelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltipposition\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validatorFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidatorFn:         AsyncValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AsyncValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customValidation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customValidation:         ICustomValidation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICustomValidation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintlabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hintlabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlAttribute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlAttribute:         IHTMLAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IHTMLAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconAction:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ICodeEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICodeEntry[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipdelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipdelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltipposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltipposition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateOn:     \"change\" | \"blur\" | \"submit\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"change\" | \"blur\" | \"submit\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validatorFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validatorFn:         ValidatorFn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidatorFn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:         IValidator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IValidator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFlatObject.html":{"url":"interfaces/IFlatObject.html","title":"interface - IFlatObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFlatObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-flattner.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/data-flattner.service.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface IFlatObject {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFlattnerService {\n\n  constructor() {\n  }\n\n  public static isFlat(object: any): object is IFlatObject {\n    if (!(typeof object === 'object')) {\n      return false;\n    }\n    return true;\n  }\n\n  /** isBuffer\n   * used for flatten unflatten\n   * @obj\n   */\n  public static isBuffer(obj) {\n    return obj != null && obj.constructor != null &&\n      typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n  }\n\n  public static flatten(target, opts?: { delimiter?: string, maxDepth?: number, safe?: boolean }) {\n    opts = opts || {};\n\n    const delimiter = opts.delimiter || '.';\n    const maxDepth = opts.maxDepth;\n    const output = {};\n\n    function step(object, prev?: any, currentDepth?: any) {\n      currentDepth = currentDepth || 1;\n      Object.keys(object).forEach((key) => {\n        const value = object[key];\n        const isArray = opts.safe && Array.isArray(value);\n        const type = Object.prototype.toString.call(value);\n        const isBuffer = DataFlattnerService.isBuffer(value);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        const newKey = prev ? prev + delimiter + key : key;\n\n        if (!isArray && !isBuffer && isObject && Object.keys(value).length &&\n          (!opts.maxDepth || currentDepth  {\n      return keyA.length - keyB.length;\n    });\n\n    sortKeys.forEach((key) => {\n      const split = key.split(delimiter);\n      let key1 = getKey(split.shift());\n      let key2 = getKey(split[0]);\n      let recipient = result;\n\n      while (key2 !== undefined) {\n        const type = Object.prototype.toString.call(recipient[key1]);\n        const isObject = (\n          type === '[object Object]' ||\n          type === '[object Array]'\n        );\n\n        if (!overwrite && !isObject && typeof recipient[key1] !== 'undefined') {\n          return;\n        }\n\n        if ((overwrite && !isObject) || (!overwrite && recipient[key1] == null)) {\n          recipient[key1] = (\n            typeof key2 === 'number' &&\n            !opts.object ? [] : {}\n          );\n        }\n\n        recipient = recipient[key1];\n        if (split.length > 0) {\n          key1 = getKey(split.shift());\n          key2 = getKey(split[0]);\n        }\n      }\n\n      recipient[key1] = DataFlattnerService.unflatten(target[key], opts);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IForm.html":{"url":"interfaces/IForm.html","title":"interface - IForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iform.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            form\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getForm\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/interfaces/iform.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        form\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        form:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\nimport { IField, IFormObj } from './ifield';\n\nexport interface IForm {\n  form: FormGroup;\n  name: string;\n\n  getForm(name: string): FormGroup;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormObj.html":{"url":"interfaces/IFormObj.html","title":"interface - IFormObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:     IFormObj[] | IField[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IFormObj[] | IField[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHTMLAttributes.html":{"url":"interfaces/IHTMLAttributes.html","title":"interface - IHTMLAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHTMLAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ifield.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autocomplete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autocomplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autocomplete:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IValidator } from './ivalidator';\nimport { ICustomValidation } from './icustom-validation';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\n\nexport interface IHTMLAttributes {\n  src?: string;\n  step?: number;\n  name?: string;\n  disabled?: boolean;\n  autocomplete?: string;\n}\n\nexport interface IField {\n  name: string;\n  htmlType?: string;\n  disabled?: boolean;\n  validators?: IValidator;\n  validatorFn?: ValidatorFn;\n  asyncValidatorFn?: AsyncValidatorFn;\n  customValidation?: ICustomValidation[];\n  value?: any;\n  placeholder?: string;\n  htmlAttribute?: IHTMLAttributes;\n  hint?: string;\n  hintlabel?: string;\n  tooltip?: string;\n  tooltipposition?: string;\n  tooltipdelay?: number; // in ms\n  icon?: string;\n  iconAction?: EventEmitter;\n  change?: EventEmitter;\n  updateOn?: 'change' | 'blur' | 'submit';\n  options?: ICodeEntry[];\n}\n\nexport interface IFormObj {\n  name: string;\n  children: IFormObj[] | IField[];\n}\n\nexport interface ICodeEntry {\n  value: any;\n  key: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISliderConfig.html":{"url":"interfaces/ISliderConfig.html","title":"interface - ISliderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISliderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inverted\n                                        \n                                \n                                \n                                        \n                                            showThumb\n                                        \n                                \n                                \n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            vertical\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inverted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inverted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showThumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showThumb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertical\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertical:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISliderConfig {\n    step: number;\n    showThumb: boolean;\n    vertical: boolean;\n    inverted: boolean;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableHeader.html":{"url":"interfaces/ITableHeader.html","title":"interface - ITableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collumnKey\n                                        \n                                \n                                \n                                        \n                                            collumnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            widthInPercentage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collumnKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collumnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collumnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthInPercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        widthInPercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITableViewOptions.html":{"url":"interfaces/ITableViewOptions.html","title":"interface - ITableViewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITableViewOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/ui-components/table/table.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            searchable\n                                        \n                                \n                                \n                                        \n                                            showActions\n                                        \n                                \n                                \n                                        \n                                            showCheckbox\n                                        \n                                \n                                \n                                        \n                                            showCSVExport\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDeleteAllButton\n                                        \n                                \n                                \n                                        \n                                            showPaginator\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        searchable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showActions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCheckbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCheckbox:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCSVExport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCSVExport:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDeleteAllButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDeleteAllButton:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPaginator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPaginator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TableType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TableType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidator.html":{"url":"interfaces/IValidator.html","title":"interface - IValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/ivalidator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IValidator {\n  required?: boolean;\n  maxLength?: number;\n  minLength?: number;\n  max?: number;\n  min?: number;\n  pattern?: string;\n  email?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogSimpleComponent.html":{"url":"components/InfoDialogSimpleComponent.html","title":"component - InfoDialogSimpleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogSimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-dialog-simple\n            \n\n            \n                styleUrls\n                ./info-dialog-simple.component.less\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog-simple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                infoMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'info'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        infoMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-info-dialog-simple',\n  templateUrl: './info-dialog-simple.component.html',\n  styleUrls: ['./info-dialog-simple.component.less']\n})\nexport class InfoDialogSimpleComponent implements OnInit {\n\n  public icon = 'info';\n  public infoMsg: string[] = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef\n  ) {\n  }\n\n  ngOnInit() {\n\n    if (!this.data) {\n      return;\n    }\n\n    this.dialogRef.disableClose = true;\n\n    if (!!this.data.icon) {\n      this.icon = this.data.icon;\n    }\n\n    if (!!this.data.infoMsg && Array.isArray(this.data.infoMsg)) {\n      this.infoMsg = this.data.infoMsg;\n    } else {\n      this.infoMsg = [String(this.data.infoMsg)];\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n  {{icon}}\n  Information\n\n\n\n\n  \n    \n                   {{infoMsg | translate}}\n    \n  \n\n\n\n\n  OK\n\n\n    \n\n    \n                \n                    ./info-dialog-simple.component.less\n                \n                \n#info-dialog_title {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 30px 60px 0 60px;\n}\n\n#info-dialog_title > h2 {\n  margin: 0;\n}\n\nmat-list-item.info-dialog_message {\n  font-size: 14px;\n  height: 20px;\n  padding: 0;\n  word-break: break-all;\n}\n\nmat-dialog-content#info-dialog_content {\n  padding-left: 50px !important;\n  padding-right: 50px !important;\n}\n\nmat-icon {\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{icon}}  Information                         {{infoMsg | translate}}        OK'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogSimpleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuNode.html":{"url":"interfaces/MenuNode.html","title":"interface - MenuNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/imenu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MenuNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuNode {\n  name: string;\n  children?: MenuNode[];\n}\n\nexport class AutoSearch {\n  name: string;\n  children?: AutoSearch[] | string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/classes/angular-csv.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decimalseparator\n                                        \n                                \n                                \n                                        \n                                            fieldSeparator\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            noDownload\n                                        \n                                \n                                \n                                        \n                                            nullToEmptyString\n                                        \n                                \n                                \n                                        \n                                            objHeader\n                                        \n                                \n                                \n                                        \n                                            quoteStrings\n                                        \n                                \n                                \n                                        \n                                            showLabels\n                                        \n                                \n                                \n                                        \n                                            showTitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            useBom\n                                        \n                                \n                                \n                                        \n                                            useHeader\n                                        \n                                \n                                \n                                        \n                                            useObjHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decimalseparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimalseparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldSeparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldSeparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        noDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullToEmptyString\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nullToEmptyString:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objHeader:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quoteStrings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quoteStrings:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showLabels:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTitle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useBom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useBom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useObjHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useObjHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Options {\n  filename: string;\n  fieldSeparator: string;\n  quoteStrings: string;\n  decimalseparator: string;\n  showLabels: boolean;\n  showTitle: boolean;\n  title: string;\n  useBom: boolean;\n  headers: string[];\n  objHeader: any;\n  noDownload: boolean;\n  useObjHeader: boolean;\n  useHeader: boolean;\n  nullToEmptyString: boolean;\n}\n\nexport class CsvConfigConsts {\n  public static EOL = '\\r\\n';\n  public static BOM = '\\ufeff';\n\n  public static DEFAULT_FIELD_SEPARATOR = ',';\n  public static DEFAULT_DECIMAL_SEPARATOR = '.';\n  public static DEFAULT_QUOTE = '\"';\n  public static DEFAULT_SHOW_TITLE = false;\n  public static DEFAULT_TITLE = 'My Report';\n  public static DEFAULT_FILENAME = 'mycsv.csv';\n  public static DEFAULT_SHOW_LABELS = false;\n  public static DEFAULT_USE_BOM = true;\n  public static DEFAULT_HEADER: any[] = [];\n  public static DEFAULT_OBJ_HEADER = {};\n  public static DEFAULT_USE_OBJ_HEADER = false;\n  public static DEFAULT_USE_HEADER = false;\n  public static DEFAULT_NO_DOWNLOAD = false;\n  public static DEFAULT_NULL_TO_EMPTY_STRING = false;\n}\n\nexport const ConfigDefaults: Options = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n};\n\nexport class AngularCsv {\n  public fileName: string;\n  public labels: Array;\n  public data: any[];\n\n  private _options: Options;\n  private csv = '';\n\n  constructor(DataJSON: any, filename: string, options?: any) {\n    let config = options || {};\n\n    this.data = typeof DataJSON !== 'object' ? JSON.parse(DataJSON) : DataJSON;\n\n    this._options = objectAssign({}, ConfigDefaults, config);\n\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n\n    this.generateCsv();\n  }\n\n  /**\n   * Check if is Float\n   * @param input: any\n   */\n  static isFloat(input: any) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  }\n\n  /**\n   * Generate and Download Csv\n   */\n  private generateCsv() {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n\n    if (\n      this._options.useObjHeader &&\n      Object.keys(this._options.objHeader).length > 0\n    ) {\n      this.getHeaderFromObj();\n      this.getBodyAccordingHeader();\n    } else {\n      this.getHeaders();\n      this.getBody();\n    }\n\n    if (this.csv === '') {\n      console.log('Invalid data');\n      return '';\n    }\n\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n\n    let blob = new Blob([this.csv], { type: 'text/csv;charset=utf8;' });\n\n    if (navigator.msSaveBlob) {\n      let filename = this._options.filename.replace(/ /g, '_') + '.csv';\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      let uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      let link = document.createElement('a');\n\n      link.href = URL.createObjectURL(blob);\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, '_') + '.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n    return '';\n  }\n\n  /**\n   * Create Headers\n   */\n  getHeaders(): void {\n    if (this._options.headers.length > 0) {\n      const { headers } = this._options;\n      let row = headers.reduce((headerRow, header) => {\n        return headerRow + header + this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Header from Object\n   */\n  getHeaderFromObj(): void {\n    if (Object.keys(this._options.objHeader).length > 0) {\n      let row = '';\n      Object.keys(this._options.objHeader).forEach(key => {\n        row += this._options.objHeader[key] + this._options.fieldSeparator;\n      });\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body according to obj header\n   */\n  getBodyAccordingHeader(): void {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0\n      ) {\n        Object.keys(this._options.objHeader).forEach(key => {\n          row +=\n            this.formatData(this.data[i][key]) + this._options.fieldSeparator;\n        });\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Create Body\n   */\n  getBody() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  0) {\n        for (const index of this._options.headers) {\n          row +=\n            this.formatData(this.data[i][index]) + this._options.fieldSeparator;\n        }\n      } else {\n        for (const index in this.data[i]) {\n          if (this.data[i][index]) {\n            row +=\n              this.formatData(this.data[i][index]) +\n              this._options.fieldSeparator;\n          }\n        }\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  }\n\n  /**\n   * Format Data\n   * @param data: any\n   */\n  formatData(data: any) {\n    if (\n      this._options.decimalseparator === 'locale' &&\n      AngularCsv.isFloat(data)\n    ) {\n      return data.toLocaleString();\n    }\n\n    if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (\n        this._options.quoteStrings ||\n        data.indexOf(',') > -1 ||\n        data.indexOf('\\n') > -1 ||\n        data.indexOf('\\r') > -1\n      ) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n\n    if (this._options.nullToEmptyString) {\n      if (!data) {\n        return (data = '');\n      } else {\n        return data;\n      }\n    }\n\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n\n    return data;\n  }\n\n  getCsvData() {\n    return this.csv;\n  }\n}\n\nlet hasOwnProperty = Object.prototype.hasOwnProperty;\nlet propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n/**\n * Convet to Object\n * @param val:any\n */\nfunction toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError(\n      'Object.assign cannot be called with null or undefined'\n    );\n  }\n  return Object(val);\n}\n\n/**\n * Assign data  to new Object\n * @param  target: any\n * @param  source: any[]\n */\nfunction objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  let to = toObject(target);\n  let symbols: any;\n\n  for (let s = 1; s \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadiobuttonComponent.html":{"url":"components/RadiobuttonComponent.html","title":"component - RadiobuttonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RadiobuttonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-radiobutton\n            \n\n            \n                styleUrls\n                ./radiobutton.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radiobutton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-radiobutton',\n  templateUrl: './radiobutton.component.html',\n  styleUrls: ['./radiobutton.component.scss']\n})\nexport class RadiobuttonComponent extends BaseFieldComponent implements OnInit {\n  @Input() options: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n  {{ getName()+'#label' | translate }}\n    \n    \n      \n        {{item.key}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./radiobutton.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ getName()+\\'#label\\' | translate }}                      {{item.key}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RadiobuttonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ICodeEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/select/select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { ICodeEntry } from '../../interfaces/ifield';\nimport { TranslationService } from '../../services/translation.service';\n\n\n\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss']\n})\nexport class SelectComponent extends BaseFieldComponent implements OnInit {\n  @Input() options?: ICodeEntry[];\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.options = this.fs.getConfigByName(this.name).options? this.fs.getConfigByName(this.name).options : this.options;\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Bitte Wählen...\n      \n        {{item.key | translate}}\n      \n    \n    \n    {{hint}}\n    \n      {{ getErrorMeesage() }}\n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitte Wählen...              {{item.key | translate}}                  {{hint}}          {{ getErrorMeesage() }}      '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlideToggleComponent.html":{"url":"components/SlideToggleComponent.html","title":"component - SlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slidetoggle\n            \n\n            \n                styleUrls\n                ./slideToggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slideToggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slidetoggle',\n  templateUrl: './slideToggle.component.html',\n  styleUrls: ['./slideToggle.component.scss']\n})\nexport class SlideToggleComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n  @Input() color: string;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n    \n        Slide me!\n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slideToggle.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Slide me!            {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider\n            \n\n            \n                styleUrls\n                ./slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ISliderConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/slider/slider.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ISliderConfig } from '../../interfaces/isliderconfig';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent extends BaseFieldComponent implements OnInit {\n  @Input() config: ISliderConfig;\n\n  constructor(public fb: FormBuilder,\n    public fs: FormService,\n    public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.options);\n    // console.log(this.form);\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n      {{hint}}\n      \n        {{ getErrorMeesage() }}\n      \n  \n\n\n    \n\n    \n                \n                    ./slider.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{hint}}              {{ getErrorMeesage() }}        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collumnsToBeDisplayed\n                            \n                            \n                                filterControl\n                            \n                            \n                                initialColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                resultsLength\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                csvExport\n                            \n                            \n                                customFilterBasedOnDisplayColumns\n                            \n                            \n                                getDisplayData\n                            \n                            \n                                getFilteredDisplayData\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteRecord\n                            \n                            \n                                onDeleteSelectedRecords\n                            \n                            \n                                onDownload\n                            \n                            \n                                onEdit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                viewOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                delete\n                            \n                            \n                                deleteBulk\n                            \n                            \n                                download\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ts: TranslatePipe)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         ITableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewOptions\n                    \n                \n                \n                    \n                        Type :         ITableViewOptions\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:60\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataSource\n                    \n                \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteBulk\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:64\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        csvExport\n                        \n                    \n                \n            \n            \n                \ncsvExport()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFilterBasedOnDisplayColumns\n                        \n                    \n                \n            \n            \n                \ncustomFilterBasedOnDisplayColumns(data: any, filter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayData\n                        \n                    \n                \n            \n            \n                \ngetDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredDisplayData\n                        \n                    \n                \n            \n            \n                \ngetFilteredDisplayData(colums)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colums\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:80\n                \n            \n\n\n            \n                \n                    Whether the number of selected elements matches the total number of rows.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:87\n                \n            \n\n\n            \n                \n                    Selects all rows if they are not all selected; otherwise clear selection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteRecord\n                        \n                    \n                \n            \n            \n                \nonDeleteRecord(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteSelectedRecords\n                        \n                    \n                \n            \n            \n                \nonDeleteSelectedRecords()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDownload\n                        \n                    \n                \n            \n            \n                \nonDownload(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit(row: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collumnsToBeDisplayed\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/ui-components/table/table.component.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AngularCsv } from '../../classes/angular-csv';\nimport { TranslatePipe } from '../../services/translation.pipe';\n\nexport enum TableType {\n  USER = 'USER',\n  FILE = 'FILE',\n  GENERIC = 'GENERIC'\n}\n\nexport interface ITableViewOptions {\n  type: TableType;\n\n  searchable: boolean;\n\n  showPaginator: boolean;\n\n  showCheckbox: boolean;\n\n  showActions: boolean;\n\n  showCSVExport: boolean;\n\n  showDeleteAllButton?: boolean;\n}\n\nexport interface ITableHeader {\n  collumnName: string;\n\n  collumnKey?: string;\n\n  widthInPercentage?: number;\n}\n\n\n// TODO: A structure that helps generation the table\n// TODO: Make the action buttons configurable. Eg.: disabled\n// TODO: add for CodeTables an entry in getDisplayRepresentation()\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\n\nexport class TableComponent implements OnInit, OnChanges, AfterViewInit {\n  selection = new SelectionModel(true, []);\n  collumnsToBeDisplayed: string[] = [];\n  initialColumns: string[] = [];\n  @Output() dataSource = new MatTableDataSource();\n  resultsLength = 0;\n  filterControl = new FormControl('');\n  @Input() displayedColumns: ITableHeader[] = [];\n  @Input() viewOptions: ITableViewOptions;\n  @Input() data = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() edit: EventEmitter = new EventEmitter();\n  @Output() download: EventEmitter = new EventEmitter();\n  @Output() delete: EventEmitter = new EventEmitter();\n  @Output() deleteBulk: EventEmitter = new EventEmitter();\n\n  constructor(\n    private dialog: MatDialog,\n    private ts: TranslatePipe) {\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = (event.target as HTMLInputElement).value;\n    this.selection.clear();\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.filteredData.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit() {\n    this.dataSource.data = this.data || [];\n\n    if (this.viewOptions.showDeleteAllButton !== false) {\n      this.viewOptions.showDeleteAllButton = true;\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.unshift({collumnName: 'select'});\n    }\n    if (this.viewOptions.showCheckbox) {\n      this.displayedColumns.push({collumnName: 'actions'});\n    }\n    this.collumnsToBeDisplayed = this.displayedColumns.map(header => header.collumnName);\n    this.initialColumns = this.displayedColumns.filter((column) => column.collumnName !== '')\n      .map((column) => column.collumnName);\n    this.dataSource.filterPredicate = (data: any, filter: string) => this.customFilterBasedOnDisplayColumns(data, filter);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.selection.clear();\n    if (changes['data']) {\n      this.data = changes.data.currentValue || [];\n      this.dataSource.data = this.data;\n      this.resultsLength = this.data.length;\n      this.dataSource.filter = '';\n      this.filterControl.patchValue('');\n      if (this.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  }\n\n  onEdit(row: any) {\n    this.edit.emit(row);\n  }\n\n\n  onDownload(row: any) {\n    this.download.emit(row);\n  }\n\n  onDeleteRecord(row: any) {\n    this.delete.emit(row);\n    this.selection.clear();\n  }\n\n  onDeleteSelectedRecords() {\n    const filteredDatasource = this.dataSource.filteredData.filter(item => this.selection.selected.indexOf(item) >= 0);\n    this.deleteBulk.emit(filteredDatasource);\n    this.selection.clear();\n  }\n\n  customFilterBasedOnDisplayColumns(data: any, filter: string) {\n    for (const columnName of this.initialColumns) {\n      // console.log(data);\n      // console.log(columnName);\n\n      if (data[columnName] && data[columnName].toString().trim().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  getDisplayData(colums) {\n    const result = [];\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i  header.collumnKey ?\n      this.ts.transform(header.collumnKey) : header.collumnName));\n    columns = columns.filter((el) => {\n      return el.collumnName !== '' && el.collumnName !== 'select' && el.collumnName !== 'actions';\n    });\n    columnNames = columnNames.filter((el) => {\n      return el !== '' && el !== 'select' && el !== 'actions';\n    });\n    // columns.\n    // console.log(columns);\n\n    const tmpData = this.getDisplayData(columns);\n    // console.log(tmpData);\n\n    // const data = this.getFilteredDisplayData(columns);\n\n    const options = {\n      fieldSeparator: ';',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: 'Formbuilder',\n      useBom: true,\n      noDownload: false,\n      headers: columnNames\n    };\n\n    // console.log(columns);\n    const file = new AngularCsv(tmpData, 'Formbuilder', options);\n    // console.log('csv', file);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n  \n    vertical_align_bottom\n  \n  \n  \n\n\n  \n    \n      \n        {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}\n      \n      \n        {{ element[collumn.collumnName] }}\n      \n    \n  \n\n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n    \n    \n      \n        delete_forever\n      \n      \n        edit\n      \n      \n        get_app\n      \n    \n  \n\n  \n  \n\n\n\n  \n    File Upload\n  \n\n  \n  \n    Löschen\n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                table {\n  width: 100%;\n}\n.row {\n  display: flex;\n  flex-direction: row-reverse;\n  margin-bottom: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              vertical_align_bottom                          {{ collumn.collumnKey? (collumn.collumnKey | translate) : collumn.collumnName }}                    {{ element[collumn.collumnName] }}                                                                                delete_forever                    edit                    get_app                      File Upload          Löschen  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputComponent.html":{"url":"components/TextInputComponent.html","title":"component - TextInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseFieldComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-input\n            \n\n            \n                styleUrls\n                ./text-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                    Public\n                                fs\n                            \n                            \n                                    Public\n                                ts\n                            \n                            \n                                field\n                            \n                            \n                                init\n                            \n                            \n                                    Private\n                                    Readonly\n                                MSGerrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                get\n                            \n                            \n                                getErrorMeesage\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getMeesage\n                            \n                            \n                                getName\n                            \n                            \n                                getValidators\n                            \n                            \n                                getValue\n                            \n                            \n                                iconAct\n                            \n                            \n                                    Public\n                                setUpConfig\n                            \n                            \n                                synchronizeValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rows\n                            \n                            \n                                autocomplete\n                            \n                            \n                                change\n                            \n                            \n                                control\n                            \n                            \n                                customValidation\n                            \n                            \n                                disabled\n                            \n                            \n                                form\n                            \n                            \n                                hint\n                            \n                            \n                                hintlabel\n                            \n                            \n                                htmlAttribute\n                            \n                            \n                                htmlType\n                            \n                            \n                                iconAction\n                            \n                            \n                                iconBtn\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                name\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                            \n                                tooltip\n                            \n                            \n                                validators\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, fs: FormService, ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'on'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:47\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:49\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:37\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customValidation\n                    \n                \n                \n                    \n                        Type :         ICustomValidation[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:45\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:30\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:36\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:39\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hintlabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:38\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlAttribute\n                    \n                \n                \n                    \n                        Type :         IHTMLAttributes\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:46\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        htmlType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:41\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconAction\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:43\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconBtn\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:42\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:34\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:32\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:33\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:31\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home_ui_new'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:35\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:40\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validators\n                    \n                \n                \n                    \n                        Type :         IValidator\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:44\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFieldComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFieldComponent:28\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseFieldComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMeesage\n                        \n                    \n                \n            \n            \n                \ngetErrorMeesage()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFieldConfig\n                        \n                    \n                \n            \n            \n                \ngetFieldConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeesage\n                        \n                    \n                \n            \n            \n                \ngetMeesage(type: string, param: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidators\n                        \n                    \n                \n            \n            \n                \ngetValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:151\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconAct\n                        \n                    \n                \n            \n            \n                \niconAct()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:192\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUpConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpConfig(config: IField)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                IField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        synchronizeValidator\n                        \n                    \n                \n            \n            \n                \nsynchronizeValidator()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFieldComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFieldComponent:159\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationService\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IField\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MSGerrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    required: () => 'Das ist ein Pflichtfeld!',\n    maxlength: param => `Maximale Länge ${param.requiredLength}!`,\n    minlength: param => `Mindestens ${param.requiredLength} Zeichen eingeben!`,\n    max: param => `Maximum beträgt ${param.max}!`,\n    min: param => `Minimum beträgt ${param.min}!`,\n    pattern: param =>\n      `Das Pattern: ${param.pattern} wurde nicht eingehalten!`,\n    email: () => 'Keine valide Emailadresse',\n    matDatepickerParse: () => 'Falsches Datumsformat'\n  }\n                    \n                \n                        \n                            \n                                Inherited from         BaseFieldComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFieldComponent:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { BaseFieldComponent } from '../../classes/field';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../../services/form.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss']\n})\nexport class TextInputComponent extends BaseFieldComponent implements OnInit {\n  @Input() rows = 3;\n\n  constructor(public fb: FormBuilder,\n              public fs: FormService,\n              public ts: TranslationService) {\n    super(fb, fs, ts);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    // console.log(this.control);\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n      \n        {{ iconBtn }}\n      \n    \n      {{iconBtn}}\n     -->\n    {{ hint }}\n    \n      {{ getErrorMeesage() }}\n    \n  \n  \n    \n      \n  {{ hint }}\n  \n    {{ getErrorMeesage() }}\n  \n\n\n\n    \n\n    \n                \n                    ./text-input.component.scss\n                \n                mat-form-field {\n  width: 100%;\n  max-width: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ iconBtn }}                {{iconBtn}}     -->    {{ hint }}          {{ getErrorMeesage() }}                    {{ hint }}      {{ getErrorMeesage() }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'BaseFieldComponent', 'selector': 'app-base-field'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DateInputComponent', 'selector': 'app-date-input'},{'name': 'ErrorDialogSimpleComponent', 'selector': 'app-error-dialog-simple'},{'name': 'FileInputComponent', 'selector': 'app-file-input'},{'name': 'FormbuilderComponent', 'selector': 'lib-formbuilder'},{'name': 'InfoDialogSimpleComponent', 'selector': 'app-info-dialog-simple'},{'name': 'RadiobuttonComponent', 'selector': 'app-radiobutton'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SliderComponent', 'selector': 'app-slider'},{'name': 'SlideToggleComponent', 'selector': 'app-slidetoggle'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextInputComponent', 'selector': 'app-text-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TranslatePipe.html":{"url":"pipes/TranslatePipe.html","title":"pipe - TranslatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TranslatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        translate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(key: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: TranslationService) { }\n  transform(key: any): any {\n    // console.log(key);\n    if(key !== 'undefined') {\n// console.log(this.translate.data);\n\n      return this.translate.data[key] || '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _path\n                            \n                            \n                                data\n                            \n                            \n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLang\n                            \n                            \n                                setPath\n                            \n                            \n                                updateData\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPath\n                        \n                    \n                \n            \n            \n                \nsetPath(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/translation.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'de'\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/translation.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, Input, Output, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onLangChange: EventEmitter = new EventEmitter();\n// tslint:disable-next-line: no-output-on-prefix\n  @Output() onDataChange: EventEmitter = new EventEmitter();\n\n  data: any = {};\n  lang = 'de';\n\n  private _path = '';\n  constructor(private http: HttpClient) {\n    this.onDataChange.subscribe(val => {\n      this.updateData(val);\n    });\n    this.onLangChange.subscribe(val => {\n      this.lang = val;\n    });\n  }\n\n  setPath(path: string) {\n    this._path = path;\n  }\n\n  setLang(lang: string) {\n    this.lang = lang;\n    this.use(this.lang);\n    this.onLangChange.emit(this.lang);\n  }\n\n  updateData(data: any) {\n    Object.assign(this.data, data);\n    // this.onDataChange.emit(this.data);\n  }\n\n  use(lang: string): Promise {\n    return new Promise((resolve, reject) => {\n      const langPath = `${this._path}${lang || 'de'}.json`;\n      // console.log(langPath);\n      this.http.get(langPath).subscribe(\n        translation => {\n          // console.log(translation);\n          this.data = Object.assign({}, translation || {});\n          this.lang = lang;\n          this.onDataChange.emit(this.data);\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiBaseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                headers\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                addUserAndRoles\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                editUserAndRoles\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                searchUsers\n                            \n                            \n                                updateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogService: DialogService)\n                    \n                \n                        \n                            \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserAndRoles\n                        \n                    \n                \n            \n            \n                \naddUserAndRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReplaySubject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserAndRoles\n                        \n                    \n                \n            \n            \n                \neditUserAndRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:47\n                \n            \n\n\n            \n                \n                    Gets current users profile.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Get the allowed actions of the current user\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:71\n                \n            \n\n\n            \n                \n                    get all users\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(search: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRoles\n                        \n                    \n                \n            \n            \n                \nupdateRoles(user: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/formbuilder/src/lib/services/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8')\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {headers: this.headers}\n                    \n                \n                    \n                        \n                                Defined in projects/formbuilder/src/lib/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { forkJoin, Observable, ReplaySubject } from 'rxjs';\nimport { DialogService } from './dialog.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private readonly headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Charset', 'UTF-8');\n\n  private options: Object = {headers: this.headers};\n\n  private readonly apiBaseUrl: string;\n\n  constructor(private http: HttpClient,\n    private dialogService: DialogService\n  ) {\n    this.apiBaseUrl = '/api';\n  }\n\n  login(credentials: any): Observable {\n    const headers = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Charset', 'UTF-8')\n      .set('Authorization', 'Basic ' + btoa(credentials));\n\n    const options: Object = {\n      headers: headers,\n      observe: 'response',\n      withCredentials: true\n    };\n    return this.http.post('/api/login', null, options);\n  }\n\n  logout(): Observable {\n    this.options = {headers: this.headers};\n    return this.http.delete('/api/logout', this.options);\n  }\n\n  /**\n   * Gets current users profile.\n   */\n  getUserProfile(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/profile`, options);\n\n    return this.http.get(`/api/user`, this.options);\n  }\n\n  /**\n   * Get the allowed actions of the current user\n   */\n  getUserRoles(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    // return this.http.get(this.apiBaseUrl + `user/role`, options)\n    //   .pipe(\n    //     map(value => value['actions'])\n    //   );\n    return this.http.get('/api/user', this.options);\n  }\n\n  /**\n   * get all users\n   */\n  getUsers(): Observable {\n    // const headers = this.headers.set('useMockup', 'true');\n    // const options = {headers: headers};\n    return this.http.get('/api/user', this.options);\n  }\n\n  getUser(userId: number): Observable {\n    return this.http.get(`/api/user/${userId}`, this.options);\n  }\n\n  addUser(user: any): Observable {\n    return this.http.post('/api/user/', JSON.stringify(user), this.options);\n  }\n\n  addUserAndRoles(user: any): ReplaySubject {\n    // check if bkuUser already exists\n    const done = new ReplaySubject(1);\n    this.addUser(user).subscribe(addUserRes => {\n      user.id = addUserRes.id;\n      this.updateRoles(user).subscribe(updateRoleResp => done.next(updateRoleResp));\n    }, error => {\n      this.dialogService.showErrorDialog('Error');\n    });\n    return done;\n  }\n\n  editUser(user: any): Observable {\n    return this.http.put(`/api/user/${user.id}`, JSON.stringify(user), this.options);\n  }\n\n  editUserAndRoles(user: any): Observable {\n    return forkJoin(this.editUser(user), this.updateRoles(user));\n  }\n\n  deleteUser(user: any): Observable {\n    return this.http.delete(`/api/user/${user.id}`, this.options);\n  }\n\n  updateRoles(user: any) {\n    const rolesObject = {\n      'roles': user.roles\n    };\n    return this.http.put(`/api/user//${user.id}`, JSON.stringify(rolesObject), this.options);\n  }\n\n  searchUsers(search: string) {\n    return this.http.get(\n      '/api/user?partlastname=' + search,\n      this.options\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            AngularCsv\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            class\n            CsvConfigConsts\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            interface\n            Options\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            objectAssign\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            function\n            toObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            ConfigDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            hasOwnProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/angular-csv.ts\n            \n            variable\n            propIsEnumerable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/classes/field.ts\n            \n            component\n            BaseFieldComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.component.ts\n            \n            component\n            FormbuilderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/formbuilder.service.ts\n            \n            injectable\n            FormbuilderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n            \n            interface\n            optionsConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            ICustomValidation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/icustom-validation.ts\n            \n            interface\n            IDialogConfig\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            ICodeEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IField\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IFormObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ifield.ts\n            \n            interface\n            IHTMLAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/iform.ts\n            \n            interface\n            IForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            class\n            AutoSearch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/imenu.ts\n            \n            interface\n            MenuNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/isliderconfig.ts\n            \n            interface\n            ISliderConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/interfaces/ivalidator.ts\n            \n            interface\n            IValidator\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            injectable\n            DataConnectorService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-connector.service.ts\n            \n            interface\n            searchObj\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            injectable\n            DataFlattnerService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-flattner.service.ts\n            \n            interface\n            IFlatObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/data-store.service.ts\n            \n            injectable\n            DataStoreService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/form.service.ts\n            \n            function\n            difference\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.pipe.ts\n            \n            pipe\n            TranslatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            function\n            checkKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n            \n            variable\n            _filter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/date-input/date-input.component.ts\n            \n            component\n            DateInputComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/error-dialog-simple/error-dialog-simple.component.ts\n            \n            component\n            ErrorDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/dialogs/info-dialog-simple/info-dialog-simple.component.ts\n            \n            component\n            InfoDialogSimpleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/file-input/file-input.component.ts\n            \n            component\n            FileInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/radiobutton/radiobutton.component.ts\n            \n            component\n            RadiobuttonComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slideToggle/slideToggle.component.ts\n            \n            component\n            SlideToggleComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/slider/slider.component.ts\n            \n            component\n            SliderComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/table/table.component.ts\n            \n            interface\n            ITableViewOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/formbuilder/src/lib/ui-components/text-input/text-input.component.ts\n            \n            component\n            TextInputComponent\n            \n                0 %\n                (0/42)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.9\n        \n            @angular/cdk : ~12.2.9\n        \n            @angular/common : ~12.2.9\n        \n            @angular/compiler : ^12.2.9\n        \n            @angular/core : ~12.2.9\n        \n            @angular/forms : ~12.2.9\n        \n            @angular/localize : ^12.2.9\n        \n            @angular/material : ^12.2.9\n        \n            @angular/material-moment-adapter : ^12.2.9\n        \n            @angular/platform-browser : ~12.2.9\n        \n            @angular/platform-browser-dynamic : ~12.2.9\n        \n            @angular/router : ~12.2.9\n        \n            @types/pouchdb : ^6.4.0\n        \n            body-parser : ^1.19.0\n        \n            express : ^4.17.1\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.21\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.1\n        \n            util : ^0.12.4\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableType   (projects/.../table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/table/table.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TableType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : FILE\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkKey   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            difference   (projects/.../form.service.ts)\n                        \n                        \n                            objectAssign   (projects/.../angular-csv.ts)\n                        \n                        \n                            toObject   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkKey\n                        \n                    \n                \n            \n            \n                \ncheckKey(ts: TranslationService, item: string, value: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ts\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/services/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        difference\n                        \n                    \n                \n            \n            \n                \ndifference(newObj: any, origObj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    origObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        objectAssign\n                        \n                    \n                \n            \n            \n                \nobjectAssign(target: any, ...source: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Assign data  to new Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any\n\n                                    \n                                \n                                \n                                    source\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : any[]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toObject\n                        \n                    \n                \n            \n            \n                \ntoObject(val: any)\n                \n            \n\n\n\n\n            \n                \n                    Convet to Object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :any\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularFormbuilder\nThis project was generated with Angular CLI version 10.\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nTo start the generating server run DEBUG=express:* node ./server/app.js\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FormbuilderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/optionsConfig.html":{"url":"interfaces/optionsConfig.html","title":"interface - optionsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  optionsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/interfaces/iautocompleteoption.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entriesPerPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadAfterPercentscrolled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchAfterNthCharacter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showAsObject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiEndpoint:     URL\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     URL\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entriesPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entriesPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupBy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadAfterPercentscrolled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadAfterPercentscrolled:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchAfterNthCharacter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchAfterNthCharacter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAsObject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showAsObject:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface optionsConfig {\n    showAsObject?: {\n        KeyToSave: string | null\n    };\n    groupBy?: boolean;\n    apiEndpoint?: URL;\n    entriesPerPage?: number;\n    searchAfterNthCharacter?: number;\n    loadAfterPercentscrolled?: number;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormbuilderModule\n\n\n\ncluster_FormbuilderModule_declarations\n\n\n\ncluster_FormbuilderModule_exports\n\n\n\ncluster_FormbuilderModule_providers\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nFormbuilderModule\n\nFormbuilderModule\n\nFormbuilderModule -->\n\nAutocompleteComponent->FormbuilderModule\n\n\n\n\n\nBaseFieldComponent\n\nBaseFieldComponent\n\nFormbuilderModule -->\n\nBaseFieldComponent->FormbuilderModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nFormbuilderModule -->\n\nCheckboxComponent->FormbuilderModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nFormbuilderModule -->\n\nConfirmDialogComponent->FormbuilderModule\n\n\n\n\n\nDateInputComponent\n\nDateInputComponent\n\nFormbuilderModule -->\n\nDateInputComponent->FormbuilderModule\n\n\n\n\n\nErrorDialogSimpleComponent\n\nErrorDialogSimpleComponent\n\nFormbuilderModule -->\n\nErrorDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nFileInputComponent\n\nFileInputComponent\n\nFormbuilderModule -->\n\nFileInputComponent->FormbuilderModule\n\n\n\n\n\nFormbuilderComponent\n\nFormbuilderComponent\n\nFormbuilderModule -->\n\nFormbuilderComponent->FormbuilderModule\n\n\n\n\n\nInfoDialogSimpleComponent\n\nInfoDialogSimpleComponent\n\nFormbuilderModule -->\n\nInfoDialogSimpleComponent->FormbuilderModule\n\n\n\n\n\nRadiobuttonComponent\n\nRadiobuttonComponent\n\nFormbuilderModule -->\n\nRadiobuttonComponent->FormbuilderModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nFormbuilderModule -->\n\nSelectComponent->FormbuilderModule\n\n\n\n\n\nSlideToggleComponent\n\nSlideToggleComponent\n\nFormbuilderModule -->\n\nSlideToggleComponent->FormbuilderModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nFormbuilderModule -->\n\nSliderComponent->FormbuilderModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nFormbuilderModule -->\n\nTableComponent->FormbuilderModule\n\n\n\n\n\nTextInputComponent\n\nTextInputComponent\n\nFormbuilderModule -->\n\nTextInputComponent->FormbuilderModule\n\n\n\n\n\nTranslatePipe\n\nTranslatePipe\n\nFormbuilderModule -->\n\nTranslatePipe->FormbuilderModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nFormbuilderModule->AutocompleteComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nFormbuilderModule->CheckboxComponent \n\n\n\n\n\nDateInputComponent \n\nDateInputComponent \n\nDateInputComponent  -->\n\nFormbuilderModule->DateInputComponent \n\n\n\n\n\nFileInputComponent \n\nFileInputComponent \n\nFileInputComponent  -->\n\nFormbuilderModule->FileInputComponent \n\n\n\n\n\nFormbuilderComponent \n\nFormbuilderComponent \n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\nFormbuilderComponent  -->\n\nFormbuilderModule->FormbuilderComponent \n\n\n\n\n\nRadiobuttonComponent \n\nRadiobuttonComponent \n\nRadiobuttonComponent  -->\n\nFormbuilderModule->RadiobuttonComponent \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nFormbuilderModule->SelectComponent \n\n\n\n\n\nSlideToggleComponent \n\nSlideToggleComponent \n\nSlideToggleComponent  -->\n\nFormbuilderModule->SlideToggleComponent \n\n\n\n\n\nSliderComponent \n\nSliderComponent \n\nSliderComponent  -->\n\nFormbuilderModule->SliderComponent \n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nFormbuilderModule->TableComponent \n\n\n\n\n\nTextInputComponent \n\nTextInputComponent \n\nTextInputComponent  -->\n\nFormbuilderModule->TextInputComponent \n\n\n\n\n\nTranslatePipe \n\nTranslatePipe \n\nTranslatePipe  -->\n\nFormbuilderModule->TranslatePipe \n\n\n\n\n\nConfigService\n\nConfigService\n\nFormbuilderModule -->\n\nConfigService->FormbuilderModule\n\n\n\n\n\nDataFlattnerService\n\nDataFlattnerService\n\nFormbuilderModule -->\n\nDataFlattnerService->FormbuilderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/searchObj.html":{"url":"interfaces/searchObj.html","title":"interface - searchObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  searchObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/formbuilder/src/lib/services/data-connector.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface searchObj {\n  id?: string;\n  categories?: string[];\n  text?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataConnectorService {\n\n  url = 'api';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  create(post: any, itemType: string) {\n    return this.http.post(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n}\n\nupdate(id: string, post: any, itemType: string) {\n  if (post) {\n    return this.http.put(\n      '/api/'+ itemType,\n      { ['item']: post },\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n  return 'incoorect input';\n}\n\nget(itemType: string, id: string = \"0\", kat: string[] = [], txt: string = '') {\n  let res: any[];\n  res = [];\n  let search: searchObj = {};\n\n  if (id !== '0') {\n    search.id = id;\n  }\n\n  if (kat && kat.length > 0) {\n    search.categories = kat;\n  }\n\n  if (txt !== '') {\n    search.text = txt;\n  }\n\n  let options: {\n    headers: HttpHeaders;\n    params?: any;\n  } = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    params: search\n  };\n  return this.http.get('/api/' + itemType, options);\n}\n\ndelete(id: string, itemType: string) {\n  if (id) {\n    return this.http.delete('/api/'+ itemType, {\n      headers: { 'Content-Type': 'application/json' },\n      params: {id: id}\n    });\n  }\n  return 'no id';\n}\n\n  getFields() {\n    return this.http.get(this.url + '/get');\n  }\n\n  insertField(field: any) {\n    return this.http.post(this.url + '/insert', field);\n  }\n\n  deleteField(id) {\n    return this.http.delete(this.url + '/delete', id);\n  }\n\n  getAsyncValidation(url: string, body: any) {\n    return this.http.post(url, body).pipe(\n      map(value => {\n        if (value) {\n          return value;\n        } else {\n          return timer(2000).pipe(\n            map(() => {\n              return {'error': true};\n            })\n          );\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _filter   (projects/.../autocomplete.component.ts)\n                        \n                        \n                            ConfigDefaults   (projects/.../angular-csv.ts)\n                        \n                        \n                            hasOwnProperty   (projects/.../angular-csv.ts)\n                        \n                        \n                            propIsEnumerable   (projects/.../angular-csv.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/formbuilder/src/lib/ui-components/autocomplete/autocomplete.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (opt: any[], value: string, ts:TranslationService): string[] => {\n  const filterValue = value.toLowerCase();\n\n  if (typeof opt[0] === 'string') {\n    return opt.filter(item => checkKey(ts, item, filterValue));\n  } else {\n    return opt.filter(\n      item => checkKey(ts, item.name, filterValue)\n    );\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/formbuilder/src/lib/classes/angular-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConfigDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Options\n\n                    \n                \n                \n                    \n                        Default value : {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  objHeader: CsvConfigConsts.DEFAULT_OBJ_HEADER,\n  useObjHeader: CsvConfigConsts.DEFAULT_USE_OBJ_HEADER,\n  useHeader: CsvConfigConsts.DEFAULT_USE_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  nullToEmptyString: CsvConfigConsts.DEFAULT_NULL_TO_EMPTY_STRING\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOwnProperty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.hasOwnProperty\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propIsEnumerable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.prototype.propertyIsEnumerable\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
